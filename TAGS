 line does	hargs.el~	623
"hyperbole"	hyperbole-pkg.el	/^(define-package "hyperbole" "8.0.1pre" "GNU Hyperb/
# git archive --format	Makefile	/^        # git archive --format=tar --prefix=hyperb/
# website maintenance	Makefile.html	/^# website maintenance: "<a href="https:\/\/www.gnu.o/
$	Makefile (norlinux's conflicted copy 2023-09-09)	/^	  cd $(man_dir); $(INSTALL) hyperbole.info* $(inf/
$(data_dir)/hkey-help.txt	Makefile	/^$(data_dir)\/hkey-help.txt: $(man_dir)\/hkey-help.tx/
$(html_dir)/hyperbole.html	Makefile	/^$(html_dir)\/hyperbole.html: $(man_dir)\/hyperbole.h/
$(info_dir)/hyperbole.info	Makefile	/^$(info_dir)\/hyperbole.info: $(man_dir)\/hyperbole.i/
$(man_dir)/hyperbole.html	Makefile	/^$(man_dir)\/hyperbole.html: $(TEXINFO_SRC) $(man_di/
$(man_dir)/hyperbole.info	Makefile	/^$(man_dir)\/hyperbole.info: $(TEXINFO_SRC)$/
$(man_dir)/hyperbole.pdf	Makefile	/^$(man_dir)\/hyperbole.pdf: $(TEXINFO_SRC)$/
$(pkg_parent)/hyperbole-$(HYPB_VERSION).tar	Makefile	/^$(pkg_parent)\/hyperbole-$(HYPB_VERSION).tar: versi/
$(pkg_parent)/hyperbole-$(HYPB_VERSION).tar.gz	Makefile	/^$(pkg_parent)\/hyperbole-$(HYPB_VERSION).tar.gz:$/
$(pkg_parent)/hyperbole-$(HYPB_VERSION).tar.sig	Makefile	/^$(pkg_parent)\/hyperbole-$(HYPB_VERSION).tar.sig: $/
%.elc	Makefile	/^%.elc: %.el$/
%.elc	Makefile	/^%.elc: %.el$/
(message \"  emacs-version	Makefile	/^                                 (message \\"  emac/
*hhist*	hhist.el	/^(defconst *hhist* nil$/
.	hui-mini-ext.el~	74
.PHONY	Makefile	/^.PHONY: src new-bin remove-elc bin eln$/
.PHONY	Makefile	/^.PHONY: tests test test-ert all-tests test-all$/
.PHONY	Makefile	/^.PHONY: install-elpa install-elpa-devel install-ta/
.SUFFIXES	Makefile	/^.SUFFIXES:            # Delete the default suffixe/
.SUFFIXES	Makefile	/^.SUFFIXES: .el .elc   # Define the list of file su/
@	hargs.el~	651
@	stef.patch	5
A	TODO-S-and-P.csv	14
A	TODO-S-and-P.csv	25
A	TODO-S-and-P.csv	34
AAL	TODO-S-and-P.csv	30
AAP	TODO-S-and-P.csv	9
AAPL	TODO-S-and-P.csv	47
ABBV	TODO-S-and-P.csv	4
ABC	TODO-S-and-P.csv	37
ABT	TODO-S-and-P.csv	3
ACN	TODO-S-and-P.csv	5
ADBE	TODO-S-and-P.csv	8
ADI	TODO-S-and-P.csv	42
ADM	TODO-S-and-P.csv	49
ADP	TODO-S-and-P.csv	55
ADS	TODO-S-and-P.csv	22
ADSK	TODO-S-and-P.csv	54
AEE	TODO-S-and-P.csv	29
AEP	TODO-S-and-P.csv	31
AES	TODO-S-and-P.csv	10
AET	TODO-S-and-P.csv	11
AFL	TODO-S-and-P.csv	13
AGN	TODO-S-and-P.csv	21
AIG	TODO-S-and-P.csv	33
AIV	TODO-S-and-P.csv	46
AIZ	TODO-S-and-P.csv	52
AJG	TODO-S-and-P.csv	51
AKAM	TODO-S-and-P.csv	16
ALB	TODO-S-and-P.csv	18
ALK	TODO-S-and-P.csv	17
ALL	TODO-S-and-P.csv	24
ALLE	TODO-S-and-P.csv	20
ALXN	TODO-S-and-P.csv	19
AMAT	TODO-S-and-P.csv	48
AME	TODO-S-and-P.csv	38
AMG	TODO-S-and-P.csv	12
AMGN	TODO-S-and-P.csv	39
AMP	TODO-S-and-P.csv	36
AMT	TODO-S-and-P.csv	34
AMZN	TODO-S-and-P.csv	28
AN	TODO-S-and-P.csv	56
ANTM	TODO-S-and-P.csv	43
AON	TODO-S-and-P.csv	44
APA	TODO-S-and-P.csv	45
APC	TODO-S-and-P.csv	41
APD	TODO-S-and-P.csv	15
APH	TODO-S-and-P.csv	40
ARNC	TODO-S-and-P.csv	50
ATVI	TODO-S-and-P.csv	6
AVB	TODO-S-and-P.csv	58
AVY	TODO-S-and-P.csv	59
AWK	TODO-S-and-P.csv	35
AXP	TODO-S-and-P.csv	32
AYI	TODO-S-and-P.csv	7
AZO	TODO-S-and-P.csv	57
AbbVie	TODO-S-and-P.csv	4
Again	HYPB-Tutorial-Greenburg.txt	54
Again	HYPB-Tutorial-Greenburg.txt~	54
Allegion	TODO-S-and-P.csv	20
Also	V9-For-HY-NEWS.org~	77
Anyway	HYP-MAN.txt	23
Augment	EXAMPLE.kotl	/^      3b1. Autonumbering: Full auto-numbering in A/
BAC	TODO-S-and-P.csv	62
BATCHFLAGS	Makefile	/^BATCHFLAGS = --batch --quick --eval "(progn (setq /
BCR	TODO-S-and-P.csv	63
BHI	TODO-S-and-P.csv	60
BLL	TODO-S-and-P.csv	61
Bard	TODO-S-and-P.csv	/^BCR,Bard (C.R.) Inc.,Health Care,245.69,0.42,34.95/
Blizzard	TODO-S-and-P.csv	6
Book	TODO-S-and-P.csv	1
C	TODO-S-and-P.csv	26
CP	Makefile	/^CP = \\cp -p$/
CVS	Makefile	/^CVS = \\cvs$/
Cap	TODO-S-and-P.csv	1
Care	TODO-S-and-P.csv	3
Care	TODO-S-and-P.csv	4
Care	TODO-S-and-P.csv	11
Care	TODO-S-and-P.csv	14
Care	TODO-S-and-P.csv	19
Care	TODO-S-and-P.csv	21
Care	TODO-S-and-P.csv	37
Care	TODO-S-and-P.csv	39
Care	TODO-S-and-P.csv	43
Co	TODO-S-and-P.csv	32
Co	TODO-S-and-P.csv	49
Code	hargs.el~	26
Code	hui.el~	17
Commentary	hargs.el~	15
Commentary	hui-2-tests.el~	13
Commentary	hui.el~	15
Commentary	hypb-ert.el~	15
Company	TODO-S-and-P.csv	2
Copyright	COPYING	/^ Copyright (C) 2007 Free Software Foundation, Inc./
Copyright	hsys-org-roam.el~	/^;; Copyright (C) 2021  RWorks$/
Copyright	hsys-youtube.el~	/^;; Copyright (C) 2021  RWorks$/
Copyright	hui-2-tests.el~	/^;; Copyright (C) 2021  Free Software Foundation, I/
Copyright	hypb-ert.el~	/^;; Copyright (C) 2021  Free Software Foundation, I/
Corp	TODO-S-and-P.csv	10
Corp	TODO-S-and-P.csv	18
Corp	TODO-S-and-P.csv	23
Corp	TODO-S-and-P.csv	24
Corp	TODO-S-and-P.csv	29
Corp	TODO-S-and-P.csv	37
Corp	TODO-S-and-P.csv	40
Corp	TODO-S-and-P.csv	41
Corp	TODO-S-and-P.csv	59
Corp	TODO-S-and-P.csv	61
Corp	TODO-S-and-P.csv	62
Corporation	TODO-S-and-P.csv	45
DEMO	HY-WHY.kotl	14
December	COPYING	183
Dired	HY-USES.kotl	70
Dired	HY-USES.kotl	78
Discretionary	TODO-S-and-P.csv	9
Discretionary	TODO-S-and-P.csv	28
Discretionary	TODO-S-and-P.csv	56
Discretionary	TODO-S-and-P.csv	57
EBITDA	TODO-S-and-P.csv	1
ELC_COMPILE	Makefile	/^ELC_COMPILE = $(EL_COMPILE:.el=.elc)$/
ELC_KOTL	Makefile	/^ELC_KOTL = $(EL_KOTL:.el=.elc)$/
ELISP_TO_COMPILE	Makefile	/^ELISP_TO_COMPILE = $(pkg_parent)\/elc-${USER}$/
EL_COMPILE	Makefile	/^EL_COMPILE = hact.el hactypes.el hargs.el hbdata.e/
EL_KOTL	Makefile	/^EL_KOTL = kotl\/kexport.el kotl\/kfile.el kotl\/kfill/
EL_SRC	Makefile	/^EL_SRC = $(EL_COMPILE) hvm.el$/
EL_TAGS	Makefile	/^EL_TAGS = $(EL_SRC) $(EL_KOTL) $(TEST_ERT_FILES)$/
EMACS	Makefile	/^EMACS = \\emacs$/
EMACS_BATCH	Makefile	/^EMACS_BATCH=$(EMACS) $(BATCHFLAGS) $(PRELOADS)$/
EMACS_PLAIN_BATCH	Makefile	/^EMACS_PLAIN_BATCH=$(EMACS) $(BATCHFLAGS)$/
ETAGS	Makefile	/^ETAGS = \\etags$/
Earnings	TODO-S-and-P.csv	1
Emacs	HY-ANNOUNCE-7.0.3	91
Emacs	HY-ANNOUNCE-7.2.1	47
Energy	TODO-S-and-P.csv	41
Energy	TODO-S-and-P.csv	45
Energy	TODO-S-and-P.csv	60
Enjoy	HY-ANNOUNCE	129
Enjoy	HY-ANNOUNCE-7.0.3	200
Enjoy	HY-ANNOUNCE-7.0.3	239
Enjoy	HY-ANNOUNCE-7.1.3	78
Enjoy	HY-ANNOUNCE-8.0.0	124
Enjoy	HY-ANNOUNCE-8.0.0~	123
Estate	TODO-S-and-P.csv	34
Estate	TODO-S-and-P.csv	46
Estate	TODO-S-and-P.csv	58
Examples	hypb-ert.el~	20
FSF	TODO-MATS-QUES	8
FSF	TODO-MATS-QUES	8
Failed	TEST-ERRORS.txt	/^Failed:  2 (2 unexpected)$/
Financial	TODO-S-and-P.csv	36
Financials	TODO-S-and-P.csv	12
Financials	TODO-S-and-P.csv	13
Financials	TODO-S-and-P.csv	24
Financials	TODO-S-and-P.csv	32
Financials	TODO-S-and-P.csv	33
Financials	TODO-S-and-P.csv	36
Financials	TODO-S-and-P.csv	44
Financials	TODO-S-and-P.csv	51
Financials	TODO-S-and-P.csv	52
Financials	TODO-S-and-P.csv	62
Foundation	COPYING	639
Foundation	hargs.el~	10
Foundation	hui.el~	10
GNUFTP	Makefile	/^GNUFTP = \\gnupload --to ftp.gnu.org:hyperbole --re/
GOOG	TODO-S-and-P.csv	26
GOOGL	TODO-S-and-P.csv	25
GPG	Makefile	/^GPG = \\gpg$/
GZIP	Makefile	/^GZIP = \\gzip -c$/
Gnus-init	hgnus.el	/^(defun Gnus-init ()$/
Group	TODO-S-and-P.csv	30
HTML	HY-USES.kotl	93
HY-TALK	Makefile	/^HY-TALK  = HY-TALK\/.hypb HY-TALK\/HYPB HY-TALK\/HY-T/
HYPB_BIN_WARN	Makefile	/^HYPB_BIN_WARN =$/
HYPB_BIN_WARN	Makefile	/^HYPB_BIN_WARN = --eval "(setq-default byte-compile/
HYPB_VERSION	Makefile	/^HYPB_VERSION = 8.0.1pre$/
HYPB_VERSION	Makefile (norlinux's conflicted copy 2023-09-09)	66
HYPB_WEB_REPO_LOCATION	Makefile	/^HYPB_WEB_REPO_LOCATION = "..\/hyweb\/hyperbole\/"$/
HYPERBOLE_FILES	Makefile	/^HYPERBOLE_FILES = dir info html $(EL_SRC) $(EL_KOT/
Helm	HY-ANNOUNCE-7.2.1	48
Hide	EXAMPLE.kotl	/^       3b13a. {C-c C-h}  - Hide (collapse) tree ro/
However	COPYING	415
HyControl	FAST-DEMO~	20
HyControl	HY-ANNOUNCE	47
HyControl	HY-ANNOUNCE-8.0.0	42
HyControl	HY-ANNOUNCE-8.0.0~	41
HyControl	HY-USES.kotl	81
HyRolo	FAST-DEMO~	18
HyRolo	HY-ABOUT	57
HyRolo	HY-ANNOUNCE	43
HyRolo	HY-ANNOUNCE-8.0.0	40
HyRolo	HY-ANNOUNCE-8.0.0~	39
HyRolo	HY-USES.kotl	95
Hyperbole	EXAMPLE.kotl	120
Hyperbole	hui.el~	1308
Hyperbole	HY-ABOUT	94
Hyperbole	HY-ANNOUNCE	125
Hyperbole	HY-ANNOUNCE-7.1.3	74
Hyperbole	HY-ANNOUNCE-8.0.0	120
Hyperbole	HY-ANNOUNCE-8.0.0~	119
Hyperbole	HYPB-Tutorial-Greenburg.txt	51
Hyperbole	HYPB-Tutorial-Greenburg.txt~	51
Hyperbole	HYP-MAN.txt	18
Hyperbole	README.md	17
Hyperbole	TODO-ORG-MODE	/^Subject:	Re: Differences between Org-Mode and Hype/
H©b	Hyperbole-Orig-Manual-from-Brown.pdf	712
INSTALL	Makefile	/^INSTALL = \\install -m 644 -c$/
Inc	TODO-S-and-P.csv	7
Inc	TODO-S-and-P.csv	8
Inc	TODO-S-and-P.csv	11
Inc	TODO-S-and-P.csv	12
Inc	TODO-S-and-P.csv	13
Inc	TODO-S-and-P.csv	14
Inc	TODO-S-and-P.csv	15
Inc	TODO-S-and-P.csv	16
Inc	TODO-S-and-P.csv	17
Inc	TODO-S-and-P.csv	27
Inc	TODO-S-and-P.csv	28
Inc	TODO-S-and-P.csv	35
Inc	TODO-S-and-P.csv	38
Inc	TODO-S-and-P.csv	39
Inc	TODO-S-and-P.csv	48
Inc	TODO-S-and-P.csv	50
Inc	TODO-S-and-P.csv	52
Inc	TODO-S-and-P.csv	53
Inc	TODO-S-and-P.csv	54
Inc	TODO-S-and-P.csv	56
Inc	TODO-S-and-P.csv	57
Inc	TODO-S-and-P.csv	60
Industrials	TODO-S-and-P.csv	2
Industrials	TODO-S-and-P.csv	7
Industrials	TODO-S-and-P.csv	17
Industrials	TODO-S-and-P.csv	20
Industrials	TODO-S-and-P.csv	30
Industrials	TODO-S-and-P.csv	38
Industrials	TODO-S-and-P.csv	50
Info	HY-USES.kotl	27
Info-build-menu-item-completions	hmouse-info.el	/^(defun Info-build-menu-item-completions (string _p/
Info-complete-menu-item	hmouse-info.el	/^(defun Info-complete-menu-item (string predicate a/
Info-current-filename-sans-extension	hmouse-info.el	/^(defun Info-current-filename-sans-extension ()$/
Info-handle-in-menu	hmouse-info.el	/^(defun Info-handle-in-menu ()$/
Info-handle-in-node-hdr	hmouse-info.el	/^(defun Info-handle-in-node-hdr ()$/
Info-handle-in-node-hdr-assist	hmouse-info.el	/^(defun Info-handle-in-node-hdr-assist ()$/
Info-handle-in-note	hmouse-info.el	/^(defun Info-handle-in-note ()$/
Info-menu-item-at-p	hmouse-info.el	/^(defun Info-menu-item-at-p ()$/
Info-node	hibtypes.el	/^(defib Info-node ()$/
Info-node-has-menu-p	hmouse-info.el	/^(defun Info-node-has-menu-p ()$/
Info-note-at-p	hmouse-info.el	/^(defun Info-note-at-p ()$/
Info-read-index-item-name	hmouse-info.el	/^(defun Info-read-index-item-name (prompt)$/
Info-read-index-item-name-1	hmouse-info.el	/^(defun Info-read-index-item-name-1 (string predica/
Jun	TODO-ORG-vs-HY	1
JJ	Hyperbole-Orig-Manual-from-Brown.pdf	3090
JJ	Hyperbole-Orig-Manual-from-Brown.pdf	4930
Key	HY-ANNOUNCE-7.0.3	90
Key	HYPB-Tutorial-Greenburg.txt	/^braces, such as {M-X}. When using your Smart Key (/
Key	HYPB-Tutorial-Greenburg.txt~	/^braces, such as {M-X}. When using your Smart Key (/
Keys	hui.el~	50
Koutlines	HYNOTE.kotl	8
Koutlines	HYNOTE.kotl~	8
LNT	TODO-S-and-P.csv	23
LOAD_TEST_ERT_FILES	Makefile	/^LOAD_TEST_ERT_FILES=$(patsubst %,(load-file \\"%\\")/
Laboratories	TODO-S-and-P.csv	3
Later	README	77
Later	README.html~	383
Later	README.md.html~	69
Library	hsys-org-roam.el~	2
Library	hsys-youtube.el~	2
License	COPYING	639
MAKE	Makefile	/^MAKE = \\make$/
MKDIR	Makefile	/^MKDIR = \\mkdir -p$/
MMM	TODO-S-and-P.csv	2
MO	TODO-S-and-P.csv	27
MSWindows	hargs.el~	186
MacOS	HY-ANNOUNCE-7.0.3	233
Markdown	HY-ANNOUNCE-7.0.3	103
Markdown	HY-USES.kotl	27
Materials	TODO-S-and-P.csv	15
Materials	TODO-S-and-P.csv	18
Materials	TODO-S-and-P.csv	59
Materials	TODO-S-and-P.csv	61
Menu	HY-WHY.kotl	68
Mgmt	TODO-S-and-P.csv	46
Mh-Summ-delete	hmh.el	/^(defun Mh-Summ-delete ()        (mh-delete-msg (mh/
Mh-Summ-expunge	hmh.el	/^(defalias 'Mh-Summ-expunge          'mh-execute-co/
Mh-Summ-goto	hmh.el	/^(defun Mh-Summ-goto ()$/
Mh-Summ-to	hmh.el	/^(defun Mh-Summ-to ()$/
Mh-Summ-undelete-all	hmh.el	/^(defun Mh-Summ-undelete-all ()$/
Mh-hbut-highlight	hmh.el	/^(defun Mh-hbut-highlight ()$/
Mh-init	hmh.el	/^(defun Mh-init ()$/
Mh-msg-hdrs-full	hmh.el	/^(defun Mh-msg-hdrs-full (_toggled)$/
Mh-msg-narrow	hmh.el	/^(defun Mh-msg-narrow ()$/
Mh-msg-next	hmh.el	/^(defun Mh-msg-next ()           (mh-next-undeleted/
Mh-msg-num	hmh.el	/^(defun Mh-msg-num ()$/
Mh-msg-prev	hmh.el	/^(defun Mh-msg-prev ()           (mh-previous-undel/
Mh-msg-to-p	hmh.el	/^(defun Mh-msg-to-p (_mail-msg-id mail-file)$/
Mh-msg-widen	hmh.el	/^(defun Mh-msg-widen ()$/
Mh-to	hmh.el	/^(defun Mh-to ()$/
N	EXAMPLE.kotl	148
Name	TODO-S-and-P.csv	1
Org	HY-ANNOUNCE-7.2.1	47
Org	HYNOTE.kotl	8
Org	HYNOTE.kotl~	8
Otherwise	FAST-DEMO	82
Otherwise	HYPB-Tutorial-Greenburg.txt	22
Otherwise	HYPB-Tutorial-Greenburg.txt~	22
Otherwise	INSTALL	35
Otherwise	INSTALL.orig	45
Outlines	HYNOTE.kotl	8
Outlines	HYNOTE.kotl~	8
Overview	EXAMPLE.kotl	182
Oç¾	Hyperbole-Orig-Manual-from-Brown.pdf	694
PM	TODO-ORG-vs-HY	1
PRELOADS	Makefile	/^PRELOADS = $(SITE_PRELOADS) -l .\/hload-path.el -l /
PRELOADS	Makefile (norlinux's conflicted copy 2023-09-09)	142
Parts	TODO-S-and-P.csv	9
Pharmaceuticals	TODO-S-and-P.csv	19
Power	TODO-S-and-P.csv	31
Previously	V9-For-HY-NEWS.org~	76
Price	TODO-S-and-P.csv	1
Processing	TODO-S-and-P.csv	55
README.md.html	Makefile	/^README.md.html: README.md$/
RET	FAST-DEMO	170
RET	FAST-DEMO~	89
RM	Makefile	/^RM = \\rm -f$/
RWorks	hsys-org-roam.el~	6
RWorks	hsys-youtube.el~	6
Referents	HY-WHY.kotl	68
Release	HY-ANNOUNCE-7.1.3	5
Return	hargs.el~	418
Rmail-Summ-delete	hrmail.el	/^(defalias 'Rmail-Summ-delete        'rmail-summary/
Rmail-Summ-expunge	hrmail.el	/^(defalias 'Rmail-Summ-expunge       'rmail-summary/
Rmail-Summ-goto	hrmail.el	/^(defalias 'Rmail-Summ-goto          'rmail-summary/
Rmail-Summ-to	hrmail.el	/^(defun Rmail-Summ-to ()$/
Rmail-Summ-undelete-all	hrmail.el	/^(defalias 'Rmail-Summ-undelete-all  'rmail-summary/
Rmail-init	hrmail.el	/^(defun Rmail-init ()$/
Rmail-msg-hdrs-full	hrmail.el	/^(defun Rmail-msg-hdrs-full (toggled)$/
Rmail-msg-narrow	hrmail.el	/^(defun Rmail-msg-narrow ()$/
Rmail-msg-next	hrmail.el	/^(defun Rmail-msg-next ()        (rmail-next-undele/
Rmail-msg-num	hrmail.el	/^(defun Rmail-msg-num ()$/
Rmail-msg-prev	hrmail.el	/^(defun Rmail-msg-prev ()        (rmail-previous-un/
Rmail-msg-to-p	hrmail.el	/^(defun Rmail-msg-to-p (mail-msg-id mail-file)$/
Rmail-msg-widen	hrmail.el	/^(defun Rmail-msg-widen ()$/
Rmail-to	hrmail.el	/^(defun Rmail-to ()$/
SHELL	Makefile	/^SHELL = \/bin\/sh$/
SITE_PRELOADS	Makefile	/^SITE_PRELOADS =$/
Sales	TODO-S-and-P.csv	1
Sector	TODO-S-and-P.csv	1
Series	HY-PROJS.org	/^S. Search or Series (Key Series)$/
Series	HY-PROJS.org~	/^S. Search or Series (Key Series)$/
Services	TODO-S-and-P.csv	53
Share	TODO-S-and-P.csv	1
Show	EXAMPLE.kotl	/^              {C-c C-s}  - Show (expand)   tree ro/
Show	EXAMPLE.kotl	/^              {C-c C-a}  - Show (expand) all cells/
Staples	TODO-S-and-P.csv	27
Staples	TODO-S-and-P.csv	49
Start	hui.el~	1767
Symbol	TODO-S-and-P.csv	1
Systems	TODO-S-and-P.csv	22
Sâ	hyperbole-banner.png	6
T	TODO-S-and-P.csv	53
TAGS	Makefile	/^TAGS: $(EL_TAGS)$/
TAR	Makefile	/^TAR = \\tar$/
TEST_ERT_FILES	Makefile	/^TEST_ERT_FILES = $(wildcard test\/*tests.el) $(wild/
TEXI2HTML	Makefile	/^TEXI2HTML = makeinfo --html --no-split --css-ref="/
TEXI2INFO	Makefile	/^TEXI2INFO = makeinfo --no-split -c ASCII_PUNCTUATI/
TEXI2PDF	Makefile	/^TEXI2PDF = makeinfo --pdf --no-split$/
TEXINFO_SRC	Makefile	/^TEXINFO_SRC = $(man_dir)\/hyperbole.texi $(man_dir)/
TFèL©3Zêk	Hyperbole-Orig-Manual-from-Brown.pdf	714
Technology	TODO-S-and-P.csv	5
Technology	TODO-S-and-P.csv	6
Technology	TODO-S-and-P.csv	8
Technology	TODO-S-and-P.csv	16
Technology	TODO-S-and-P.csv	22
Technology	TODO-S-and-P.csv	25
Technology	TODO-S-and-P.csv	26
Technology	TODO-S-and-P.csv	40
Technology	TODO-S-and-P.csv	42
Technology	TODO-S-and-P.csv	47
Technology	TODO-S-and-P.csv	48
Technology	TODO-S-and-P.csv	54
Technology	TODO-S-and-P.csv	55
Thus	HY-ABOUT	104
URLs	HY-ABOUT	26
URLs	HY-USES.kotl	21
URLs	README	81
URLs	README.html~	386
URLs	README.md.html~	74
Utilities	TODO-S-and-P.csv	10
Utilities	TODO-S-and-P.csv	23
Utilities	TODO-S-and-P.csv	29
Utilities	TODO-S-and-P.csv	31
Utilities	TODO-S-and-P.csv	35
VPATH	Makefile	/^VPATH = kotl man$/
Value	TODO-S-and-P.csv	1
Variables	hui-2-tests.el~	96
Version	COPYING	2
Vm-Summ-delete	hvm.el	/^(defun Vm-Summ-delete ()$/
Vm-Summ-expunge	hvm.el	/^(defalias 'Vm-Summ-expunge          'vm-expunge-fo/
Vm-Summ-goto	hvm.el	/^(defalias 'Vm-Summ-goto             'vm-follow-sum/
Vm-Summ-to	hvm.el	/^(defun Vm-Summ-to ()$/
Vm-Summ-undelete-all	hvm.el	/^(defun Vm-Summ-undelete-all ()$/
Vm-init	hvm.el	/^(defun Vm-init ()$/
Vm-msg-end	hvm.el	/^(defun Vm-msg-end ()$/
Vm-msg-hdrs-full	hvm.el	/^(defun Vm-msg-hdrs-full (toggled)$/
Vm-msg-narrow	hvm.el	/^(defun Vm-msg-narrow ()$/
Vm-msg-next	hvm.el	/^(defun Vm-msg-next ()           (vm-next-message 1/
Vm-msg-num	hvm.el	/^(defun Vm-msg-num ()$/
Vm-msg-prev	hvm.el	/^(defun Vm-msg-prev ()           (vm-previous-messa/
Vm-msg-start-regexp	hvm.el	/^(defvar Vm-msg-start-regexp "\\n\\nFrom \\\\|\\n\\001\\00/
Vm-msg-to-p	hvm.el	/^(defun Vm-msg-to-p (mail-msg-id mail-file)$/
Vm-msg-widen	hvm.el	/^(defun Vm-msg-widen ()$/
Vm-to	hvm.el	/^(defun Vm-to ()$/
Wed	TODO-ORG-vs-HY	1
Weiner	hargs.el~	3
Weiner	hargs.el~	6
Weiner	hsys-org-roam.el~	5
Weiner	hsys-org-roam.el~	10
Weiner	hsys-youtube.el~	5
Weiner	hsys-youtube.el~	10
Weiner	hui-2-tests.el~	6
Weiner	hui.el~	3
Weiner	hui.el~	6
Weiner	hypb-ert.el~	6
Yield	TODO-S-and-P.csv	1
ZIP	Makefile	/^ZIP = \\zip -qry$/
a	EXAMPLE.kotl	200
a	hui.el~	750
a	hui-mini-ext.el	/^(defun a ()$/
a	HY-TRY.el	/^(defun a ()$/
a	OLD-IBUT-AT-P.el	/^(defun a ()$/
a	vert-menus.el	/^(defun a (&rest strings)$/
above	FAST-DEMO	162
above	FAST-DEMO~	82
action	hibtypes.el	/^(defib action ()$/
action-key	hmouse-drv.el	/^(defun action-key ()$/
action-key-cancelled	hmouse-drv.el	/^(defvar action-key-cancelled nil$/
action-key-clear-variables	hmouse-drv.el	/^(defun action-key-clear-variables ()$/
action-key-default-function	hui-mouse.el	/^(defcustom action-key-default-function #'action-ke/
action-key-depress	hmouse-drv.el	/^(defun action-key-depress (&rest args)$/
action-key-depress-args	hmouse-drv.el	/^(defvar action-key-depress-args nil$/
action-key-depress-buffer	hmouse-drv.el	/^(defvar action-key-depress-buffer nil$/
action-key-depress-emacs	hmouse-drv.el	/^(defun action-key-depress-emacs (event)$/
action-key-depress-position	hmouse-drv.el	/^(defvar action-key-depress-position nil$/
action-key-depress-prev-point	hmouse-drv.el	/^(defvar action-key-depress-prev-point nil$/
action-key-depress-window	hmouse-drv.el	/^(defvar action-key-depress-window nil$/
action-key-depressed-flag	hmouse-drv.el	/^(defvar action-key-depressed-flag nil "t while Act/
action-key-eol-function	hui-mouse.el	/^(defcustom action-key-eol-function #'smart-scroll-/
action-key-error	hui-mouse.el	/^(defun action-key-error ()$/
action-key-help-flag	hmouse-drv.el	/^(defvar action-key-help-flag nil$/
action-key-internal	hmouse-drv.el	/^(defun action-key-internal ()$/
action-key-minibuffer-function	hui-window.el	/^(defcustom action-key-minibuffer-function #'hyperb/
action-key-modeline	hui-window.el	/^(defun action-key-modeline ()$/
action-key-modeline-buffer-id-function	hui-mouse.el	/^(defcustom action-key-modeline-buffer-id-function /
action-key-modeline-function	hui-window.el	/^(defcustom action-key-modeline-function #'hmouse-c/
action-key-release-args	hmouse-drv.el	/^(defvar action-key-release-args nil$/
action-key-release-buffer	hmouse-drv.el	/^(defvar action-key-release-buffer nil$/
action-key-release-position	hmouse-drv.el	/^(defvar action-key-release-position nil$/
action-key-release-prev-point	hmouse-drv.el	/^(defvar action-key-release-prev-point nil$/
action-key-release-window	hmouse-drv.el	/^(defvar action-key-release-window nil$/
action-mouse-key	hmouse-drv.el	/^(defun action-mouse-key (&rest args)$/
action-mouse-key-emacs	hmouse-drv.el	/^(defun action-mouse-key-emacs (event)$/
action-mouse-key-prefix-arg	hmouse-drv.el	/^(defvar action-mouse-key-prefix-arg nil$/
action-mouse-key-prev-window	hmouse-drv.el	/^(defvar action-mouse-key-prev-window nil$/
action:commandp	hact.el	/^(defun action:commandp (function)$/
action:create	hact.el	/^(defun action:create (param-list body)$/
action:end	hibtypes.el	/^(defconst action:end ">"$/
action:help	hibtypes.el	/^(defun action:help (hbut)$/
action:kbd-macro	hact.el	/^(defun action:kbd-macro (macro &optional repeat-co/
action:param-list	hact.el	/^(defun action:param-list (action)$/
action:params	hact.el	/^(defun action:params (action)$/
action:params-emacs	hact.el	/^(defun action:params-emacs (def)$/
action:start	hibtypes.el	/^(defconst action:start "<"$/
active	hui.el~	109
actype:act	hact.el	/^(defun    actype:act (actype &rest args)$/
actype:action	hact.el	/^(defun    actype:action (actype)$/
actype:action-body	hact.el	/^(defun    actype:action-body (actype)$/
actype:create	hact.el	/^(defalias 'actype:create #'defact)$/
actype:def-symbol	hact.el	/^(defun    actype:def-symbol (actype)$/
actype:delete	hact.el	/^(defun    actype:delete (type)$/
actype:doc	hact.el	/^(defun    actype:doc (but &optional full)$/
actype:elisp-symbol	hact.el	/^(defalias 'actype:elisp-symbol #'symtable:actype-p/
actype:eval	hact.el	/^(defun    actype:eval (actype &rest args)$/
actype:identity	hact.el	/^(defun    actype:identity (&rest args)$/
actype:interact	hact.el	/^(defun    actype:interact (actype)$/
actype:param-list	hact.el	/^(defun    actype:param-list (actype)$/
actype:params	hact.el	/^(defun    actype:params (actype)$/
addition	TODO-DEFCUSTOMS	11
advanced	HY-CONCEPTS.kotl	7
after	OLD-IBUT-AT-P.el~	58
against	hargs.el~	400
alist	FAST-DEMO	153
alist	FAST-DEMO~	73
alist	TODO-ORG-TEST.org	/^** Link abbrev alist$/
all	Makefile	/^all: help$/
all	Makefile.html	/^all: help<\/pre><\/td>$/
all	TODO-ERRORS	289
all-tests	Makefile	/^all-tests: test-all$/
all-tests	Makefile.html	/^all-tests: test-all$/
alpha	EXAMPLE.kotl	407
alpha	HY-CONCEPTS.kotl	166
alpha	HYROLO-EXAMPLES.kotl	21
alpha	HY-USES.kotl	124
alpha	PROS-CONS.kotl	32
alpha	PROS-CONS.kotl~	9
an	HY-ANNOUNCE-7.0.3	228
anchor	README.html~	47
anchor	README.html~	47
anchor	README.html~	47
anchor	README.html~	47
anchor	README.html~	47
anchors	HY-ANNOUNCE-7.2.1	42
and	ChangeLog	/^    function and use it.$/
and	ChangeLog~	/^    function and use it.$/
and	FAST-DEMO-ramin.txt	/^         function and a variable, Hyperbole provid/
and	FAST-DEMO-ramin.txt~	/^         function and a variable, Hyperbole provid/
and	hargs.el~	144
and	hargs.el~	155
and	hui.el~	1862
and	README.html~	/^@media screen and (min-width: 914px) {$/
annot-bib	hactypes.el	/^(defact annot-bib (key)$/
annot-bib	hibtypes.el	/^(defib annot-bib ()$/
another	FAST-DEMO	115
any	HY-ANNOUNCE-7.0.3	234
archives	HY-ABOUT	26
are	DEMO	/^function are stored in variables for each availabl/
are	hargs.el~	135
are	hargs.el~	272
are	hargs.el~	419
are	hui.el~	648
are	hui.el~	1027
arg	hargs.el~	947
arg	hargs.el~	949
arglist	TODO-ERRORS	341
argument	EXAMPLE.kotl	41
argument	EXAMPLE.kotl	148
argument	hargs.el~	23
argument	HYP-MAN.txt	16
argument	TODO-DEFCUSTOMS	14
arguments	AAA-27.1-BYTECOMP	7
arguments	AAA-27.1-BYTECOMP~	7
as	hyperbole.info	/^     entry as a string.  The string that this func/
as	TODO-SEQ-README.MD	/^function as argument take the function as their fi/
assist-flag	hmouse-drv.el	/^(defvar assist-flag nil$/
assist-key	hmouse-drv.el	/^(defun assist-key ()$/
assist-key-cancelled	hmouse-drv.el	/^(defvar assist-key-cancelled nil$/
assist-key-clear-variables	hmouse-drv.el	/^(defun assist-key-clear-variables ()$/
assist-key-default-function	hui-mouse.el	/^(defcustom assist-key-default-function #'assist-ke/
assist-key-depress	hmouse-drv.el	/^(defun assist-key-depress (&rest args)$/
assist-key-depress-args	hmouse-drv.el	/^(defvar assist-key-depress-args nil$/
assist-key-depress-buffer	hmouse-drv.el	/^(defvar assist-key-depress-buffer nil$/
assist-key-depress-emacs	hmouse-drv.el	/^(defun assist-key-depress-emacs (event)$/
assist-key-depress-position	hmouse-drv.el	/^(defvar assist-key-depress-position nil$/
assist-key-depress-prev-point	hmouse-drv.el	/^(defvar assist-key-depress-prev-point nil$/
assist-key-depress-window	hmouse-drv.el	/^(defvar assist-key-depress-window nil$/
assist-key-depressed-flag	hmouse-drv.el	/^(defvar assist-key-depressed-flag nil "t while Ass/
assist-key-eol-function	hui-mouse.el	/^(defcustom assist-key-eol-function #'smart-scroll-/
assist-key-error	hui-mouse.el	/^(defun assist-key-error ()$/
assist-key-help-flag	hmouse-drv.el	/^(defvar assist-key-help-flag nil$/
assist-key-internal	hmouse-drv.el	/^(defun assist-key-internal ()$/
assist-key-minibuffer-function	hui-window.el	/^(defcustom assist-key-minibuffer-function #'hui-me/
assist-key-modeline	hui-window.el	/^(defun assist-key-modeline ()$/
assist-key-modeline-function	hui-window.el	/^(defcustom assist-key-modeline-function #'hui-menu/
assist-key-release-args	hmouse-drv.el	/^(defvar assist-key-release-args nil$/
assist-key-release-buffer	hmouse-drv.el	/^(defvar assist-key-release-buffer nil$/
assist-key-release-position	hmouse-drv.el	/^(defvar assist-key-release-position nil$/
assist-key-release-prev-point	hmouse-drv.el	/^(defvar assist-key-release-prev-point nil$/
assist-key-release-window	hmouse-drv.el	/^(defvar assist-key-release-window nil$/
assist-mouse-key	hmouse-drv.el	/^(defun assist-mouse-key (&rest args)$/
assist-mouse-key-emacs	hmouse-drv.el	/^(defun assist-mouse-key-emacs (event)$/
at	hargs.el~	5
at	hsys-org-roam.el~	9
at	hsys-youtube.el~	9
at	hui-2-tests.el~	5
at	hui.el~	5
at	hui.el~	77
at	hypb-ert.el~	5
at	hyperbole.info	/^     entry at point.$/
attr	TODO-ERRORS	424
attr	TODO-ERRORS	425
autoloads	Makefile	/^autoloads: kotl\/kotl-autoloads.el hyperbole-autolo/
b	EXAMPLE.kotl	330
b	vert-menus.el	/^(defun b (&rest strings)$/
backward	TODO-DEFCUSTOMS	10
based	README.html~	394
based	README.md.html~	85
batch-tests	Makefile	/^batch-tests: test-all-output$/
batch-tests	Makefile.html	/^batch-tests: test-all-output$/
be	hui.el~	751
be	hui.el~	752
been	hypb-ert.el~	77
before	HY-ANNOUNCE-7.0.3	236
being	hyperbole.info	/^function being called.  Its interactive calling fo/
below	README.md	13
bin	Makefile	/^bin: src remove-elc new-bin$/
bindings	FAST-DEMO	75
bindings	HYPB-Tutorial-Greenburg.txt	15
bindings	HYPB-Tutorial-Greenburg.txt~	15
braces	FAST-DEMO	170
braces	FAST-DEMO~	89
branches	EXAMPLE.kotl	166
browsing	HY-ABOUT	130
buffer	hui-2-tests.el~	42
buffer	hui-2-tests.el~	44
buffer	hui-2-tests.el~	81
buffer	NOTES.txt	100
buffer	NOTES.txt~	100
buffer	TODO-ERRORS	35
buffer	TODO-ERRORS	36
buffer	TODO-ERRORS	235
buffer	TODO-ERRORS	424
buffers	HY-WHY.kotl	81
buffers	README	81
buffers	README.html~	386
buffers	README.md.html~	74
but	HY-CONCEPTS.kotl~	/^      function but lives in its own namespace.$/
button	EXAMPLE.kotl	191
button	FAST-DEMO~	63
button	HYP-MAN.txt	8
called	dir	/^topmost node of the Info hierarchy, called (dir)To/
cases	HY-ANNOUNCE	121
cases	HY-ANNOUNCE-7.1.3	70
cases	HY-ANNOUNCE-8.0.0	116
cases	HY-ANNOUNCE-8.0.0~	115
categories	README.html~	397
categories	README.md	103
categories	README.md.html~	86
cell	EXAMPLE.kotl	80
cell	EXAMPLE.kotl	81
cell	EXAMPLE.kotl	86
cell	EXAMPLE.kotl	88
cell	EXAMPLE.kotl	155
cell	EXAMPLE.kotl	158
cell	TODO-ERRORS	35
cells	EXAMPLE.kotl	166
character	EXAMPLE.kotl	60
character	EXAMPLE.kotl	63
charset	README.html~	4
child	README.html~	117
child	README.html~	117
child	README.html~	117
child	README.html~	135
child	README.html~	/^table tr:nth-child(2n) {$/
child	README.html~	187
child	README.html~	189
cl-defun	hbut.el	/^(def-edebug-spec cl-defun$/
clean	Makefile	/^clean:$/
clear	hargs.el~	830
clib_list	smart-clib-sym	32
code	COPYING	201
code	README.html~	264
code	README.html~	290
column	HY-ANNOUNCE-7.0.3	220
command	HY-WHY.kotl	80
commands	HY-ABOUT	118
completion	hactypes.el	/^(defact completion ()$/
completion	hibtypes.el	/^(defib completion ()$/
completions	hargs.el~	564
configurations	README	96
configurations	README.html~	404
configurations	README.md	109
configurations	README.md.html~	93
constants	TODO-ERRORS	342
contain	HY-ANNOUNCE-SHORT-6.0.2	38
contents	hargs.el~	392
contents	hargs.el~	397
contents	hargs.el~	830
contexts	README	82
contexts	README.html~	388
contexts	README.md.html~	76
course	COPYING	661
create	hui.el~	1387
create	TODO-ERRORS	425
cscope	hibtypes.el	/^(defib cscope ()$/
ctags	hibtypes.el	/^(defib ctags ()$/
curr_dir	Makefile	/^curr_dir = $(shell pwd)$/
current	EXAMPLE.kotl	405
current	HY-CONCEPTS.kotl	164
current	HYROLO-EXAMPLES.kotl	19
current	HY-USES.kotl	122
current	PROS-CONS.kotl	30
current	PROS-CONS.kotl~	7
data_dir	Makefile	/^data_dir = $(id_dir)\/id-etc$/
debbugs-gnu-mode	hib-debbugs.el	/^(defib debbugs-gnu-mode ()$/
debbugs-gnu-mode:help	hib-debbugs.el	/^(defun debbugs-gnu-mode:help (&optional _but)$/
debbugs-gnu-query	hib-debbugs.el	/^(defib debbugs-gnu-query ()$/
debbugs-gnu-query	hib-debbugs.el	/^(defact debbugs-gnu-query (id)$/
debbugs-gnu-query:help	hib-debbugs.el	/^(defun debbugs-gnu-query:help (_but)$/
debbugs-gnu-query:list	hib-debbugs.el	/^(defun debbugs-gnu-query:list (query-attribute-lis/
debbugs-gnu-query:string	hib-debbugs.el	/^(defun debbugs-gnu-query:string (url-query-string)/
debbugs-gnu-show-discussion	hib-debbugs.el	/^(defun debbugs-gnu-show-discussion ()$/
debbugs-query:at-p	hib-debbugs.el	/^(defun debbugs-query:at-p ()$/
debbugs-query:status	hib-debbugs.el	/^(defun debbugs-query:status (id)$/
debbugs-version-sufficient-p	hib-debbugs.el	/^(defun debbugs-version-sufficient-p ()$/
debugger-source	hibtypes.el	/^(defib debugger-source ()$/
declarations	hargs.el~	52
declarations	hui.el~	29
defact	hact.el	/^(defmacro defact (type params doc &rest default-ac/
defact	hact.el	/^(def-edebug-spec defact$/
defal	hbut.el	/^(defmacro defal (type link-expr &optional doc)$/
default	EXAMPLE.kotl	32
default	FAST-DEMO	155
default	FAST-DEMO~	75
default	hargs.el~	957
default	hargs.el~	968
default	README	50
default	README.html~	361
default	README.md.html~	45
defaults	TODO-ERRORS	116
defib	hbut.el	/^(defmacro defib (type _params doc at-p &optional t/
defib	hbut.el	/^(def-edebug-spec defib$/
defil	hbut.el	/^(defmacro defil (type start-delim end-delim text-r/
definition	TODO-ERRORS	234
definition	TODO-ERRORS	234
definition	TODO-ERRORS	235
delim	hargs.el~	146
delim	hargs.el~	147
delimiters	OLD-IBUT-AT-P.el~	27
depth	TODO-ERRORS	342
description	Makefile.html	/^button {$/
desired	HY-TRY.el~	237
did	ChangeLog	/^    function did not trigger an error but changed /
did	ChangeLog~	/^    function did not trigger an error but changed /
differ	HY-ABOUT	128
differ	README.md.html~	353
different	COPYING	662
dir	AAA-27.1-BYTECOMP	19
dir	AAA-27.1-BYTECOMP~	40
dir	dir	1
dir	hui.el~	541
dir-summary	hibtypes.el	/^(defib dir-summary ()$/
directory	AAA-27.1-BYTECOMP	59
directory	AAA-27.1-BYTECOMP~	278
directory	TODO-ERRORS	119
directory	TODO-ERRORS	191
display-boolean	hactypes.el	/^(defact display-boolean (bool-expr)$/
display-value	hactypes.el	/^(defact display-value (value)$/
display-variable	hactypes.el	/^(defact display-variable (var)$/
doc	AAA-27.1-BYTECOMP~	69
doc	Makefile	/^doc: version README.md.html manual$/
doc	TODO-ERRORS	98
doc-id	hib-doc-id.el	/^(defib doc-id ()$/
doc-id-end	hib-doc-id.el	/^(defvar doc-id-end   "-]"$/
doc-id-index-entry-regexp	hib-doc-id.el	/^(defvar doc-id-index-entry-regexp "^------+\\\\s-+Ti/
doc-id-indices	hib-doc-id.el	/^(defvar doc-id-indices '()$/
doc-id-match	hib-doc-id.el	/^(defvar doc-id-match$/
doc-id-online-regexp	hib-doc-id.el	/^(defvar doc-id-online-regexp "^Online-Loc:[ \\t]*\\"/
doc-id-p	hib-doc-id.el	/^(defvar doc-id-p (lambda (str)$/
doc-id-start	hib-doc-id.el	/^(defvar doc-id-start "[-"$/
doc-id:help	hib-doc-id.el	/^(defun doc-id:help (but)$/
document	HY-ABOUT	99
document	README.md.html~	310
documented	HY-ANNOUNCE-7.2.1	46
documenting	HY-ANNOUNCE-7.2.1	2
documents	HY-ABOUT	/^       buttons may be added to documents (explicit/
documents	HY-ABOUT	95
documents	HY-WHY.kotl	4
documents	README.md.html~	315
down	TODO-ERRORS	145
drags	EXAMPLE.kotl	324
ebut:act	hbut.el	/^(defun    ebut:act (label)$/
ebut:alist	hbut.el	/^(defun    ebut:alist (&optional file)$/
ebut:at-p	hbut.el	/^(defun    ebut:at-p (&optional start-delim end-del/
ebut:create	hbut.el	/^(defun    ebut:create (&optional but-sym)$/
ebut:delete	hbut.el	/^(defun    ebut:delete (&optional but-sym)$/
ebut:delimit	hbut.el	/^(defun    ebut:delimit (start end instance-flag)$/
ebut:edit	hbut.el	/^(defun    ebut:edit (&optional lbl-key but-sym new/
ebut:get	hbut.el	/^(defun    ebut:get (&optional lbl-key buffer key-s/
ebut:hattr-save	hbut.el	/^(defvar   ebut:hattr-save t$/
ebut:is-p	hbut.el	/^(defun    ebut:is-p (object)$/
ebut:key	hbut.el	/^(defun    ebut:key (ebut)$/
ebut:key-of-label-p	hbut.el	/^(defun    ebut:key-of-label-p (key label)$/
ebut:key-src-fmt	hbut.el	/^(defalias 'ebut:key-src-fmt        #'hbut:key-src-/
ebut:key-src-set-buffer	hbut.el	/^(defalias 'ebut:key-src-set-buffer #'hbut:key-src-/
ebut:key-to-label	hbut.el	/^(defalias 'ebut:key-to-label       #'hbut:key-to-l/
ebut:label-end	hbut.el	/^(defconst ebut:label-end   ")>"$/
ebut:label-instances-regexp	hbut.el	/^(defalias 'ebut:label-instances-regexp #'hbut:labe/
ebut:label-p	hbut.el	/^(defun    ebut:label-p (&optional as-label start-d/
ebut:label-regexp	hbut.el	/^(defalias 'ebut:label-regexp           #'hbut:labe/
ebut:label-start	hbut.el	/^(defconst ebut:label-start "<("$/
ebut:label-to-key	hbut.el	/^(defalias 'ebut:label-to-key #'hbut:label-to-key)$/
ebut:list	hbut.el	/^(defun    ebut:list (&optional file loc-p)$/
ebut:map	hbut.el	/^(defun    ebut:map (but-func &optional regexp-matc/
ebut:match-regexp	hbut.el	/^(defun    ebut:match-regexp (match-keys match-part/
ebut:next-occurrence	hbut.el	/^(defun    ebut:next-occurrence (lbl-key &optional /
ebut:operate	hbut.el	/^(defun    ebut:operate (curr-label new-label)$/
ebut:program	hbut.el	/^(defun    ebut:program (label actype &rest args)$/
ebut:search	hbut.el	/^(defun    ebut:search (string out-buf &optional ma/
ebut:to	hbut.el	/^(defun    ebut:to (lbl-key)$/
ebut:to-key-src	hbut.el	/^(defalias 'ebut:to-key-src         #'hbut:to-key-s/
echo	Makefile	/^echo:$/
edebug	hypb-ert.el~	78
edit	TODO-ERRORS	235
el	HYNEWS-UPDATE.org~	/^* hbut.el (ebut:operate): Add error checks similar/
el	TAGS	2
el	TODO-Partial-Grep	39
el	TODO-Partial-Grep	40
el	V9-For-HY-NEWS.org~	/^* hycontrol.el (framemove, windmove): Conditionall/
el	V9-For-HY-NEWS.org~	/^* kotl\/klink.el (klink:at-p): In *scratch* buffer /
el	V9-For-HY-NEWS.org~	/^* hyrolo.el (hyrolo-find-file-noselect-function): /
elink	hibtypes.el	/^(defib elink ()$/
elink:end	hibtypes.el	/^(defconst elink:end   ">"$/
elink:start	hibtypes.el	/^(defconst elink:start "<elink:"$/
elisp-compiler-msg	hibtypes.el	/^(defib elisp-compiler-msg ()$/
eln	Makefile	/^eln: src$/
eln	Makefile.html	/^eln: src$/
embed	hui.el~	1861
end	HYPB-Tutorial-Greenburg.txt	52
end	HYPB-Tutorial-Greenburg.txt~	52
end	OLD-IBUT-AT-P.el~	57
enforcing	COPYING	191
enter	TODO-ERRORS	49
entry	FAST-DEMO	162
entry	FAST-DEMO~	81
entry	README	93
entry	README.html~	400
entry	README.md	106
entry	README.md.html~	89
err	AAA-27.1-BYTECOMP	19
err	AAA-27.1-BYTECOMP~	40
err	hui.el~	1389
error	TODO-ERRORS	34
error	TODO-ERRORS	71
etags	hibtypes.el	/^(defib etags ()$/
eval-elisp	hactypes.el	/^(defact eval-elisp (lisp-expr)$/
event	TODO-ERRORS	187
events	hui-2-tests.el~	84
events	hui-2-tests.el~	89
events	hui-2-tests.el~	90
eww-browse-url	hsys-www.el	/^(defun eww-browse-url (url &optional new-window)$/
exact	README.html~	299
example	EXAMPLE.kotl	36
example	HYP-MAN.txt	8
exclude	TODO-Partial-Grep	4
exec-kbd-macro	hactypes.el	/^(defact exec-kbd-macro (kbd-macro &optional repeat/
exec-shell-cmd	hactypes.el	/^(defact exec-shell-cmd (shell-cmd &optional intern/
exec-window-cmd	hactypes.el	/^(defact exec-window-cmd (shell-cmd)$/
experience	FAST-DEMO	75
experience	HYPB-Tutorial-Greenburg.txt	15
experience	HYPB-Tutorial-Greenburg.txt~	15
extensible	HY-ANNOUNCE-7.2.1	1
extensible	HY-CONCEPTS.kotl	23
extensive	HY-CONCEPTS.kotl	23
extent	TODO-ERRORS	344
extent	TODO-ERRORS	345
extents	TODO-ERRORS	515
f	hargs.el~	656
fact	README	65
fact	README.html~	374
fact	README.md.html~	58
fantastic	HY-WHY.kotl	61
fast	HY-ABOUT	55
faster	FAST-DEMO	75
faster	HYPB-Tutorial-Greenburg.txt	15
faster	HYPB-Tutorial-Greenburg.txt~	15
fastest	HY-ABOUT	62
feature	TODO-ERRORS	235
file	FAST-DEMO	89
file	FAST-DEMO	90
file	FAST-DEMO~	48
file	FAST-DEMO~	62
file	HY-ANNOUNCE	108
file	HY-ANNOUNCE-8.0.0	103
file	HY-ANNOUNCE-8.0.0~	102
file	HY-COPY	21
file	HYPB-Tutorial-Greenburg.txt	29
file	HYPB-Tutorial-Greenburg.txt	30
file	HYPB-Tutorial-Greenburg.txt~	29
file	HYPB-Tutorial-Greenburg.txt~	30
file	INSTALL	36
file	INSTALL.orig	46
file	TODO-ERRORS	234
filename	TODO-ERRORS	48
files	FAST-DEMO	155
files	FAST-DEMO~	75
files	HY-ABOUT	23
files	HY-USES.kotl	96
filter_and_print_top_window	topwin.py	/^def filter_and_print_top_window(x, y):$/
find	hargs.el~	134
fire	HY-CONCEPTS.kotl	5
first-line-p	hui-mouse.el	/^(defun first-line-p ()$/
fit	HY-ABOUT	112
flag	EXAMPLE.kotl	70
flag	TODO-ERRORS	275
format	hyperbole.el.orig	/^Entry format is: (key-description key-sequence key/
formats	HY-ANNOUNCE-7.0.3	218
formats	HY-CONCEPTS.kotl	24
forward	TODO-ERRORS	288
forward	TODO-ERRORS	289
fp	hui-2-tests.el~	79
frame	HY-ANNOUNCE-7.0.3	93
freedom	COPYING	22
from	ChangeLog	/^    function from package.el which some people pre/
from	ChangeLog~	/^    function from package.el which some people pre/
from	EXAMPLE.kotl	198
from	hargs.el~	977
ftp	Makefile	/^ftp: package $(pkg_parent)\/hyperbole-$(HYPB_VERSIO/
function	AAA-27.1-BYTECOMP	7
function	AAA-27.1-BYTECOMP~	7
function	TODO-DEFCUSTOMS	13
function	TODO-ERRORS	8
function	TODO-ERRORS	34
functions	hargs.el~	67
functions	hargs.el~	347
functions	hsys-org-roam.el~	65
functions	hsys-youtube.el~	89
functions	hui.el~	161
functions	HY-WHY.kotl	57
gbut:act	hbut.el	/^(defun    gbut:act (label)$/
gbut:delete	hbut.el	/^(defun    gbut:delete (&optional lbl-key)$/
gbut:ebut-key-list	hbut.el	/^(defun    gbut:ebut-key-list ()$/
gbut:ebut-program	hbut.el	/^(defun    gbut:ebut-program (label actype &rest ar/
gbut:file	hbut.el	/^(defun    gbut:file ()$/
gbut:get	hbut.el	/^(defun    gbut:get (&optional lbl-key)$/
gbut:help	hbut.el	/^(defun    gbut:help (label)$/
gbut:ibut-key-list	hbut.el	/^(defun    gbut:ibut-key-list ()$/
gbut:key-list	hbut.el	/^(defun    gbut:key-list ()$/
gbut:label-list	hbut.el	/^(defun    gbut:label-list ()$/
gbut:label-p	hbut.el	/^(defun    gbut:label-p (&optional as-label start-d/
gbut:save-buffer	hbut.el	/^(defun    gbut:save-buffer ()$/
gbut:to	hbut.el	/^(defun    gbut:to (lbl-key)$/
gentler	HY-CONCEPTS.kotl	19
get	AAA-27.1-BYTECOMP	8
get	AAA-27.1-BYTECOMP~	8
get	TODO-ERRORS	8
git-commit-reference	hib-social.el	/^(defib git-commit-reference ()$/
git-find-file	hib-social.el	/^(defun git-find-file (file)$/
git-pull	Makefile	/^git-pull:$/
git-reference	hib-social.el	/^(defun git-reference (reference &optional project)/
git-tag-release	Makefile	/^git-tag-release:$/
git-verify-no-update	Makefile	/^git-verify-no-update:$/
github-reference	hib-social.el	/^(defun github-reference (reference &optional user /
gitlab-reference	hib-social.el	/^(defun gitlab-reference (reference &optional user /
glink	hibtypes.el	/^(defib glink ()$/
glink:end	hibtypes.el	/^(defconst glink:end   ">"$/
glink:start	hibtypes.el	/^(defconst glink:start "<glink:"$/
glyph	TODO-ERRORS	344
glyph	TODO-ERRORS	345
gnus-push-button	hibtypes.el	/^(defib gnus-push-button ()$/
greedy	hargs.el~	157
grep	HYROLO-FILE-LIST.txt	1
grep	TODO-Partial-Grep	1
grep-msg	hibtypes.el	/^(defib grep-msg ()$/
grow	HY-USES.kotl	80
gîÌ	Hyperbole-Orig-Manual-from-Brown.pdf	4705
h1	README.html~	39
h1	README.html~	121
h2	README.html~	39
h2	README.html~	121
h3	README.html~	39
h3	README.html~	121
h4	README.html~	39
h4	README.html~	121
h5	README.html~	39
h5	README.html~	121
hact	hact.el	/^(defun hact (&rest args)$/
hactypes:link-to-file-interactively	hactypes.el	/^(defun  hactypes:link-to-file-interactively ()$/
hargs:action-get	hargs.el	/^(defun hargs:action-get (action editing-flag)$/
hargs:actype-get	hargs.el	/^(defun hargs:actype-get (actype &optional editing-/
hargs:at-p	hargs.el	/^(defun hargs:at-p (&optional no-default)$/
hargs:buffer-substring	hargs.el	/^(defun hargs:buffer-substring (start end)$/
hargs:completion	hargs.el	/^(defun hargs:completion (&optional no-insert)$/
hargs:defaults	hargs.el	/^(defvar hargs:defaults nil$/
hargs:delimited	hargs.el	/^(defun hargs:delimited (start-delim end-delim$/
hargs:find-tag-default	hargs.el	/^(defalias 'hargs:find-tag-default #'find-tag--defa/
hargs:get	hargs.el	/^(defun hargs:get (interactive-entry &optional defa/
hargs:iform-extensions-vector	hargs.el	/^(defconst hargs:iform-extensions-vector$/
hargs:iform-read	hargs.el	/^(defun hargs:iform-read (iform &optional default-a/
hargs:iform-vector	hargs.el	/^(defconst hargs:iform-vector$/
hargs:make-iform-vector	hargs.el	/^(defmacro hargs:make-iform-vector (&rest iform-ali/
hargs:match-p	hargs.el	/^(defun hargs:match-p (str)$/
hargs:prompt	hargs.el	/^(defun hargs:prompt (prompt default &optional defa/
hargs:read	hargs.el	/^(defun hargs:read (prompt &optional predicate defa/
hargs:read-buffer-name	hargs.el	/^(defun hargs:read-buffer-name (prompt)$/
hargs:read-match	hargs.el	/^(defun hargs:read-match (prompt collection$/
hargs:reading-symbol	hargs.el	/^(defvar hargs:reading-symbol nil$/
hargs:reading-type	hargs.el	/^(defvar hargs:reading-type nil$/
hargs:select-event-window	hargs.el	/^(defun hargs:select-event-window ()$/
hargs:select-p	hargs.el	/^(defun hargs:select-p (&optional value assist-bool/
hargs:set-string-to-complete	hargs.el	/^(defun hargs:set-string-to-complete ()$/
hargs:sexpression-p	hargs.el	/^(defun hargs:sexpression-p (&optional no-recurse)$/
hargs:string-to-complete	hargs.el	/^(defvar hargs:string-to-complete nil$/
hargs:unset-string-to-complete	hargs.el	/^(defun hargs:unset-string-to-complete ()$/
has	hargs.el~	88
hattr:attributes	hbut.el	/^(defun    hattr:attributes (obj-symbol)$/
hattr:clear	hbut.el	/^(defun    hattr:clear (hbut)$/
hattr:copy	hbut.el	/^(defun    hattr:copy (from-hbut to-hbut)$/
hattr:emacs-button-attributes	hbut.el	/^(defun    hattr:emacs-button-attributes (button)$/
hattr:emacs-button-is-p	hbut.el	/^(defun    hattr:emacs-button-is-p (button)$/
hattr:filename	hbut.el	/^(defvar   hattr:filename$/
hattr:get	hbut.el	/^(defun    hattr:get (obj-symbol attr-symbol)$/
hattr:list	hbut.el	/^(defun    hattr:list (obj)$/
hattr:memq	hbut.el	/^(defun    hattr:memq (attr-symbol obj-symbol)$/
hattr:report	hbut.el	/^(defun    hattr:report (attrib-list)$/
hattr:save	hbut.el	/^(defun    hattr:save ()$/
hattr:set	hbut.el	/^(defun    hattr:set (obj-symbol attr-symbol attr-v/
hattr:summarize	hbut.el	/^(defalias 'hattr:summarize #'hattr:report)$/
have	hui.el~	1140
have	hui.el~	1242
have	hui.el~	1706
have	hui.el~	1734
hbdata:action	hbdata.el	/^(defun hbdata:action (hbdata)$/
hbdata:actype	hbdata.el	/^(defun hbdata:actype (hbdata)$/
hbdata:apply-entry	hbdata.el	/^(defun hbdata:apply-entry (func lbl-key key-src &o/
hbdata:args	hbdata.el	/^(defun hbdata:args (hbdata)$/
hbdata:categ	hbdata.el	/^(defun hbdata:categ (_hbdata)$/
hbdata:create-time	hbdata.el	/^(defun hbdata:create-time (hbdata)$/
hbdata:creator	hbdata.el	/^(defun hbdata:creator (hbdata)$/
hbdata:delete-entry	hbdata.el	/^(defun hbdata:delete-entry (lbl-key key-src &optio/
hbdata:delete-entry-at-point	hbdata.el	/^(defun hbdata:delete-entry-at-point ()$/
hbdata:ebut-build	hbdata.el	/^(defun hbdata:ebut-build (&optional mod-lbl-key bu/
hbdata:ebut-instance-last	hbdata.el	/^(defun hbdata:ebut-instance-last (lbl-key key-src /
hbdata:get-entry	hbdata.el	/^(defun hbdata:get-entry (lbl-key key-src &optional/
hbdata:ibut-instance-last	hbdata.el	/^(defun hbdata:ibut-instance-last (name-key)$/
hbdata:ibut-instance-next	hbdata.el	/^(defun hbdata:ibut-instance-next (name-key)$/
hbdata:instance-next	hbdata.el	/^(defun hbdata:instance-next (name-key)$/
hbdata:is-but-data-stored-in-buffer	hbdata.el	/^(defun hbdata:is-but-data-stored-in-buffer (key-sr/
hbdata:key	hbdata.el	/^(defun hbdata:key (hbdata)$/
hbdata:loc-p	hbdata.el	/^(defun hbdata:loc-p (hbdata)$/
hbdata:mod-time	hbdata.el	/^(defun hbdata:mod-time (hbdata)$/
hbdata:modifier	hbdata.el	/^(defun hbdata:modifier (hbdata)$/
hbdata:referent	hbdata.el	/^(defun hbdata:referent (hbdata)$/
hbdata:search	hbdata.el	/^(defun hbdata:search (buf label partial)$/
hbdata:to-entry	hbdata.el	/^(defun hbdata:to-entry (but-key key-src &optional /
hbdata:to-entry-buf	hbdata.el	/^(defun hbdata:to-entry-buf (key-src &optional dire/
hbdata:to-entry-in-buffer	hbdata.el	/^(defun hbdata:to-entry-in-buffer (create)$/
hbdata:to-entry-in-file	hbdata.el	/^(defun hbdata:to-entry-in-file (key-src &optional /
hbdata:to-hbdata-buffer	hbdata.el	/^(defun hbdata:to-hbdata-buffer (dir &optional crea/
hbdata:write	hbdata.el	/^(defun hbdata:write (&optional orig-lbl-key but-sy/
hbmap:dir-add	hbmap.el	/^(defun hbmap:dir-add (dir-name &optional no-save)$/
hbmap:dir-filename	hbmap.el	/^(defvar hbmap:dir-filename$/
hbmap:dir-list	hbmap.el	/^(defun hbmap:dir-list ()$/
hbmap:dir-member	hbmap.el	/^(defun hbmap:dir-member (dir-name)$/
hbmap:dir-operate	hbmap.el	/^(defun hbmap:dir-operate (pred dir-name form &opti/
hbmap:dir-remove	hbmap.el	/^(defun hbmap:dir-remove (dir-name &optional no-sav/
hbmap:dir-user	hbmap.el	/^(defvar hbmap:dir-user$/
hbmap:filename	hbmap.el	/^(defvar hbmap:filename "HYPB"$/
hbut-face	hui-em-but.el	/^(defface hbut-face$/
hbut-flash	hui-em-but.el	/^(defface hbut-flash$/
hbut-item-face	hui-em-but.el	/^(defface hbut-item-face$/
hbut:act	hbut.el	/^(defun    hbut:act (&optional hbut)$/
hbut:action	hbut.el	/^(defun    hbut:action (hbut)$/
hbut:at-p	hbut.el	/^(defun    hbut:at-p ()$/
hbut:comment	hbut.el	/^(defun    hbut:comment (start end)$/
hbut:current	hbut.el	/^(defvar   hbut:current nil$/
hbut:delete	hbut.el	/^(defun    hbut:delete (&optional lbl-key buffer ke/
hbut:ebut-key-list	hbut.el	/^(defun    hbut:ebut-key-list (&optional key-src)$/
hbut:fill-prefix-regexps	hbut.el	/^(defvar   hbut:fill-prefix-regexps$/
hbut:fill-prefix-remove	hbut.el	/^(defun    hbut:fill-prefix-remove (label)$/
hbut:funcall	hbut.el	/^(defun    hbut:funcall (func &optional lbl-key buf/
hbut:get	hbut.el	/^(defun    hbut:get (&optional lbl-key buffer key-s/
hbut:get-key-src	hbut.el	/^(defun    hbut:get-key-src (&optional full-flag di/
hbut:ibut-key-list	hbut.el	/^(defun    hbut:ibut-key-list (&optional key-src)$/
hbut:instance-sep	hbut.el	/^(defconst hbut:instance-sep ":"$/
hbut:is-p	hbut.el	/^(defun    hbut:is-p (object)$/
hbut:key	hbut.el	/^(defun    hbut:key (hbut)$/
hbut:key-list	hbut.el	/^(defun    hbut:key-list ()$/
hbut:key-src-fmt	hbut.el	/^(defun    hbut:key-src-fmt ()$/
hbut:key-src-set-buffer	hbut.el	/^(defun    hbut:key-src-set-buffer (src)$/
hbut:key-to-label	hbut.el	/^(defun    hbut:key-to-label (lbl-key)$/
hbut:label	hbut.el	/^(defun    hbut:label (hbut)$/
hbut:label-instances-regexp	hbut.el	/^(defun    hbut:label-instances-regexp (lbl-key &op/
hbut:label-list	hbut.el	/^(defun    hbut:label-list ()$/
hbut:label-p	hbut.el	/^(defun    hbut:label-p (&optional as-label start-d/
hbut:label-regexp	hbut.el	/^(defun    hbut:label-regexp (lbl-key &optional no-/
hbut:label-to-key	hbut.el	/^(defun    hbut:label-to-key (label)$/
hbut:map	hbut.el	/^(defun    hbut:map (but-func &optional start-delim/
hbut:max-len	hbut.el	/^(defconst hbut:max-len 200$/
hbut:max-len	hbut.el	/^(defsubst hbut:max-len ()$/
hbut:modify-syntax	hbut.el	/^(defun    hbut:modify-syntax ()$/
hbut:outside-comment-p	hbut.el	/^(defun    hbut:outside-comment-p ()$/
hbut:rename	hbut.el	/^(defun    hbut:rename (but)$/
hbut:report	hbut.el	/^(defun    hbut:report (&optional arg)$/
hbut:source	hbut.el	/^(defun    hbut:source (&optional full-flag)$/
hbut:source-prefix	hbut.el	/^(defconst hbut:source-prefix moccur-source-prefix$/
hbut:summarize	hbut.el	/^(defalias 'hbut:summarize #'hbut:report)$/
hbut:syntax-table	hbut.el	/^(defvar   hbut:syntax-table (copy-syntax-table ema/
hbut:to	hbut.el	/^(defun    hbut:to (lbl-key)$/
hbut:to-key-src	hbut.el	/^(defun    hbut:to-key-src (&optional full-flag)$/
help	Makefile	/^help: $/
hhist:add	hhist.el	/^(defun hhist:add (elt)$/
hhist:element	hhist.el	/^(defun hhist:element ()$/
hhist:init	hhist.el	/^(defun hhist:init ()$/
hhist:pop	hhist.el	/^(defun hhist:pop (&optional arg)$/
hib-python-traceback	hibtypes.el	/^(defun hib-python-traceback ()$/
hibtypes-git-add-project-to-repos-cache	hib-social.el	/^(defun hibtypes-git-add-project-to-repos-cache (pr/
hibtypes-git-build-or-add-to-repos-cache	hib-social.el	/^(defun hibtypes-git-build-or-add-to-repos-cache (p/
hibtypes-git-build-repos-cache	hib-social.el	/^(defun hibtypes-git-build-repos-cache (&optional p/
hibtypes-git-default-project	hib-social.el	/^(defcustom hibtypes-git-default-project nil$/
hibtypes-git-file-regexp	hib-social.el	/^(defconst hibtypes-git-file-regexp "=[-=.:_\/[:alnu/
hibtypes-git-find	hib-social.el	/^(defun hibtypes-git-find (file)$/
hibtypes-git-find-execute	hib-social.el	/^(defun hibtypes-git-find-execute (format-prefix fi/
hibtypes-git-get-locate-command	hib-social.el	/^(defun hibtypes-git-get-locate-command ()$/
hibtypes-git-project-directory	hib-social.el	/^(defun hibtypes-git-project-directory (project)$/
hibtypes-git-project-regexp	hib-social.el	/^(defconst hibtypes-git-project-regexp "\/?[[:alnum:/
hibtypes-git-repos-cache	hib-social.el	/^(defvar hibtypes-git-repos-cache$/
hibtypes-git-use-magit-flag	hib-social.el	/^(defcustom hibtypes-git-use-magit-flag nil$/
hibtypes-github-default-project	hib-social.el	/^(defcustom hibtypes-github-default-project nil$/
hibtypes-github-default-user	hib-social.el	/^(defcustom hibtypes-github-default-user nil$/
hibtypes-gitlab-default-project	hib-social.el	/^(defcustom hibtypes-gitlab-default-project nil$/
hibtypes-gitlab-default-user	hib-social.el	/^(defcustom hibtypes-gitlab-default-user nil$/
hibtypes-social-default-service	hib-social.el	/^(defcustom hibtypes-social-default-service "twitte/
hibtypes-social-display-function	hib-social.el	/^(defcustom hibtypes-social-display-function #'brow/
hibtypes-social-hashtag-alist	hib-social.el	/^(defconst hibtypes-social-hashtag-alist$/
hibtypes-social-inhibit-modes	hib-social.el	/^(defvar hibtypes-social-inhibit-modes '(texinfo-mo/
hibtypes-social-regexp	hib-social.el	/^(defconst hibtypes-social-regexp$/
hibtypes-social-username-alist	hib-social.el	/^(defconst hibtypes-social-username-alist$/
hierarchical	HY-ABOUT	17
hierarchical	HY-USES.kotl	88
hierarchy	dir	2
high	TODO-S-and-P.csv	1
hkey--wconfig	hmouse-drv.el	/^(defvar hkey--wconfig nil$/
hkey-absolute-pixel-position	hmouse-drv.el	/^(defun hkey-absolute-pixel-position ()$/
hkey-ace-window-setup	hmouse-drv.el	/^(defun hkey-ace-window-setup (&optional key)$/
hkey-alist	hui-mouse.el	/^(defvar hkey-alist$/
hkey-always-display-menu	hsettings.el	/^(defvar hkey-always-display-menu nil$/
hkey-assist-help	hmouse-drv.el	/^(defun hkey-assist-help ()$/
hkey-buffer-move	hmouse-drv.el	/^(defun hkey-buffer-move (direction &optional _arg)/
hkey-buffer-move-down	hmouse-drv.el	/^(defun hkey-buffer-move-down ()$/
hkey-buffer-move-left	hmouse-drv.el	/^(defun hkey-buffer-move-left ()$/
hkey-buffer-move-right	hmouse-drv.el	/^(defun hkey-buffer-move-right ()$/
hkey-buffer-move-up	hmouse-drv.el	/^(defun hkey-buffer-move-up ()$/
hkey-buffer-to	hmouse-drv.el	/^(defun hkey-buffer-to (from-window to-window)$/
hkey-debug	hmouse-drv.el	/^(defcustom hkey-debug nil$/
hkey-debug	hmouse-drv.el	/^(defun hkey-debug (pred pred-value hkey-action)$/
hkey-drag	hmouse-drv.el	/^(defun hkey-drag (release-window)$/
hkey-drag-item	hmouse-drv.el	/^(defun hkey-drag-item (release-window)$/
hkey-drag-stay	hmouse-drv.el	/^(defun hkey-drag-stay (release-window)$/
hkey-drag-to	hmouse-drv.el	/^(defun hkey-drag-to (release-window)$/
hkey-either	hmouse-drv.el	/^(defun hkey-either (&optional arg)$/
hkey-execute	hmouse-drv.el	/^(defun hkey-execute (assisting)$/
hkey-get-bindings	hyperbole.el	/^(defun hkey-get-bindings ()$/
hkey-global-set-key	hyperbole.el	/^(defun hkey-global-set-key (key command &optional /
hkey-help	hmouse-drv.el	/^(defun hkey-help (&optional assisting)$/
hkey-help-hide	hmouse-drv.el	/^(defun hkey-help-hide (&optional kill window)$/
hkey-help-msg	hmouse-drv.el	/^(defvar hkey-help-msg "" "Holds last Smart Key hel/
hkey-help-show	hmouse-drv.el	/^(defun hkey-help-show (&optional buffer current-wi/
hkey-init	hyperbole.el	/^(defcustom hkey-init t$/
hkey-initialize	hyperbole.el	/^(defun hkey-initialize ()$/
hkey-insert-region	hmouse-drv.el	/^(defun hkey-insert-region (depress-window release-/
hkey-link	hmouse-drv.el	/^(defun hkey-link (release-window)$/
hkey-maybe-global-set-key	hyperbole.el	/^(defun hkey-maybe-global-set-key (key command &opt/
hkey-maybe-set-key	hyperbole.el	/^(defun hkey-maybe-set-key (key command &optional _/
hkey-mouse-help	hmouse-drv.el	/^(defun hkey-mouse-help (assisting args)$/
hkey-operate	hmouse-drv.el	/^(defun hkey-operate (&optional arg)$/
hkey-region	hmouse-drv.el	/^(defvar hkey-region nil$/
hkey-replace	hmouse-drv.el	/^(defun hkey-replace (release-window)$/
hkey-set-key	hyperbole.el	/^(defun hkey-set-key (key command)$/
hkey-summarize	hmouse-drv.el	/^(defun hkey-summarize (&optional current-window)$/
hkey-swap	hmouse-drv.el	/^(defun hkey-swap (to-window)$/
hkey-swap-buffers	hmouse-drv.el	/^(defun hkey-swap-buffers (from-window to-window)$/
hkey-throw	hmouse-drv.el	/^(defun hkey-throw (release-window &optional throw-/
hkey-toggle-debug	hmouse-drv.el	/^(defun hkey-toggle-debug (&optional arg)$/
hkey-value	hui-mouse.el	/^(defvar hkey-value nil$/
hkey-window-link	hmouse-drv.el	/^(defun hkey-window-link (release-window)$/
hlink	hibtypes.el	/^(defun hlink (link-actype label-prefix start-delim/
hlink:parse-label-and-file	hibtypes.el	/^(defun hlink:parse-label-and-file (label-and-file)/
hload-path--internal-make-directory-autoloads	hload-path.el	/^(defun hload-path--internal-make-directory-autoloa/
hload-path--make-directory-autoloads	hload-path.el	/^(defalias 'hload-path--make-directory-autoloads$/
hmail:browser-p	hmail.el	/^(defun hmail:browser-p ()$/
hmail:buffer	hmail.el	/^(defun hmail:buffer (&optional buf invisible-flag)/
hmail:compose	hmail.el	/^(defun hmail:compose (address expr &optional subje/
hmail:composer	hmail.el	/^(defvar hmail:composer  'message-mode$/
hmail:composing-dir	hmail.el	/^(defun hmail:composing-dir (key-src)$/
hmail:editor-p	hmail.el	/^(defun hmail:editor-p ()$/
hmail:hbdata-sep	hmail.el	/^(defvar hmail:hbdata-sep "\\^Lbd"$/
hmail:hbdata-start	hmail.el	/^(defun hmail:hbdata-start (&optional msg-start msg/
hmail:hbdata-to-p	hmail.el	/^(defun hmail:hbdata-to-p ()$/
hmail:init	hmail.el	/^(defun hmail:init (class-prefix func-suffix-list)$/
hmail:init-function	hmail.el	/^(defcustom hmail:init-function nil$/
hmail:invoke	hmail.el	/^(defun hmail:invoke (&optional address cc subject)/
hmail:lister	hmail.el	/^(defvar hmail:lister    nil$/
hmail:lister-p	hmail.el	/^(defun hmail:lister-p ()$/
hmail:mode-is-p	hmail.el	/^(defun hmail:mode-is-p ()$/
hmail:modifier	hmail.el	/^(defvar hmail:modifier  nil$/
hmail:msg-narrow	hmail.el	/^(defun hmail:msg-narrow (&optional msg-start msg-e/
hmail:reader	hmail.el	/^(defvar hmail:reader    nil$/
hmail:reader-p	hmail.el	/^(defun hmail:reader-p ()$/
hmail:region	hmail.el	/^(defun hmail:region (start end &optional buf invis/
hmh--highlight-buttons	hmh.el	/^(defun hmh--highlight-buttons (&rest _)$/
hmh--run-show-hook	hmh.el	/^(defun hmh--run-show-hook (&rest _) (run-hooks 'mh/
hmouse-add-unshifted-smart-keys	hmouse-key.el	/^(defun hmouse-add-unshifted-smart-keys ()$/
hmouse-alist	hui-mouse.el	/^(defvar hmouse-alist hkey-alist$/
hmouse-alist-add-window-handlers	hui-window.el	/^(defun hmouse-alist-add-window-handlers ()$/
hmouse-at-item-p	hui-window.el	/^(defun hmouse-at-item-p (start-window)$/
hmouse-bind-key-emacs	hmouse-sh.el	/^(defun hmouse-bind-key-emacs (mouse-key-number dep/
hmouse-bind-shifted-key-emacs	hmouse-sh.el	/^(defun hmouse-bind-shifted-key-emacs (shifted-mous/
hmouse-bindings	hmouse-key.el	/^(defvar hmouse-bindings nil$/
hmouse-bindings	hmouse-key.el	/^(defvar hmouse-bindings nil$/
hmouse-bindings-flag	hmouse-key.el	/^(defvar hmouse-bindings-flag nil$/
hmouse-bindings-flag	hmouse-key.el	/^(defvar hmouse-bindings-flag nil$/
hmouse-buffer-to-window	hui-window.el	/^(defun hmouse-buffer-to-window (&optional new-wind/
hmouse-check-action-key	hmouse-key.el	/^(defun hmouse-check-action-key ()$/
hmouse-check-assist-key	hmouse-key.el	/^(defun hmouse-check-assist-key ()$/
hmouse-choose-link-and-referent-windows	hmouse-drv.el	/^(defun hmouse-choose-link-and-referent-windows ()$/
hmouse-choose-windows	hmouse-drv.el	/^(defun hmouse-choose-windows (func)$/
hmouse-click-to-drag	hmouse-drv.el	/^(defun hmouse-click-to-drag ()$/
hmouse-click-to-drag-item	hmouse-drv.el	/^(defun hmouse-click-to-drag-item ()$/
hmouse-click-to-drag-stay	hmouse-drv.el	/^(defun hmouse-click-to-drag-stay ()$/
hmouse-click-to-drag-to	hmouse-drv.el	/^(defun hmouse-click-to-drag-to ()$/
hmouse-click-to-replace	hmouse-drv.el	/^(defun hmouse-click-to-replace ()$/
hmouse-click-to-swap	hmouse-drv.el	/^(defun hmouse-click-to-swap ()$/
hmouse-click-to-throw	hmouse-drv.el	/^(defun hmouse-click-to-throw ()$/
hmouse-clone-window-to-frame	hui-window.el	/^(defun hmouse-clone-window-to-frame (&optional _al/
hmouse-context-ibuffer-menu	hui-window.el	/^(defun hmouse-context-ibuffer-menu ()$/
hmouse-context-menu	hui-window.el	/^(defun hmouse-context-menu ()$/
hmouse-depress-inactive-minibuffer-p	hmouse-drv.el	/^(defun hmouse-depress-inactive-minibuffer-p (event/
hmouse-dired-display-here-mode	hui-window.el	/^(define-minor-mode hmouse-dired-display-here-mode$/
hmouse-dired-readin-hook	hui-window.el	/^(defun hmouse-dired-readin-hook ()$/
hmouse-drag-between-frames	hui-window.el	/^(defun hmouse-drag-between-frames ()$/
hmouse-drag-between-windows	hui-window.el	/^(defun hmouse-drag-between-windows ()$/
hmouse-drag-diagonally	hui-window.el	/^(defun hmouse-drag-diagonally ()$/
hmouse-drag-horizontally	hui-window.el	/^(defun hmouse-drag-horizontally ()$/
hmouse-drag-item-mode-forms	hui-window.el	/^(defvar hmouse-drag-item-mode-forms$/
hmouse-drag-item-to-display	hui-window.el	/^(defun hmouse-drag-item-to-display (&optional new-/
hmouse-drag-not-allowed	hui-window.el	/^(defun hmouse-drag-not-allowed ()$/
hmouse-drag-outside-all-windows	hui-window.el	/^(defun hmouse-drag-outside-all-windows ()$/
hmouse-drag-p	hui-window.el	/^(defun hmouse-drag-p ()$/
hmouse-drag-region	hmouse-sh.el	/^(defun hmouse-drag-region (start-event)$/
hmouse-drag-region-active	hui-window.el	/^(defun hmouse-drag-region-active ()$/
hmouse-drag-same-window	hui-window.el	/^(defun hmouse-drag-same-window ()$/
hmouse-drag-thing	hui-window.el	/^(defun hmouse-drag-thing ()$/
hmouse-drag-vertically	hui-window.el	/^(defun hmouse-drag-vertically ()$/
hmouse-drag-vertically-within-emacs	hui-window.el	/^(defun hmouse-drag-vertically-within-emacs ()$/
hmouse-drag-window-side	hui-window.el	/^(defun hmouse-drag-window-side ()$/
hmouse-edge-sensitivity	hui-window.el	/^(defvar hmouse-edge-sensitivity 10$/
hmouse-emacs-at-modeline-buffer-id-p	hui-window.el	/^(defun hmouse-emacs-at-modeline-buffer-id-p ()$/
hmouse-emacs-modeline-event-p	hui-window.el	/^(defun hmouse-emacs-modeline-event-p (event)$/
hmouse-function	hmouse-drv.el	/^(defun hmouse-function (func assisting set-point-a/
hmouse-get-bindings	hmouse-sh.el	/^(defun hmouse-get-bindings (middle-flag)$/
hmouse-get-unshifted-bindings	hmouse-sh.el	/^(defun hmouse-get-unshifted-bindings ()$/
hmouse-goto-depress-point	hui-window.el	/^(defun hmouse-goto-depress-point ()$/
hmouse-goto-region-prev-point	hui-window.el	/^(defun hmouse-goto-region-prev-point ()$/
hmouse-goto-release-point	hui-window.el	/^(defun hmouse-goto-release-point ()$/
hmouse-horizontal-action-drag	hui-window.el	/^(defun hmouse-horizontal-action-drag ()$/
hmouse-horizontal-assist-drag	hui-window.el	/^(defun hmouse-horizontal-assist-drag ()$/
hmouse-inactive-minibuffer-p	hui-window.el	/^(defun hmouse-inactive-minibuffer-p ()$/
hmouse-insert-region	hui-window.el	/^(defun hmouse-insert-region ()$/
hmouse-install	hmouse-key.el	/^(defun hmouse-install (&optional arg)$/
hmouse-item-to-window	hui-window.el	/^(defun hmouse-item-to-window (&optional new-window/
hmouse-key-release-args-emacs	hmouse-drv.el	/^(defun hmouse-key-release-args-emacs (event)$/
hmouse-key-release-buffer	hmouse-drv.el	/^(defun hmouse-key-release-buffer (release-position/
hmouse-key-release-window	hmouse-drv.el	/^(defun hmouse-key-release-window (release-position/
hmouse-keyboard-choose-windows	hmouse-drv.el	/^(defun hmouse-keyboard-choose-windows (func)$/
hmouse-kill-and-yank-region	hui-window.el	/^(defun hmouse-kill-and-yank-region ()$/
hmouse-kill-region	hui-window.el	/^(defun hmouse-kill-region ()$/
hmouse-map-modes-to-form	hui-window.el	/^(defun hmouse-map-modes-to-form (mode-forms)$/
hmouse-middle-flag	hsettings.el	/^(defcustom hmouse-middle-flag (and (boundp 'infodo/
hmouse-mod--global-map	hmouse-mod.el	/^(defvar hmouse-mod--global-map nil$/
hmouse-mod--prefix	hmouse-mod.el	/^(defvar hmouse-mod--prefix nil$/
hmouse-mod--prior-global-map	hmouse-mod.el	/^(defvar hmouse-mod--prior-global-map nil$/
hmouse-mod-disable	hmouse-mod.el	/^(defun hmouse-mod-disable ()$/
hmouse-mod-enable	hmouse-mod.el	/^(defun hmouse-mod-enable ()$/
hmouse-mod-execute-command	hmouse-mod.el	/^(defun hmouse-mod-execute-command (key count)$/
hmouse-mod-insert-command	hmouse-mod.el	/^(defun hmouse-mod-insert-command (count)$/
hmouse-mod-keyboard-quit	hmouse-mod.el	/^(defun hmouse-mod-keyboard-quit ()$/
hmouse-mod-last-char	hmouse-mod.el	/^(defun hmouse-mod-last-char ()$/
hmouse-mod-mode	hmouse-mod.el	/^(define-minor-mode hmouse-mod-mode$/
hmouse-mod-mode	hyperbole-autoloads.el	/^(defvar hmouse-mod-mode nil "\\$/
hmouse-modeline-click	hui-window.el	/^(defun hmouse-modeline-click ()$/
hmouse-modeline-depress	hui-window.el	/^(defun hmouse-modeline-depress ()$/
hmouse-modeline-event-p	hui-window.el	/^(defun hmouse-modeline-event-p (event)$/
hmouse-modeline-release	hui-window.el	/^(defun hmouse-modeline-release ()$/
hmouse-modeline-resize-window	hui-window.el	/^(defun hmouse-modeline-resize-window ()$/
hmouse-move-point-emacs	hmouse-sh.el	/^(defun hmouse-move-point-emacs (event &optional pr/
hmouse-move-point-eterm	hmouse-sh.el	/^(defun hmouse-move-point-eterm (arg-list)$/
hmouse-move-window-to-frame	hui-window.el	/^(defun hmouse-move-window-to-frame (&optional alwa/
hmouse-posn-set-point	hmouse-sh.el	/^(defun hmouse-posn-set-point (position)$/
hmouse-press-release-same-window	hui-window.el	/^(defun hmouse-press-release-same-window ()$/
hmouse-previous-bindings	hmouse-key.el	/^(defvar hmouse-previous-bindings nil$/
hmouse-previous-bindings	hmouse-key.el	/^(defvar hmouse-previous-bindings nil$/
hmouse-prior-active-region	hui-window.el	/^(defun hmouse-prior-active-region ()$/
hmouse-pulse-buffer	hui-window.el	/^(defun hmouse-pulse-buffer ()$/
hmouse-pulse-flag	hui-window.el	/^(defcustom hmouse-pulse-flag t$/
hmouse-pulse-iterations	hui-window.el	/^(defvar hmouse-pulse-iterations 40$/
hmouse-pulse-line	hui-window.el	/^(defun hmouse-pulse-line ()$/
hmouse-pulse-region	hui-window.el	/^(defun hmouse-pulse-region (start end)$/
hmouse-read-only-toggle-key	hui-window.el	/^(defun hmouse-read-only-toggle-key ()$/
hmouse-release	hmouse-drv.el	/^(defun hmouse-release (assisting)$/
hmouse-release-left-edge	hui-window.el	/^(defun hmouse-release-left-edge ()$/
hmouse-release-right-edge	hui-window.el	/^(defun hmouse-release-right-edge ()$/
hmouse-resize-window-side	hui-window.el	/^(defun hmouse-resize-window-side ()$/
hmouse-save-region	hmouse-drv.el	/^(defun hmouse-save-region ()$/
hmouse-set-bindings	hmouse-key.el	/^(defun hmouse-set-bindings (key-binding-list)$/
hmouse-set-buffer-and-point	hui-window.el	/^(defun hmouse-set-buffer-and-point (buffer point)$/
hmouse-set-key-list	hmouse-sh.el	/^(defun hmouse-set-key-list (binding key-list)$/
hmouse-set-point	hmouse-drv.el	/^(defun hmouse-set-point (args)$/
hmouse-set-point-at	hmouse-drv.el	/^(defun hmouse-set-point-at (set-point-arg-list)$/
hmouse-set-point-command	hui-mouse.el	/^(defvar hmouse-set-point-command nil$/
hmouse-shifted-setup	hmouse-sh.el	/^(defun hmouse-shifted-setup (middle-flag)$/
hmouse-side-sensitivity	hui-window.el	/^(defvar hmouse-side-sensitivity 5$/
hmouse-split-window	hui-window.el	/^(defun hmouse-split-window ()$/
hmouse-swap-buffers	hui-window.el	/^(defun hmouse-swap-buffers ()$/
hmouse-swap-windows	hui-window.el	/^(defun hmouse-swap-windows ()$/
hmouse-toggle-bindings	hmouse-key.el	/^(defun hmouse-toggle-bindings ()$/
hmouse-unshifted-setup	hmouse-sh.el	/^(defun hmouse-unshifted-setup (&optional middle-ke/
hmouse-update-smart-keys	hmouse-key.el	/^(defun hmouse-update-smart-keys ()$/
hmouse-use-region-p	hmouse-drv.el	/^(defun hmouse-use-region-p ()$/
hmouse-verify-release-window-flag	hmouse-drv.el	/^(defvar hmouse-verify-release-window-flag t$/
hmouse-vertical-action-drag	hui-window.el	/^(defun hmouse-vertical-action-drag ()$/
hmouse-vertical-assist-drag	hui-window.el	/^(defun hmouse-vertical-assist-drag ()$/
hmouse-vertical-line-spacing	hmouse-drv.el	/^(defun hmouse-vertical-line-spacing (frame)$/
hmouse-window-at-absolute-pixel-position	hmouse-drv.el	/^(defun hmouse-window-at-absolute-pixel-position (&/
hmouse-window-coordinates	hmouse-drv.el	/^(defun hmouse-window-coordinates (&optional event)/
hmouse-x-coord	hui-window.el	/^(defun hmouse-x-coord (args)$/
hmouse-x-diagonal-sensitivity	hui-window.el	/^(defvar hmouse-x-diagonal-sensitivity 4$/
hmouse-x-drag-sensitivity	hui-window.el	/^(defvar hmouse-x-drag-sensitivity 5$/
hmouse-y-coord	hui-window.el	/^(defun hmouse-y-coord (args)$/
hmouse-y-diagonal-sensitivity	hui-window.el	/^(defvar hmouse-y-diagonal-sensitivity 3$/
hmouse-y-drag-sensitivity	hui-window.el	/^(defvar hmouse-y-drag-sensitivity 3$/
hmouse-yank-region	hui-window.el	/^(defun hmouse-yank-region ()$/
hnews:composer	hmail.el	/^(defvar hnews:composer  'news-reply-mode$/
hnews:lister	hmail.el	/^(defvar hnews:lister    'gnus-summary-mode$/
hnews:lister-p	hmail.el	/^(defun hnews:lister-p ()$/
hnews:reader	hmail.el	/^(defvar hnews:reader    'gnus-article-mode$/
home	hui-2-tests.el~	92
however	COPYING	231
however	HY-CONCEPTS.kotl	30
hpath:abbreviate-file-name	hpath.el	/^(defun hpath:abbreviate-file-name (path)$/
hpath:absolute-arguments	hpath.el	/^(defun hpath:absolute-arguments (actype arg-list &/
hpath:absolute-to	hpath.el	/^(defun hpath:absolute-to (path &optional default-d/
hpath:at-p	hpath.el	/^(defun hpath:at-p (&optional type non-exist)$/
hpath:auto-completing-read-modes	hpath.el	/^(defcustom hpath:auto-completing-read-modes '(helm/
hpath:auto-variable-alist	hpath.el	/^(defvar hpath:auto-variable-alist$/
hpath:cache-mswindows-mount-points	hpath.el	/^(defun hpath:cache-mswindows-mount-points ()$/
hpath:call	hpath.el	/^(defun hpath:call (func path &optional non-exist)$/
hpath:choose-from-path-variable	hpath.el	/^(defun hpath:choose-from-path-variable (path-var &/
hpath:command-string	hpath.el	/^(defun hpath:command-string (cmd filename)$/
hpath:compressed-suffix-regexp	hpath.el	/^(defvar hpath:compressed-suffix-regexp (concat (re/
hpath:delete-trailer	hpath.el	/^(defun hpath:delete-trailer (string)$/
hpath:delimited-possible-path	hpath.el	/^(defun hpath:delimited-possible-path (&optional no/
hpath:disable-find-file-urls	hpath.el	/^(defun hpath:disable-find-file-urls ()$/
hpath:display-buffer	hpath.el	/^(defun hpath:display-buffer (buffer &optional disp/
hpath:display-buffer-alist	hpath.el	/^(defvar hpath:display-buffer-alist$/
hpath:display-buffer-function	hpath.el	/^(defun hpath:display-buffer-function (&optional di/
hpath:display-buffer-other-frame	hpath.el	/^(defun hpath:display-buffer-other-frame (buffer)$/
hpath:display-path-function	hpath.el	/^(defun hpath:display-path-function (&optional disp/
hpath:display-where	hpath.el	/^(defvar hpath:display-where 'other-window$/
hpath:display-where-alist	hpath.el	/^(defvar hpath:display-where-alist$/
hpath:display-where-function	hpath.el	/^(defun hpath:display-where-function (display-where/
hpath:enable-find-file-urls	hpath.el	/^(defun hpath:enable-find-file-urls ()$/
hpath:exists-p	hpath.el	/^(defun hpath:exists-p (path &optional suffix-flag)/
hpath:expand	hpath.el	/^(defun hpath:expand (path &optional exists-flag)$/
hpath:expand-list	hpath.el	/^(defun hpath:expand-list (paths match-regexp &opti/
hpath:expand-with-variable	hpath.el	/^(defun hpath:expand-with-variable (path)$/
hpath:external-display-alist-macos	hpath.el	/^(defcustom hpath:external-display-alist-macos (lis/
hpath:external-display-alist-mswindows	hpath.el	/^(defcustom hpath:external-display-alist-mswindows /
hpath:external-display-alist-x	hpath.el	/^(defcustom hpath:external-display-alist-x (list (c/
hpath:external-file-suffixes	hpath.el	/^(defcustom hpath:external-file-suffixes "e?ps\\\\|dv/
hpath:external-open-office-suffixes	hpath.el	/^(defcustom hpath:external-open-office-suffixes "do/
hpath:file-line-and-column	hpath.el	/^(defun hpath:file-line-and-column (path-line-and-c/
hpath:file-position-to-line-and-column	hpath.el	/^(defun hpath:file-position-to-line-and-column (pat/
hpath:find	hpath.el	/^(defun hpath:find (pathname &optional display-wher/
hpath:find-executable	hpath.el	/^(defun hpath:find-executable (executable-list)$/
hpath:find-file-mailcap	hpath.el	/^(defun hpath:find-file-mailcap (file-name)$/
hpath:find-file-urls-mode	hpath.el	/^(defcustom hpath:find-file-urls-mode nil$/
hpath:find-file-urls-mode	hpath.el	/^(defun hpath:find-file-urls-mode (&optional arg)$/
hpath:find-file-urls-p	hpath.el	/^(defun hpath:find-file-urls-p ()$/
hpath:find-line	hpath.el	/^(defun hpath:find-line (filename line-num &optiona/
hpath:find-noselect	hpath.el	/^(defun hpath:find-noselect (filename)$/
hpath:find-other-frame	hpath.el	/^(defun hpath:find-other-frame (filename)$/
hpath:find-other-window	hpath.el	/^(defun hpath:find-other-window (filename)$/
hpath:find-program	hpath.el	/^(defun hpath:find-program (filename)$/
hpath:get-external-display-alist	hpath.el	/^(defun hpath:get-external-display-alist ()$/
hpath:get-single-string-variable-value	hpath.el	/^(defun hpath:get-single-string-variable-value (var/
hpath:handle-urls	hpath.el	/^(defun hpath:handle-urls ()$/
hpath:hostname-grpn	hpath.el	/^(defconst hpath:hostname-grpn 6$/
hpath:html-anchor-id-pattern	hpath.el	/^(defconst hpath:html-anchor-id-pattern "\\\\(id\\\\|na/
hpath:info-suffix	hpath.el	/^(defvar hpath:info-suffix "\\\\.info\\\\(-[0-9]+\\\\)?\\\\/
hpath:internal-display-alist	hpath.el	/^(defcustom hpath:internal-display-alist$/
hpath:is-p	hpath.el	/^(defun hpath:is-p (path &optional type non-exist)$/
hpath:is-path-variable-p	hpath.el	/^(defun hpath:is-path-variable-p (path-var)$/
hpath:line-and-column-regexp	hpath.el	/^(defconst hpath:line-and-column-regexp$/
hpath:markdown-anchor-id-pattern	hpath.el	/^(defconst hpath:markdown-anchor-id-pattern "^[ ]*%/
hpath:markdown-section-pattern	hpath.el	/^(defconst hpath:markdown-section-pattern "^[ \\t]*\\/
hpath:markdown-suffix-regexp	hpath.el	/^(defconst hpath:markdown-suffix-regexp "\\\\.[mM][dD/
hpath:markup-link-anchor-regexp	hpath.el	/^(defconst hpath:markup-link-anchor-regexp$/
hpath:match	hpath.el	/^(defun hpath:match (filename regexp-alist)$/
hpath:mswindows-drive-regexp	hpath.el	/^(defconst hpath:mswindows-drive-regexp (format "\\\\/
hpath:mswindows-mount-prefix	hpath.el	/^(defvar hpath:mswindows-mount-prefix$/
hpath:mswindows-path-regexp	hpath.el	/^(defconst hpath:mswindows-path-regexp "\\\\`.*\\\\.*[a/
hpath:mswindows-to-posix	hpath.el	/^(defun hpath:mswindows-to-posix (path)$/
hpath:mswindows-to-posix-separators	hpath.el	/^(defun hpath:mswindows-to-posix-separators (path)$/
hpath:native-image-suffixes	hpath.el	/^(defcustom hpath:native-image-suffixes "\\\\.\\\\(xbm\\/
hpath:normalize	hpath.el	/^(defun hpath:normalize (filename)$/
hpath:outline-section-pattern	hpath.el	/^(defconst hpath:outline-section-pattern "^\\\\*+[ \\t/
hpath:path-variable-regexp	hpath.el	/^(defvar hpath:path-variable-regexp "\\\\`\\\\$?[{(]?\\\\/
hpath:path-variable-value-regexp	hpath.el	/^(defvar hpath:path-variable-value-regexp$/
hpath:pathname-grpn	hpath.el	/^(defconst hpath:pathname-grpn 8$/
hpath:portnumber-grpn	hpath.el	/^(defconst hpath:portnumber-grpn 7$/
hpath:posix-mount-point-to-mswindows-alist	hpath.el	/^(defvar hpath:posix-mount-point-to-mswindows-alist/
hpath:posix-mount-point-to-mswindows-alist	hyperbole-autoloads.el	/^(defvar hpath:posix-mount-point-to-mswindows-alist/
hpath:posix-mount-points-regexp	hpath.el	/^(defvar hpath:posix-mount-points-regexp$/
hpath:posix-path-p	hpath.el	/^(defun hpath:posix-path-p (path)$/
hpath:posix-to-mswindows	hpath.el	/^(defun hpath:posix-to-mswindows (path)$/
hpath:posix-to-mswindows-separators	hpath.el	/^(defun hpath:posix-to-mswindows-separators (path)$/
hpath:prefix-regexp	hpath.el	/^(defvar hpath:prefix-regexp "\\\\`[-!&][ ]*"$/
hpath:prepend-shell-directory	hpath.el	/^(defun hpath:prepend-shell-directory (&optional fi/
hpath:protocol-grpn	hpath.el	/^(defconst hpath:protocol-grpn 3$/
hpath:push-tag-mark	hpath.el	/^(defun hpath:push-tag-mark ()$/
hpath:relative-arguments	hpath.el	/^(defun hpath:relative-arguments (arg-list)$/
hpath:relative-to	hpath.el	/^(defun hpath:relative-to (path &optional default-d/
hpath:remote-at-p	hpath.el	/^(defun hpath:remote-at-p ()$/
hpath:remote-available-p	hpath.el	/^(defun hpath:remote-available-p ()$/
hpath:remote-default-user	hpath.el	/^(defun hpath:remote-default-user ()$/
hpath:remote-p	hpath.el	/^(defun hpath:remote-p (path)$/
hpath:remote-regexp	hpath.el	/^(defvar hpath:remote-regexp$/
hpath:resolve	hpath.el	/^(defun hpath:resolve (path)$/
hpath:return-one-value	hpath.el	/^(defun hpath:return-one-value (path &optional retu/
hpath:rfc	hpath.el	/^(defvar hpath:rfc "https:\/\/www.ietf.org\/rfc\/rfc%s./
hpath:rfc	hpath.el	/^(defun hpath:rfc (rfc-num)$/
hpath:section-line-and-column-regexp	hpath.el	/^(defconst hpath:section-line-and-column-regexp$/
hpath:shell-modes	hpath.el	/^(defconst hpath:shell-modes '(sh-mode csh-mode she/
hpath:shorten	hpath.el	/^(defun hpath:shorten (path)$/
hpath:sitename-grpn	hpath.el	/^(defconst hpath:sitename-grpn 5$/
hpath:start-end	hpath.el	/^(defun hpath:start-end (path)$/
hpath:string-url-regexp	hpath.el	/^(defvar hpath:string-url-regexp (concat "\\\\`" hpat/
hpath:string-url-regexp2	hpath.el	/^(defvar hpath:string-url-regexp2 (concat "\\\\`" hpa/
hpath:string-url-regexp3	hpath.el	/^(defvar hpath:string-url-regexp3 (concat "\\\\`" hpa/
hpath:substitute-dir	hpath.el	/^(defun hpath:substitute-dir (path-prefix var-name /
hpath:substitute-match-value	hpath.el	/^(defun hpath:substitute-match-value (regexp str ne/
hpath:substitute-posix-or-mswindows	hpath.el	/^(defun hpath:substitute-posix-or-mswindows (path)$/
hpath:substitute-posix-or-mswindows-at-point	hpath.el	/^(defun hpath:substitute-posix-or-mswindows-at-poin/
hpath:substitute-value	hpath.el	/^(defun hpath:substitute-value (path)$/
hpath:substitute-var	hpath.el	/^(defun hpath:substitute-var (path)$/
hpath:substitute-var-name	hpath.el	/^(defun hpath:substitute-var-name (var-symbol var-d/
hpath:suffixes	hpath.el	/^(defcustom hpath:suffixes '(".gz" ".Z")$/
hpath:symlink-expand	hpath.el	/^(defun hpath:symlink-expand (referent dirname)$/
hpath:symlink-referent	hpath.el	/^(defun hpath:symlink-referent (linkname)$/
hpath:texinfo-section-pattern	hpath.el	/^(defconst hpath:texinfo-section-pattern "^@node+[ /
hpath:tmp-prefix	hpath.el	/^(defvar hpath:tmp-prefix "\/tmp\/remote-"$/
hpath:to-line	hpath.el	/^(defun hpath:to-line (line-num)$/
hpath:to-markup-anchor	hpath.el	/^(defun hpath:to-markup-anchor (hash anchor)$/
hpath:tramp-file-name-regexp	hpath.el	/^(defun hpath:tramp-file-name-regexp ()$/
hpath:trim	hpath.el	/^(defun hpath:trim (path)$/
hpath:url-at-p	hpath.el	/^(defun hpath:url-at-p ()$/
hpath:url-grpn	hpath.el	/^(defconst hpath:url-grpn 2$/
hpath:url-hostnames-regexp	hpath.el	/^(defvar hpath:url-hostnames-regexp  "\\\\(www\\\\|s?ft/
hpath:url-keyword-grpn	hpath.el	/^(defconst hpath:url-keyword-grpn 1$/
hpath:url-p	hpath.el	/^(defun hpath:url-p (obj)$/
hpath:url-regexp	hpath.el	/^(defvar hpath:url-regexp "<?\\\\(URL[:=]\\\\)?\\\\(\\\\([a/
hpath:url-regexp2	hpath.el	/^(defvar hpath:url-regexp2$/
hpath:url-regexp3	hpath.el	/^(defvar hpath:url-regexp3$/
hpath:username-grpn	hpath.el	/^(defconst hpath:username-grpn 4$/
hpath:validate	hpath.el	/^(defun hpath:validate (path)$/
hpath:variable-regexp	hpath.el	/^(defconst hpath:variable-regexp "\\\\$@?\\{\\\\([^\\}]+\\/
hpath:variables	hpath.el	/^(defcustom hpath:variables$/
hpath:www-at-p	hpath.el	/^(defun hpath:www-at-p (&optional include-start-and/
hpath:www-p	hpath.el	/^(defun hpath:www-p (path)$/
hproperty:but-add	hui-em-but.el	/^(defun hproperty:but-add (start end face)$/
hproperty:but-clear	hui-em-but.el	/^(defun hproperty:but-clear (&optional pos)$/
hproperty:but-clear-all	hui-em-but.el	/^(defun hproperty:but-clear-all (&optional regexp-m/
hproperty:but-create	hui-em-but.el	/^(defun hproperty:but-create (&optional regexp-matc/
hproperty:but-create-all	hui-em-but.el	/^(defun hproperty:but-create-all (&optional regexp-/
hproperty:but-create-on-yank	hui-em-but.el	/^(defun hproperty:but-create-on-yank (_prop-value s/
hproperty:but-emphasize-flag	hui-em-but.el	/^(defcustom hproperty:but-emphasize-flag nil$/
hproperty:but-face	hui-em-but.el	/^(defcustom hproperty:but-face 'hbut-face$/
hproperty:but-flash	hui-em-but.el	/^(defun hproperty:but-flash ()$/
hproperty:but-flash-time	hui-em-but.el	/^(defcustom hproperty:but-flash-time 1000$/
hproperty:but-flash-time-seconds	hui-em-but.el	/^(defcustom hproperty:but-flash-time-seconds 0.05$/
hproperty:but-get	hui-em-but.el	/^(defun hproperty:but-get (&optional pos)$/
hproperty:but-highlight-flag	hui-em-but.el	/^(defcustom hproperty:but-highlight-flag t$/
hproperty:but-p	hui-em-but.el	/^(defun hproperty:but-p (&optional pos)$/
hproperty:color-list	hui-em-but.el	/^(defconst hproperty:color-list$/
hproperty:color-ptr	hui-em-but.el	/^(defvar hproperty:color-ptr nil$/
hproperty:cycle-but-color	hui-em-but.el	/^(defun hproperty:cycle-but-color (&optional color)/
hproperty:flash-face	hui-em-but.el	/^(defcustom hproperty:flash-face 'hbut-flash$/
hproperty:good-colors	hui-em-but.el	/^(defconst hproperty:good-colors$/
hproperty:highlight-face	hui-em-but.el	/^(defcustom hproperty:highlight-face 'highlight$/
hproperty:ibut-face	hui-em-but.el	/^(defcustom hproperty:ibut-face 'ibut-face$/
hproperty:item-button	hui-em-but.el	/^(defvar hproperty:item-button nil$/
hproperty:item-face	hui-em-but.el	/^(defcustom hproperty:item-face 'hbut-item-face$/
hproperty:list-cycle	hui-em-but.el	/^(defsubst hproperty:list-cycle (list-ptr list)$/
hproperty:select-item	hui-em-but.el	/^(defun hproperty:select-item (&optional pnt)$/
hproperty:select-line	hui-em-but.el	/^(defun hproperty:select-line (&optional pnt)$/
hproperty:set-but-face	hui-em-but.el	/^(defun hproperty:set-but-face (pos face)$/
href	README.html~	330
href	README.html~	333
href	README.html~	462
href	README.md.html~	163
href	README.md.html~	190
href	README.md.html~	202
href	README.md.html~	264
hrmail--highlight-buttons	hrmail.el	/^(defun hrmail--highlight-buttons (&rest _)$/
hrmail--rmail-cease-edit	hrmail.el	/^(defun hrmail--rmail-cease-edit ()$/
hrmail--rmail-forward	hrmail.el	/^(defun hrmail--rmail-forward (resend)$/
hrmail--show-msg-and-buttons	hrmail.el	/^(defun hrmail--show-msg-and-buttons (&rest _)$/
hrule:action	hact.el	/^(defvar hrule:action 'actype:act$/
hsys-org-agenda-item-at-p	hsys-org.el	/^(defun hsys-org-agenda-item-at-p ()$/
hsys-org-at-read-only-p	hsys-org.el	/^(defun hsys-org-at-read-only-p ()$/
hsys-org-block-start-at-p	hsys-org.el	/^(defun hsys-org-block-start-at-p ()$/
hsys-org-consult-grep	hsys-org.el	/^(defun hsys-org-consult-grep ()$/
hsys-org-consult-grep-func	hsys-org.el	/^(defcustom hsys-org-consult-grep-func #'consult-gr/
hsys-org-cycle	hsys-org.el	/^(defun hsys-org-cycle ()$/
hsys-org-enable-smart-keys	hsys-org.el	/^(defcustom hsys-org-enable-smart-keys 'unset$/
hsys-org-enable-smart-keys	hyperbole-autoloads.el	/^(defvar hsys-org-enable-smart-keys 'unset "\\$/
hsys-org-face-at-p	hsys-org.el	/^(defun hsys-org-face-at-p (org-face-type)$/
hsys-org-get-value	hsys-org.el	/^(defun hsys-org-get-value (attribute)$/
hsys-org-global-cycle	hsys-org.el	/^(defun hsys-org-global-cycle ()$/
hsys-org-heading-at-p	hsys-org.el	/^(defun hsys-org-heading-at-p (&optional _)$/
hsys-org-internal-target-at-p	hsys-org.el	/^(defun hsys-org-internal-target-at-p ()$/
hsys-org-internal-target-def-at-p	hsys-org.el	/^(defun hsys-org-internal-target-def-at-p ()$/
hsys-org-internal-target-link-at-p	hsys-org.el	/^(defun hsys-org-internal-target-link-at-p ()$/
hsys-org-link-at-p	hsys-org.el	/^(defun hsys-org-link-at-p ()$/
hsys-org-meta-return	hsys-org.el	/^(defun hsys-org-meta-return ()$/
hsys-org-meta-return-shared-p	hsys-org.el	/^(defun hsys-org-meta-return-shared-p ()$/
hsys-org-mode-function	hsys-org.el	/^(defvar hsys-org-mode-function #'hsys-org-mode-p$/
hsys-org-mode-function	hyperbole-autoloads.el	/^(defvar hsys-org-mode-function #'hsys-org-mode-p "/
hsys-org-mode-p	hsys-org.el	/^(defun hsys-org-mode-p ()$/
hsys-org-radio-target-at-p	hsys-org.el	/^(defun hsys-org-radio-target-at-p ()$/
hsys-org-radio-target-def-at-p	hsys-org.el	/^(defun hsys-org-radio-target-def-at-p ()$/
hsys-org-radio-target-link-at-p	hsys-org.el	/^(defun hsys-org-radio-target-link-at-p ()$/
hsys-org-region-with-text-property-value	hsys-org.el	/^(defun hsys-org-region-with-text-property-value (p/
hsys-org-roam-consult-grep	hsys-org-roam.el	/^(defun hsys-org-roam-consult-grep ()$/
hsys-org-search-internal-link-p	hsys-org.el	/^(defun hsys-org-search-internal-link-p (target)$/
hsys-org-search-radio-target-link-p	hsys-org.el	/^(defun hsys-org-search-radio-target-link-p (target/
hsys-org-set-ibut-label	hsys-org.el	/^(defun hsys-org-set-ibut-label (start-end)$/
hsys-org-src-block-start-at-p	hsys-org.el	/^(defun hsys-org-src-block-start-at-p ()$/
hsys-org-target-at-p	hsys-org.el	/^(defun hsys-org-target-at-p ()$/
hsys-org-to-next-radio-target-link	hsys-org.el	/^(defun hsys-org-to-next-radio-target-link (target)/
hsys-org-todo-at-p	hsys-org.el	/^(defun hsys-org-todo-at-p ()$/
hsys-org-todo-cycle	hsys-org.el	/^(defun hsys-org-todo-cycle ()$/
hsys-org-todo-occur	hsys-org.el	/^(defun hsys-org-todo-occur (&optional keyword)$/
hsys-org-todo-set-cycle	hsys-org.el	/^(defun hsys-org-todo-set-cycle ()$/
hsys-youtube-end-format	hsys-youtube.el	/^(defvar hsys-youtube-end-format "https:\/\/www.youtu/
hsys-youtube-end-url	hsys-youtube.el	/^(defun hsys-youtube-end-url (video-id &optional st/
hsys-youtube-get-url	hsys-youtube.el	/^(defalias 'hsys-youtube-get-url (htype:symbol 'yt-/
hsys-youtube-get-url	hyperbole-autoloads.el	/^(defalias 'hsys-youtube-get-url (htype:symbol 'yt-/
hsys-youtube-get-url:help	hsys-youtube.el	/^(defun hsys-youtube-get-url:help (hbut)$/
hsys-youtube-info	hsys-youtube.el	/^(defalias 'hsys-youtube-info    (htype:symbol 'yt-/
hsys-youtube-info	hyperbole-autoloads.el	/^(defalias 'hsys-youtube-info (htype:symbol 'yt-inf/
hsys-youtube-play	hsys-youtube.el	/^(defalias 'hsys-youtube-play    (htype:symbol 'yt-/
hsys-youtube-play	hyperbole-autoloads.el	/^(defalias 'hsys-youtube-play (htype:symbol 'yt-pla/
hsys-youtube-play:help	hsys-youtube.el	/^(defun hsys-youtube-play:help (hbut)$/
hsys-youtube-search	hsys-youtube.el	/^(defalias 'hsys-youtube-search  (htype:symbol 'yt-/
hsys-youtube-search	hyperbole-autoloads.el	/^(defalias 'hsys-youtube-search (htype:symbol 'yt-s/
hsys-youtube-search:help	hsys-youtube.el	/^(defun hsys-youtube-search:help (search-term)$/
hsys-youtube-start-format	hsys-youtube.el	/^(defvar hsys-youtube-start-format "https:\/\/www.you/
hsys-youtube-start-url	hsys-youtube.el	/^(defun hsys-youtube-start-url (video-id &optional /
hsys-youtube-time-in-hms	hsys-youtube.el	/^(defun hsys-youtube-time-in-hms (start-time-string/
hsys-youtube-time-in-seconds	hsys-youtube.el	/^(defun hsys-youtube-time-in-seconds (start-time-st/
hsys-youtube-url-prefix-regexp	hsys-youtube.el	/^(defconst hsys-youtube-url-prefix-regexp "\\\\`\\\\(ht/
html	Makefile	/^html: $(man_dir)\/hyperbole.html$/
html	Makefile.html	/^html: $(man_dir)\/hyperbole.html$/
html_dir	Makefile	/^html_dir = $(id_dir)\/id-html$/
http	Todo-save.txt	3
htype:body	hact.el	/^(defun    htype:body (htype-sym)$/
htype:category	hact.el	/^(defun    htype:category (type-category)$/
htype:create	hact.el	/^(defmacro htype:create (type type-category doc par/
htype:def-symbol	hact.el	/^(defun    htype:def-symbol (type)$/
htype:delete	hact.el	/^(defun    htype:delete (type type-category)$/
htype:doc	hact.el	/^(defun    htype:doc (type)$/
htype:names	hact.el	/^(defun    htype:names (type-category &optional sym/
htype:symbol	hact.el	/^(defun   htype:symbol (type type-category)$/
htz:date-arpa	htz.el	/^(defun htz:date-arpa (&optional date local timezon/
htz:date-make-arpa	htz.el	/^(defun htz:date-make-arpa (year month day time &op/
htz:date-make-sortable	htz.el	/^(defun htz:date-make-sortable (year month day time/
htz:date-make-unix	htz.el	/^(defun htz:date-make-unix (year month day time &op/
htz:date-parse	htz.el	/^(defun htz:date-parse (date &optional parsed-curre/
htz:date-sortable	htz.el	/^(defun htz:date-sortable (&optional date local tim/
htz:date-sortable-gmt	htz.el	/^(defun htz:date-sortable-gmt (&optional date local/
htz:date-unix	htz.el	/^(defun htz:date-unix (&optional date local timezon/
htz:last-day-of-month	htz.el	/^(defun htz:last-day-of-month (month year)$/
htz:leap-year-p	htz.el	/^(defun htz:leap-year-p (year)$/
htz:local	htz.el	/^(defvar htz:local$/
htz:months-assoc	htz.el	/^(defvar htz:months-assoc$/
htz:span-in-days	htz.el	/^(defun htz:span-in-days (start-date end-date)$/
htz:time-fix	htz.el	/^(defun htz:time-fix (year month day hour minute se/
htz:time-make-string	htz.el	/^(defun htz:time-make-string (hour minute second)$/
htz:time-parse	htz.el	/^(defun htz:time-parse (time)$/
htz:world-timezones	htz.el	/^(defvar htz:world-timezones$/
htz:zone-to-hour	htz.el	/^(defun htz:zone-to-hour (timezone)$/
hui-copy-to-register	hui.el	/^(defun hui-copy-to-register (register start end &o/
hui-java-defun-prompt-regexp	hui-select.el	/^(defconst hui-java-defun-prompt-regexp$/
hui-kill-ring-save	hui.el	/^(defun hui-kill-ring-save (beg end &optional regio/
hui-menu-about	hui-menu.el	/^(defconst hui-menu-about$/
hui-menu-browser	hui-menu.el	/^(defmacro hui-menu-browser (title browser-option)$/
hui-menu-buffer-and-mode-list-cache	hui-jmenu.el	/^(defvar hui-menu-buffer-and-mode-list-cache nil$/
hui-menu-buffer-mode-name	hui-jmenu.el	/^(defun hui-menu-buffer-mode-name (buffer)$/
hui-menu-cutoff-list	hui-menu.el	/^(defun hui-menu-cutoff-list (lst)$/
hui-menu-delete-buffer	hui-jmenu.el	/^(defun    hui-menu-delete-buffer ()$/
hui-menu-delete-buffer-and-window	hui-jmenu.el	/^(defun    hui-menu-delete-buffer-and-window ()$/
hui-menu-delete-frame	hui-jmenu.el	/^(defun    hui-menu-delete-frame ()$/
hui-menu-edit-server-finish	hui-jmenu.el	/^(defun hui-menu-edit-server-finish ()$/
hui-menu-explicit-buttons	hui-menu.el	/^(defun hui-menu-explicit-buttons (rest-of-menu)$/
hui-menu-frame-name	hui-jmenu.el	/^(defun hui-menu-frame-name (frame)$/
hui-menu-global-buttons	hui-menu.el	/^(defun hui-menu-global-buttons (rest-of-menu)$/
hui-menu-hywconfig	hui-jmenu.el	/^(defconst hui-menu-hywconfig$/
hui-menu-jump-to	hui-jmenu.el	/^(defun hui-menu-jump-to ()$/
hui-menu-jump-to-buffer	hui-jmenu.el	/^(defun hui-menu-jump-to-buffer ()$/
hui-menu-jump-to-frame	hui-jmenu.el	/^(defun hui-menu-jump-to-frame ()$/
hui-menu-jump-to-window	hui-jmenu.el	/^(defun hui-menu-jump-to-window ()$/
hui-menu-key-binding-item	hui-menu.el	/^(defun hui-menu-key-binding-item (item-name comman/
hui-menu-key-bindings	hui-menu.el	/^(defun hui-menu-key-bindings (rest-of-menu)$/
hui-menu-max-list-length	hui-menu.el	/^(defvar hui-menu-max-list-length 24$/
hui-menu-modeline	hui-jmenu.el	/^(defun hui-menu-modeline (_ignore)$/
hui-menu-move-window-to-new-frame	hui-jmenu.el	/^(defun    hui-menu-move-window-to-new-frame ()$/
hui-menu-of-buffers	hui-jmenu.el	/^(defun hui-menu-of-buffers ()$/
hui-menu-of-buffers-cache	hui-jmenu.el	/^(defvar hui-menu-of-buffers-cache nil$/
hui-menu-of-frames	hui-jmenu.el	/^(defun hui-menu-of-frames ()$/
hui-menu-of-windows	hui-jmenu.el	/^(defun hui-menu-of-windows ()$/
hui-menu-options	hui-menu.el	/^(defconst hui-menu-options$/
hui-menu-order-explicit-buttons	hui-menu.el	/^(defvar hui-menu-order-explicit-buttons t$/
hui-menu-program-path	hui-jmenu.el	/^(defun hui-menu-program-path (exe &optional insert/
hui-menu-remove	hinit.el	/^(defmacro hui-menu-remove (menu-sym &optional keym/
hui-menu-screen	hui-menu.el	/^(defun hui-menu-screen (_ignored)$/
hui-menu-screen-commands	hui-jmenu.el	/^(defun hui-menu-screen-commands ()$/
hui-menu-server-buffer-p	hui-jmenu.el	/^(defun hui-menu-server-buffer-p ()$/
hui-menu-sort-buffers	hui-jmenu.el	/^(defun hui-menu-sort-buffers (buffer-and-mode-name/
hui-menu-to-frame	hui-jmenu.el	/^(defun hui-menu-to-frame (frame)$/
hui-menu-to-window	hui-jmenu.el	/^(defun hui-menu-to-window (window)$/
hui-menu-web-search	hui-menu.el	/^(defun hui-menu-web-search ()$/
hui-menu-window-list-all-frames	hui-jmenu.el	/^(defun hui-menu-window-list-all-frames (&optional /
hui-register-but	hui-register.el	/^(cl-defstruct hui-register-but$/
hui-register-struct-at-point	hui-register.el	/^(defun hui-register-struct-at-point ()$/
hui-search-web	hui-mini.el	/^(defun hui-search-web ()$/
hui-select-and-copy-thing	hui-select.el	/^(defun hui-select-and-copy-thing ()$/
hui-select-and-kill-thing	hui-select.el	/^(defun hui-select-and-kill-thing ()$/
hui-select-at-blank-line-or-comment	hui-select.el	/^(defun hui-select-at-blank-line-or-comment ()$/
hui-select-at-delimited-sexp-p	hui-select.el	/^(defun hui-select-at-delimited-sexp-p ()$/
hui-select-at-delimited-thing-p	hui-select.el	/^(defun hui-select-at-delimited-thing-p ()$/
hui-select-at-p	hui-select.el	/^(defun hui-select-at-p (&optional pos)$/
hui-select-back-to-indentation	hui-select.el	/^(defun hui-select-back-to-indentation ()$/
hui-select-bigger-alist	hui-select.el	/^(defvar hui-select-bigger-alist$/
hui-select-bigger-thing	hui-select.el	/^(defun hui-select-bigger-thing ()$/
hui-select-boundaries	hui-select.el	/^(defun hui-select-boundaries (pos)$/
hui-select-brace-def-or-declaration	hui-select.el	/^(defun hui-select-brace-def-or-declaration (pos)$/
hui-select-brace-modes	hui-select.el	/^(defcustom hui-select-brace-modes$/
hui-select-buffer	hui-select.el	/^(defun hui-select-buffer (_pos)$/
hui-select-char-p	hui-select.el	/^(defcustom hui-select-char-p nil$/
hui-select-comment	hui-select.el	/^(defun hui-select-comment (pos)$/
hui-select-delimited-thing	hui-select.el	/^(defun hui-select-delimited-thing ()$/
hui-select-delimited-thing-call	hui-select.el	/^(defun hui-select-delimited-thing-call (func)$/
hui-select-display-type	hui-select.el	/^(defcustom hui-select-display-type t$/
hui-select-double-click-hook	hui-select.el	/^(defun hui-select-double-click-hook (event click-c/
hui-select-get-region-boundaries	hui-select.el	/^(defun hui-select-get-region-boundaries ()$/
hui-select-get-thing	hui-select.el	/^(defun hui-select-get-thing ()$/
hui-select-goto-matching-delimiter	hui-select.el	/^(defun hui-select-goto-matching-delimiter ()$/
hui-select-goto-matching-tag	hui-select.el	/^(defun hui-select-goto-matching-tag ()$/
hui-select-ignore-quoted-sexp-modes	hui-select.el	/^(defcustom hui-select-ignore-quoted-sexp-modes$/
hui-select-indent-def	hui-select.el	/^(defun hui-select-indent-def (pos)$/
hui-select-indent-end-regexp-alist	hui-select.el	/^(defvar hui-select-indent-end-regexp-alist$/
hui-select-indent-modes	hui-select.el	/^(defcustom hui-select-indent-modes$/
hui-select-indent-non-end-regexp-alist	hui-select.el	/^(defvar hui-select-indent-non-end-regexp-alist$/
hui-select-initialize	hui-select.el	/^(defun hui-select-initialize ()$/
hui-select-line	hui-select.el	/^(defun hui-select-line (pos)$/
hui-select-mark-delimited-sexp	hui-select.el	/^(defun hui-select-mark-delimited-sexp ()$/
hui-select-markup-modes	hui-select.el	/^(defcustom hui-select-markup-modes$/
hui-select-markup-pair	hui-select.el	/^(defun hui-select-markup-pair (pos)$/
hui-select-old-region	hui-select.el	/^(defvar hui-select-old-region (cons nil nil)$/
hui-select-page	hui-select.el	/^(defun hui-select-page (pos)$/
hui-select-paragraph	hui-select.el	/^(defun hui-select-paragraph (pos)$/
hui-select-preprocessor-def	hui-select.el	/^(defun hui-select-preprocessor-def (pos)$/
hui-select-previous	hui-select.el	/^(defvar hui-select-previous nil)$/
hui-select-previous	hui-select.el	/^(defvar hui-select-previous 'char$/
hui-select-prior-buffer	hui-select.el	/^(defvar hui-select-prior-buffer nil)$/
hui-select-prior-buffer	hui-select.el	/^(defvar hui-select-prior-buffer nil)$/
hui-select-prior-point	hui-select.el	/^(defvar hui-select-prior-point nil)$/
hui-select-prior-point	hui-select.el	/^(defvar hui-select-prior-point nil)$/
hui-select-punctuation	hui-select.el	/^(defun hui-select-punctuation (pos)$/
hui-select-region	hui-select.el	/^(defvar hui-select-region (cons nil nil)$/
hui-select-region-bigger-p	hui-select.el	/^(defun hui-select-region-bigger-p (old-region new-/
hui-select-reset	hui-select.el	/^(defun hui-select-reset ()$/
hui-select-sentence	hui-select.el	/^(defun hui-select-sentence (pos)$/
hui-select-set-region	hui-select.el	/^(defun hui-select-set-region (beginning end)$/
hui-select-sexp	hui-select.el	/^(defun hui-select-sexp (pos)$/
hui-select-sexp-end	hui-select.el	/^(defun hui-select-sexp-end (pos)$/
hui-select-sexp-start	hui-select.el	/^(defun hui-select-sexp-start (pos)$/
hui-select-sexp-up	hui-select.el	/^(defun hui-select-sexp-up (pos)$/
hui-select-string	hui-select.el	/^(defun hui-select-string (pos)$/
hui-select-string-p	hui-select.el	/^(defun hui-select-string-p (&optional start-delim /
hui-select-symbol	hui-select.el	/^(defun hui-select-symbol (pos)$/
hui-select-syntactical-region	hui-select.el	/^(defun hui-select-syntactical-region (pos)$/
hui-select-syntax-alist	hui-select.el	/^(defcustom hui-select-syntax-alist$/
hui-select-syntax-table	hui-select.el	/^(defconst hui-select-syntax-table$/
hui-select-text-modes	hui-select.el	/^(defcustom hui-select-text-modes$/
hui-select-thing	hui-select.el	/^(defun hui-select-thing ()$/
hui-select-thing-with-mouse	hui-select.el	/^(defun hui-select-thing-with-mouse (event)$/
hui-select-whitespace	hui-select.el	/^(defcustom hui-select-whitespace t$/
hui-select-whitespace	hui-select.el	/^(defun hui-select-whitespace (pos)$/
hui-select-word	hui-select.el	/^(defun hui-select-word (pos)$/
hui:action	hui.el	/^(defun hui:action (actype &optional prompt)$/
hui:actype	hui.el	/^(defun hui:actype (&optional default-actype prompt/
hui:bind-key	hui.el	/^(defun hui:bind-key (cmd &optional new-key)$/
hui:bottom-window	hui-mini.el	/^(defun hui:bottom-window ()$/
hui:buf-writable-err	hui.el	/^(defun hui:buf-writable-err (but-buf func-name)$/
hui:but-flash	hsettings.el	/^(defun hui:but-flash ())$/
hui:delimited-selectable-thing	hui.el	/^(defun hui:delimited-selectable-thing ()$/
hui:delimited-selectable-thing-and-bounds	hui.el	/^(defun hui:delimited-selectable-thing-and-bounds (/
hui:doc-a-z	hui-mini.el	/^(defcustom hui:doc-a-z$/
hui:ebut-act	hui.el	/^(defun hui:ebut-act (&optional but)$/
hui:ebut-create	hui.el	/^(defun hui:ebut-create (&optional start end)$/
hui:ebut-delete	hui.el	/^(defun hui:ebut-delete (but-key &optional key-src)/
hui:ebut-delete-op	hui.el	/^(defun hui:ebut-delete-op (interactive but-key key/
hui:ebut-edit	hui.el	/^(defun hui:ebut-edit (lbl-key)$/
hui:ebut-edit-region	hui.el	/^(defun hui:ebut-edit-region ()$/
hui:ebut-label-prev	hui.el	/^(defvar hui:ebut-label-prev nil$/
hui:ebut-link-create	hui.el	/^(defun hui:ebut-link-create (edit-flag but-window /
hui:ebut-link-directly	hui.el	/^(defun hui:ebut-link-directly (&optional depress-w/
hui:ebut-message	hui.el	/^(defun hui:ebut-message (but-edit-flag)$/
hui:ebut-prompt-for-action	hui.el	/^(defcustom hui:ebut-prompt-for-action nil$/
hui:ebut-rename	hui.el	/^(defun hui:ebut-rename (curr-label new-label)$/
hui:ebut-search	hui.el	/^(defun hui:ebut-search (string &optional match-par/
hui:ebut-unmark	hui.el	/^(defun hui:ebut-unmark (&optional but-key key-src /
hui:file-find	hui.el	/^(defun hui:file-find (file-name)$/
hui:gbut-create	hui.el	/^(defun hui:gbut-create (lbl ibut-flag)$/
hui:gbut-delete	hui.el	/^(defun hui:gbut-delete (but-key)$/
hui:gbut-edit	hui.el	/^(defun hui:gbut-edit (lbl-key)$/
hui:gbut-link-directly	hui.el	/^(defun hui:gbut-link-directly (&optional arg)$/
hui:gbut-rename	hui.el	/^(defun hui:gbut-rename (label)$/
hui:get-keys	hui-mini.el	/^(defun hui:get-keys ()$/
hui:gibut-create	hui.el	/^(defun hui:gibut-create (name text)$/
hui:global-bind-key	hui.el	/^(defun hui:global-bind-key (cmd &optional new-key)/
hui:hbut-act	hui.el	/^(defun hui:hbut-act (&optional but)$/
hui:hbut-buf	hui.el	/^(defun hui:hbut-buf (&optional prompt)$/
hui:hbut-current-act	hui.el	/^(defun hui:hbut-current-act ()$/
hui:hbut-delete	hui.el	/^(defun hui:hbut-delete (&optional but-key key-src)/
hui:hbut-delete-confirm-flag	hui.el	/^(defcustom hui:hbut-delete-confirm-flag t$/
hui:hbut-help	hui.el	/^(defun hui:hbut-help (&optional but)$/
hui:hbut-label	hui.el	/^(defun hui:hbut-label (default-label func-name &op/
hui:hbut-label-default	hui.el	/^(defun hui:hbut-label-default (start end &optional/
hui:hbut-operate	hui.el	/^(defun hui:hbut-operate (operation operation-str &/
hui:hbut-rename	hui.el	/^(defun hui:hbut-rename ()$/
hui:hbut-report	hui.el	/^(defun hui:hbut-report (&optional arg)$/
hui:hbut-summarize	hui.el	/^(defalias 'hui:hbut-summarize #'hui:hbut-report)$/
hui:hbut-term-highlight	hui.el	/^(defun hui:hbut-term-highlight (start end)$/
hui:hbut-term-unhighlight	hui.el	/^(defun hui:hbut-term-unhighlight (start _end)$/
hui:help-ebut-highlight	hui.el	/^(defun hui:help-ebut-highlight ()$/
hui:htype-delete	hui.el	/^(defun hui:htype-delete (htype-sym)$/
hui:htype-help	hui.el	/^(defun hui:htype-help (htype-sym &optional no-sort/
hui:htype-help-current-window	hui.el	/^(defun hui:htype-help-current-window (htype-sym &o/
hui:ibut-act	hui.el	/^(defun hui:ibut-act (&optional ibut)$/
hui:ibut-create	hui.el	/^(defun hui:ibut-create (&optional start end)$/
hui:ibut-delete-op	hui.el	/^(defun hui:ibut-delete-op (interactive but-key key/
hui:ibut-edit	hui.el	/^(defun hui:ibut-edit (lbl-key)$/
hui:ibut-label-create	hui.el	/^(defun hui:ibut-label-create ()$/
hui:ibut-label-prev	HY-TRY.el	/^(defvar hui:ibut-label-prev nil$/
hui:ibut-link-create	hui.el	/^(defun hui:ibut-link-create (edit-flag but-window /
hui:ibut-link-directly	hui.el	/^(defun hui:ibut-link-directly (&optional depress-w/
hui:ibut-message	hui.el	/^(defun hui:ibut-message (but-edit-flag)$/
hui:ibut-rename	hui.el	/^(defun hui:ibut-rename (lbl-key)$/
hui:ibut-rename-same-as-ebut-rename	HY-TRY.el	/^(defun hui:ibut-rename-same-as-ebut-rename (curr-l/
hui:ignore-buffers-regexp	hui.el	/^(defvar hui:ignore-buffers-regexp "\\\\`\\\\( \\\\|BLANK/
hui:key-dir	hui.el	/^(defun hui:key-dir (but-buf)$/
hui:key-src	hui.el	/^(defun hui:key-src (but-buf)$/
hui:link-possible-types	hui.el	/^(defun hui:link-possible-types ()$/
hui:list-remove-text-properties	hui.el	/^(defun hui:list-remove-text-properties (lst)$/
hui:menu-abort	hui-mini.el	/^(defvar hui:menu-abort           "\\C-g"$/
hui:menu-abort	hui-mini.el	/^(defalias 'hui:menu-abort  #'hui:menu-enter)$/
hui:menu-act	hui-mini.el	/^(defun hui:menu-act (menu &optional menu-list doc-/
hui:menu-backward-item	hui-mini.el	/^(defun hui:menu-backward-item (&optional arg)$/
hui:menu-bind	hui-mini-ext.el	/^(defun hui:menu-bind (menu keymap)$/
hui:menu-bind-all	hui-mini-ext.el	/^(defun hui:menu-bind-all ()$/
hui:menu-choose	hui-mini.el	/^(defun hui:menu-choose (menu-alist &optional doc-f/
hui:menu-doc	hui-mini.el	/^(defun hui:menu-doc (key-sequence &optional help-s/
hui:menu-enter	hui-mini.el	/^(defun hui:menu-enter (&optional char-str)$/
hui:menu-exit-hyperbole	hui-mini.el	/^(defvar hui:menu-exit-hyperbole  "X"$/
hui:menu-exit-hyperbole	hui-mini.el	/^(defun hui:menu-exit-hyperbole ()$/
hui:menu-forward-item	hui-mini.el	/^(defun hui:menu-forward-item (&optional arg)$/
hui:menu-get-keys	hui-mini.el	/^(defun hui:menu-get-keys (menu &optional menu-list/
hui:menu-help	hui-mini.el	/^(defun hui:menu-help (help-str)$/
hui:menu-hyperbole-prefix	hui-mini.el	/^(defun hui:menu-hyperbole-prefix ()$/
hui:menu-item	hui-mini.el	/^(defun hui:menu-item (key doc-flag help-string-fla/
hui:menu-item-key	hui-mini.el	/^(defun hui:menu-item-key (item)$/
hui:menu-item-keys	hui-mini.el	/^(defun hui:menu-item-keys (menu-alist)$/
hui:menu-keys	hui-mini.el	/^(defvar hui:menu-keys            ""$/
hui:menu-line	hui-mini.el	/^(defun hui:menu-line (menu-alist)$/
hui:menu-mode-map	hui-mini.el	/^(defvar hui:menu-mode-map nil$/
hui:menu-multi-line	hui-mini.el	/^(defun hui:menu-multi-line (menu-alist)$/
hui:menu-name-at-p	hui-mini.el	/^(defun hui:menu-name-at-p ()$/
hui:menu-p	hui-mini.el	/^(defvar hui:menu-p nil$/
hui:menu-quit	hui-mini.el	/^(defvar hui:menu-quit            "Q"$/
hui:menu-quit	hui-mini.el	/^(defalias 'hui:menu-quit   #'hui:menu-enter)$/
hui:menu-rolo	hui-mini.el	/^(defcustom hui:menu-rolo$/
hui:menu-select	hui-mini.el	/^(defvar hui:menu-select          "\\C-m"$/
hui:menu-select	hui-mini.el	/^(defalias 'hui:menu-select #'hui:menu-enter)$/
hui:menu-to	hui-mini.el	/^(defcustom hui:menu-to$/
hui:menu-to-personal-section	hui-mini.el	/^(defun hui:menu-to-personal-section (section)$/
hui:menu-top	hui-mini.el	/^(defvar hui:menu-top             "\\C-t"$/
hui:menu-top	hui-mini.el	/^(defalias 'hui:menu-top    #'hui:menu-enter)$/
hui:menu-web-search	hui-mini.el	/^(defun hui:menu-web-search ()$/
hui:menus	hui-mini.el	/^(defvar hui:menus nil$/
hycontrol--blank-buffer	hycontrol.el	/^(defvar hycontrol--blank-buffer (get-buffer-create/
hycontrol--buffer-list	hycontrol.el	/^(defvar hycontrol--buffer-list nil)$/
hycontrol--buffer-list-pointer	hycontrol.el	/^(defvar hycontrol--buffer-list-pointer nil)$/
hycontrol--exit-status	hycontrol.el	/^(defvar hycontrol--exit-status nil$/
hycontrol--fconfig	hycontrol.el	/^(defvar hycontrol--fconfig nil$/
hycontrol--frame-heights-pointer	hycontrol.el	/^(defvar hycontrol--frame-heights-pointer nil)$/
hycontrol--frame-widths-pointer	hycontrol.el	/^(defvar hycontrol--frame-widths-pointer nil)$/
hycontrol--frames-prompt-format	hycontrol.el	/^(defvar hycontrol--frames-prompt-format$/
hycontrol--initial-which-key-inhibit	hycontrol.el	/^(defvar hycontrol--initial-which-key-inhibit nil$/
hycontrol--invert-display-buffer-predicates	hycontrol.el	/^(defvar hycontrol--invert-display-buffer-predicate/
hycontrol--prompt-format	hycontrol.el	/^(defvar hycontrol--prompt-format nil$/
hycontrol--quit-function	hycontrol.el	/^(defvar hycontrol--quit-function nil$/
hycontrol--screen-edge-position	hycontrol.el	/^(defvar hycontrol--screen-edge-position 0$/
hycontrol--vnk-string	hycontrol.el	/^(defconst hycontrol--vnk-string$/
hycontrol--wconfig	hycontrol.el	/^(defvar hycontrol--wconfig nil$/
hycontrol--windows-prompt-format	hycontrol.el	/^(defvar hycontrol--windows-prompt-format$/
hycontrol-abort	hycontrol.el	/^(defun hycontrol-abort ()$/
hycontrol-arg	hycontrol.el	/^(defvar hycontrol-arg nil$/
hycontrol-clone-window-to-new-frame	hycontrol.el	/^(defun hycontrol-clone-window-to-new-frame ()$/
hycontrol-debug	hycontrol.el	/^(defvar hycontrol-debug nil$/
hycontrol-delete-other-frames	hycontrol.el	/^(defun hycontrol-delete-other-frames ()$/
hycontrol-delete-other-windows	hycontrol.el	/^(defun hycontrol-delete-other-windows ()$/
hycontrol-disable-modes	hycontrol.el	/^(defun hycontrol-disable-modes ()$/
hycontrol-display-buffer-predicate-list	hycontrol.el	/^(defvar hycontrol-display-buffer-predicate-list$/
hycontrol-display-buffer-predicate-results	hycontrol.el	/^(defun hycontrol-display-buffer-predicate-results /
hycontrol-display-screen-offsets	hycontrol.el	/^(defun hycontrol-display-screen-offsets ()$/
hycontrol-enable-frames-mode	hycontrol.el	/^(defun hycontrol-enable-frames-mode (&optional arg/
hycontrol-enable-windows-mode	hycontrol.el	/^(defun hycontrol-enable-windows-mode (&optional ar/
hycontrol-end-mode	hycontrol.el	/^(defun hycontrol-end-mode ()$/
hycontrol-frame-adjust-heights	hycontrol.el	/^(defun hycontrol-frame-adjust-heights ()$/
hycontrol-frame-adjust-heights-full-width	hycontrol.el	/^(defun hycontrol-frame-adjust-heights-full-width (/
hycontrol-frame-adjust-widths	hycontrol.el	/^(defun hycontrol-frame-adjust-widths ()$/
hycontrol-frame-adjust-widths-full-height	hycontrol.el	/^(defun hycontrol-frame-adjust-widths-full-height (/
hycontrol-frame-at-bottom-p	hycontrol.el	/^(defun hycontrol-frame-at-bottom-p ()$/
hycontrol-frame-at-left-p	hycontrol.el	/^(defun hycontrol-frame-at-left-p ()$/
hycontrol-frame-at-right-p	hycontrol.el	/^(defun hycontrol-frame-at-right-p ()$/
hycontrol-frame-at-top-p	hycontrol.el	/^(defun hycontrol-frame-at-top-p ()$/
hycontrol-frame-edges	hycontrol.el	/^(defsubst hycontrol-frame-edges (&optional frame)$/
hycontrol-frame-fit-to-screen	hycontrol.el	/^(defun hycontrol-frame-fit-to-screen (&optional fr/
hycontrol-frame-height	hycontrol.el	/^(defun hycontrol-frame-height (&optional frame)$/
hycontrol-frame-height-percentage-of-screen	hycontrol.el	/^(defun hycontrol-frame-height-percentage-of-screen/
hycontrol-frame-heights	hycontrol.el	/^(defvar hycontrol-frame-heights$/
hycontrol-frame-minimize-lines	hycontrol.el	/^(defun hycontrol-frame-minimize-lines ()$/
hycontrol-frame-offset	hycontrol.el	/^(defcustom hycontrol-frame-offset '(13 . 23)$/
hycontrol-frame-percentage-of-screen	hycontrol.el	/^(defun hycontrol-frame-percentage-of-screen (perce/
hycontrol-frame-resize-arg	hycontrol.el	/^(defun hycontrol-frame-resize-arg (arg)$/
hycontrol-frame-resize-percentage	hycontrol.el	/^(defun hycontrol-frame-resize-percentage (arg)$/
hycontrol-frame-resize-to-bottom	hycontrol.el	/^(defun hycontrol-frame-resize-to-bottom (&optional/
hycontrol-frame-resize-to-left	hycontrol.el	/^(defun hycontrol-frame-resize-to-left (&optional a/
hycontrol-frame-resize-to-right	hycontrol.el	/^(defun hycontrol-frame-resize-to-right (&optional /
hycontrol-frame-resize-to-top	hycontrol.el	/^(defun hycontrol-frame-resize-to-top (&optional ar/
hycontrol-frame-swap-buffers	hycontrol.el	/^(defun hycontrol-frame-swap-buffers ()$/
hycontrol-frame-to-bottom	hycontrol.el	/^(defun hycontrol-frame-to-bottom ()$/
hycontrol-frame-to-bottom-center	hycontrol.el	/^(defun hycontrol-frame-to-bottom-center ()$/
hycontrol-frame-to-bottom-left	hycontrol.el	/^(defun hycontrol-frame-to-bottom-left ()$/
hycontrol-frame-to-bottom-right	hycontrol.el	/^(defun hycontrol-frame-to-bottom-right ()$/
hycontrol-frame-to-center	hycontrol.el	/^(defun hycontrol-frame-to-center ()$/
hycontrol-frame-to-left	hycontrol.el	/^(defun hycontrol-frame-to-left ()$/
hycontrol-frame-to-left-center	hycontrol.el	/^(defun hycontrol-frame-to-left-center ()$/
hycontrol-frame-to-right	hycontrol.el	/^(defun hycontrol-frame-to-right ()$/
hycontrol-frame-to-right-center	hycontrol.el	/^(defun hycontrol-frame-to-right-center ()$/
hycontrol-frame-to-screen-edges	hycontrol.el	/^(defun hycontrol-frame-to-screen-edges (&optional /
hycontrol-frame-to-top	hycontrol.el	/^(defun hycontrol-frame-to-top ()$/
hycontrol-frame-to-top-center	hycontrol.el	/^(defun hycontrol-frame-to-top-center ()$/
hycontrol-frame-to-top-left	hycontrol.el	/^(defun hycontrol-frame-to-top-left ()$/
hycontrol-frame-to-top-right	hycontrol.el	/^(defun hycontrol-frame-to-top-right ()$/
hycontrol-frame-width	hycontrol.el	/^(defun hycontrol-frame-width (&optional frame)$/
hycontrol-frame-width-percentage-of-screen	hycontrol.el	/^(defun hycontrol-frame-width-percentage-of-screen /
hycontrol-frame-widths	hycontrol.el	/^(defvar hycontrol-frame-widths$/
hycontrol-frame-x-origin	hycontrol.el	/^(defsubst hycontrol-frame-x-origin (&optional fram/
hycontrol-frame-y-origin	hycontrol.el	/^(defsubst hycontrol-frame-y-origin (&optional fram/
hycontrol-frame-zoom	hycontrol.el	/^(defun hycontrol-frame-zoom (zoom-func arg max-msg/
hycontrol-framemove-direction	hycontrol.el	/^(defun hycontrol-framemove-direction (direction)$/
hycontrol-framemove-down	hycontrol.el	/^(defun hycontrol-framemove-down ()$/
hycontrol-framemove-left	hycontrol.el	/^(defun hycontrol-framemove-left ()$/
hycontrol-framemove-right	hycontrol.el	/^(defun hycontrol-framemove-right ()$/
hycontrol-framemove-up	hycontrol.el	/^(defun hycontrol-framemove-up ()$/
hycontrol-frames	hycontrol.el	/^(defun hycontrol-frames (&optional arg)$/
hycontrol-frames-mode	hycontrol.el	/^(define-global-minor-mode hycontrol-frames-mode hy/
hycontrol-frames-mode	hyperbole-autoloads.el	/^(defvar hycontrol-frames-mode nil "\\$/
hycontrol-frames-mode-map	hycontrol.el	/^(defvar hycontrol-frames-mode-map$/
hycontrol-frames-setup	hycontrol.el	/^(defun hycontrol-frames-setup ()$/
hycontrol-get-screen-offsets	hycontrol.el	/^(defun hycontrol-get-screen-offsets ()$/
hycontrol-help-flag	hycontrol.el	/^(defcustom hycontrol-help-flag t$/
hycontrol-help-key-description	hycontrol.el	/^(defun hycontrol-help-key-description ()$/
hycontrol-invert-mode-line	hycontrol.el	/^(defun hycontrol-invert-mode-line ()$/
hycontrol-invert-mode-line-flag	hycontrol.el	/^(defcustom hycontrol-invert-mode-line-flag t$/
hycontrol-invert-prefix-arg	hycontrol.el	/^(defun hycontrol-invert-prefix-arg ()$/
hycontrol-keep-window-flag	hycontrol.el	/^(defcustom hycontrol-keep-window-flag nil$/
hycontrol-local-frames-mode	hycontrol.el	/^(define-minor-mode hycontrol-local-frames-mode$/
hycontrol-local-windows-mode	hycontrol.el	/^(define-minor-mode hycontrol-local-windows-mode$/
hycontrol-make-frame	hycontrol.el	/^(defun hycontrol-make-frame ()$/
hycontrol-make-windows-grid	hycontrol.el	/^(defun hycontrol-make-windows-grid (arg &optional /
hycontrol-maximum-units	hycontrol.el	/^(defcustom hycontrol-maximum-units 1000$/
hycontrol-message	hycontrol.el	/^(defun hycontrol-message (max-msgs &rest msg-args)/
hycontrol-minus-key	hycontrol.el	/^(defun hycontrol-minus-key ()$/
hycontrol-move-frame	hycontrol.el	/^(defun hycontrol-move-frame (arrow pixels)$/
hycontrol-multiply-universal-arg	hycontrol.el	/^(defun hycontrol-multiply-universal-arg ()$/
hycontrol-numeric-keypad	hycontrol.el	/^(defun hycontrol-numeric-keypad (e _arg)$/
hycontrol-post-command-hook	hycontrol.el	/^(defun hycontrol-post-command-hook ()$/
hycontrol-pre-command-hook	hycontrol.el	/^(defun hycontrol-pre-command-hook ()$/
hycontrol-quit	hycontrol.el	/^(defun hycontrol-quit ()$/
hycontrol-reset-prefix-arg	hycontrol.el	/^(defun hycontrol-reset-prefix-arg ()$/
hycontrol-restore-frame-configuration	hycontrol.el	/^(defun hycontrol-restore-frame-configuration ()$/
hycontrol-restore-window-configuration	hycontrol.el	/^(defun hycontrol-restore-window-configuration ()$/
hycontrol-save-configurations	hycontrol.el	/^(defun hycontrol-save-configurations ()$/
hycontrol-save-frame-configuration	hycontrol.el	/^(defun hycontrol-save-frame-configuration ()$/
hycontrol-save-window-configuration	hycontrol.el	/^(defun hycontrol-save-window-configuration ()$/
hycontrol-screen-bottom-offset	hycontrol.el	/^(defcustom hycontrol-screen-bottom-offset 0$/
hycontrol-screen-left-offset	hycontrol.el	/^(defcustom hycontrol-screen-left-offset   0$/
hycontrol-screen-offset-alist	hycontrol.el	/^(defvar hycontrol-screen-offset-alist$/
hycontrol-screen-offset-sensitivity	hycontrol.el	/^(defconst hycontrol-screen-offset-sensitivity 12$/
hycontrol-screen-right-offset	hycontrol.el	/^(defcustom hycontrol-screen-right-offset  0$/
hycontrol-screen-top-offset	hycontrol.el	/^(defcustom hycontrol-screen-top-offset    0$/
hycontrol-set-frame-height	hycontrol.el	/^(defun hycontrol-set-frame-height (frame height &o/
hycontrol-set-frame-position	hycontrol.el	/^(defun hycontrol-set-frame-position (frame x y)$/
hycontrol-set-frame-size	hycontrol.el	/^(defun hycontrol-set-frame-size (frame width heigh/
hycontrol-set-frame-width	hycontrol.el	/^(defun hycontrol-set-frame-width (frame width &opt/
hycontrol-set-height-percentage-full-width	hycontrol.el	/^(defun hycontrol-set-height-percentage-full-width /
hycontrol-set-screen-offsets	hycontrol.el	/^(defun hycontrol-set-screen-offsets ()$/
hycontrol-set-width-percentage-full-height	hycontrol.el	/^(defun hycontrol-set-width-percentage-full-height /
hycontrol-setup	hycontrol.el	/^(defun hycontrol-setup (arg setup-function)$/
hycontrol-stay-in-mode	hycontrol.el	/^(defun hycontrol-stay-in-mode ()$/
hycontrol-toggle-help	hycontrol.el	/^(defun hycontrol-toggle-help ()$/
hycontrol-universal-arg-digit	hycontrol.el	/^(defun hycontrol-universal-arg-digit (digit)$/
hycontrol-user-error	hycontrol.el	/^(defun hycontrol-user-error (max-msgs &rest err)$/
hycontrol-virtual-numeric-keypad	hycontrol.el	/^(defun hycontrol-virtual-numeric-keypad (arg)$/
hycontrol-window-display-buffer	hycontrol.el	/^(defun hycontrol-window-display-buffer (window)$/
hycontrol-window-display-buffer-with-repeats	hycontrol.el	/^(defun hycontrol-window-display-buffer-with-repeat/
hycontrol-window-maximize-lines	hycontrol.el	/^(defun hycontrol-window-maximize-lines ()$/
hycontrol-window-minimize-lines	hycontrol.el	/^(defun hycontrol-window-minimize-lines ()$/
hycontrol-window-swap-buffers	hycontrol.el	/^(defun hycontrol-window-swap-buffers ()$/
hycontrol-window-to-new-frame	hycontrol.el	/^(defun hycontrol-window-to-new-frame ()$/
hycontrol-windows	hycontrol.el	/^(defun hycontrol-windows (&optional arg)$/
hycontrol-windows-grid	hycontrol.el	/^(defun hycontrol-windows-grid (arg)$/
hycontrol-windows-grid-buffer-list	hycontrol.el	/^(defun hycontrol-windows-grid-buffer-list ()$/
hycontrol-windows-grid-by-buffer-list	hycontrol.el	/^(defun hycontrol-windows-grid-by-buffer-list (grid/
hycontrol-windows-grid-by-file-list	hycontrol.el	/^(defun hycontrol-windows-grid-by-file-list (grid-s/
hycontrol-windows-grid-by-file-pattern	hycontrol.el	/^(defun hycontrol-windows-grid-by-file-pattern (arg/
hycontrol-windows-grid-by-major-mode	hycontrol.el	/^(defun hycontrol-windows-grid-by-major-mode (arg m/
hycontrol-windows-grid-marked-items	hycontrol.el	/^(defun hycontrol-windows-grid-marked-items ()$/
hycontrol-windows-grid-minimum-size	hycontrol.el	/^(defun hycontrol-windows-grid-minimum-size (num-bu/
hycontrol-windows-grid-number-of-windows	hycontrol.el	/^(defun hycontrol-windows-grid-number-of-windows (a/
hycontrol-windows-grid-repeatedly	hycontrol.el	/^(defun hycontrol-windows-grid-repeatedly (&optiona/
hycontrol-windows-grid-valid-size-p	hycontrol.el	/^(defsubst hycontrol-windows-grid-valid-size-p (gri/
hycontrol-windows-grid-validate	hycontrol.el	/^(defun hycontrol-windows-grid-validate (arg)$/
hycontrol-windows-mode	hycontrol.el	/^(define-global-minor-mode hycontrol-windows-mode h/
hycontrol-windows-mode	hyperbole-autoloads.el	/^(defvar hycontrol-windows-mode nil "\\$/
hycontrol-windows-mode-map	hycontrol.el	/^(defvar hycontrol-windows-mode-map$/
hycontrol-windows-setup	hycontrol.el	/^(defun hycontrol-windows-setup ()$/
hynote	hynote.el	/^(defgroup hynote nil$/
hynote	hynote.el	/^(defmacro hynote (&rest args)$/
hynote--initialize-file-list	hynote.el	/^(defun hynote--initialize-file-list ()$/
hynote--wconfig	hynote.el	/^(defvar hynote--wconfig nil$/
hynote-activate-link	hynote.el	/^(defun hynote-activate-link (&rest args)$/
hynote-add	hynote.el	/^(defun hynote-add (name &optional file)$/
hynote-add-match	hynote.el	/^(defun hynote-add-match (hynote-matches-buffer reg/
hynote-back-to-visible-point	hynote.el	/^(defun hynote-back-to-visible-point ()$/
hynote-buffer-exists-p	hynote.el	/^(defun hynote-buffer-exists-p (hynote-buf)$/
hynote-current-date	hynote.el	/^(defun hynote-current-date ()$/
hynote-date-format	hynote.el	/^(defcustom hynote-date-format "%m\/%d\/%Y"$/
hynote-display-buffer	hynote.el	/^(defvar hynote-display-buffer "*HyNote*"$/
hynote-display-format-function	hynote.el	/^(defvar hynote-display-format-function$/
hynote-display-matches	hynote.el	/^(defun hynote-display-matches (&optional display-b/
hynote-display-to-entry-end	hynote.el	/^(defun hynote-display-to-entry-end ()$/
hynote-edit	hynote.el	/^(defun hynote-edit (&optional name file)$/
hynote-edit-entry	hynote.el	/^(defun hynote-edit-entry ()$/
hynote-email-format	hynote.el	/^(defcustom hynote-email-format "%s\\t\\t<%s>"$/
hynote-entry-group-number	hynote.el	/^(defvar hynote-entry-group-number 1$/
hynote-entry-name-regexp	hynote.el	/^(defvar hynote-entry-name-regexp "[-_a-zA-Z0-9@.]+/
hynote-entry-regexp	hynote.el	/^(defvar hynote-entry-regexp "^\\\\(\\\\*+\\\\)\\\\([ \\t]+\\/
hynote-entry-trailing-space-group-number	hynote.el	/^(defvar hynote-entry-trailing-space-group-number 2/
hynote-fgrep	hynote.el	/^(defun hynote-fgrep (string &optional max-matches /
hynote-fgrep-cell-ref-list	hynote.el	/^(defun hynote-fgrep-cell-ref-list (cell-ref-list)$/
hynote-fgrep-directories	hynote.el	/^(defun hynote-fgrep-directories (file-regexp &rest/
hynote-fgrep-file	hynote.el	/^(defun hynote-fgrep-file (hynote-file-or-buf strin/
hynote-file-list	hynote.el	/^(defcustom hynote-file-list (hynote--initialize-fi/
hynote-file-suffix-regexp	hynote.el	/^(defcustom hynote-file-suffix-regexp "\\\\.\\\\(kotl\\\\/
hynote-find-file	hynote.el	/^(defun hynote-find-file (&optional file find-funct/
hynote-find-file-function	hynote.el	/^(defcustom hynote-find-file-function #'find-file$/
hynote-find-file-noselect	hynote.el	/^(defun hynote-find-file-noselect (&optional file)$/
hynote-find-file-noselect-function	hynote.el	/^(defcustom hynote-find-file-noselect-function #'fi/
hynote-format-name	hynote.el	/^(defun hynote-format-name (name-str first last)$/
hynote-forward-visible-line	hynote.el	/^(defun hynote-forward-visible-line (&optional arg)/
hynote-grep	hynote.el	/^(defun hynote-grep (regexp &optional max-matches h/
hynote-grep-directories	hynote.el	/^(defun hynote-grep-directories (file-regexp &rest /
hynote-grep-file	hynote.el	/^(defun hynote-grep-file (hynote-file-or-buf regexp/
hynote-grep-or-fgrep	hynote.el	/^(defun hynote-grep-or-fgrep (&optional arg)$/
hynote-hdr-format	hynote.el	/^(defconst hynote-hdr-format$/
hynote-hdr-regexp	hynote.el	/^(defconst hynote-hdr-regexp "^==="$/
hynote-headline-at	hynote.el	/^(defun hynote-headline-at ()$/
hynote-hide-subtree	hynote.el	/^(defun hynote-hide-subtree ()$/
hynote-highlight-face	hynote.el	/^(defcustom hynote-highlight-face 'match$/
hynote-highlight-matches	hynote.el	/^(defun hynote-highlight-matches (regexp start _end/
hynote-isearch	hynote.el	/^(defun hynote-isearch (&optional arg)$/
hynote-isearch-for-regexp	hynote.el	/^(defun hynote-isearch-for-regexp (regexp fold-sear/
hynote-isearch-regexp	hynote.el	/^(defun hynote-isearch-regexp (&optional arg)$/
hynote-kill	hynote.el	/^(defun hynote-kill (name &optional file)$/
hynote-kill-buffer	hynote.el	/^(defun hynote-kill-buffer (&optional hynote-buf)$/
hynote-kill-buffers-after-use	hynote.el	/^(defcustom hynote-kill-buffers-after-use nil$/
hynote-kotl-cell-match	hynote.el	/^(defun hynote-kotl-cell-match (cell-ref _ignore)$/
hynote-locate	hynote.el	/^(defun hynote-locate ()$/
hynote-mail-to	hynote.el	/^(defun hynote-mail-to ()$/
hynote-map-level	hynote.el	/^(defun hynote-map-level (func hynote-file-or-buf l/
hynote-map-single-subtree	hynote.el	/^(defun hynote-map-single-subtree (func exact-level/
hynote-match-regexp	hynote.el	/^(defconst hynote-match-regexp nil$/
hynote-min-matched-level	hynote.el	/^(defun hynote-min-matched-level ()$/
hynote-mode	hynote.el	/^(defun hynote-mode ()$/
hynote-mode-map	hynote.el	/^(defvar hynote-mode-map nil$/
hynote-mode-outline-level	hynote.el	/^(defun hynote-mode-outline-level ()$/
hynote-mode-syntax-table	hynote.el	/^(defvar hynote-mode-syntax-table nil$/
hynote-name-and-email	hynote.el	/^(defun hynote-name-and-email ()$/
hynote-narrow	hynote.el	/^(defun hynote-narrow ()$/
hynote-next-entry	hynote.el	/^(defun hynote-next-entry (arg)$/
hynote-next-match	hynote.el	/^(defun hynote-next-match ()$/
hynote-overview	hynote.el	/^(defun hynote-overview (levels-to-show)$/
hynote-parse-line-column-numbers	hynote.el	/^(defun hynote-parse-line-column-numbers (lc-string/
hynote-previous-match	hynote.el	/^(defun hynote-previous-match ()$/
hynote-prompt	hynote.el	/^(defun hynote-prompt (keyboard-function prompt)$/
hynote-quit	hynote.el	/^(defun hynote-quit ()$/
hynote-rename	hynote.el	/^(defun hynote-rename (old-file new-file)$/
hynote-save-buffer	hynote.el	/^(defun hynote-save-buffer (&optional hynote-buf)$/
hynote-save-buffers-after-use	hynote.el	/^(defcustom hynote-save-buffers-after-use t$/
hynote-search-directories	hynote.el	/^(defun hynote-search-directories (search-cmd file-/
hynote-set-date	hynote.el	/^(defun hynote-set-date ()$/
hynote-set-display-buffer	hynote.el	/^(defun hynote-set-display-buffer ()$/
hynote-show-levels	hynote.el	/^(defun hynote-show-levels (num-levels)$/
hynote-shrink-window	hynote.el	/^(defun hynote-shrink-window ()$/
hynote-sort	hynote.el	/^(defun hynote-sort (&optional hynote-file)$/
hynote-sort-level	hynote.el	/^(defun hynote-sort-level (hynote-file level-regexp/
hynote-sort-lines	hynote.el	/^(defun hynote-sort-lines (reverse beg end)$/
hynote-to	hynote.el	/^(defun hynote-to (name &optional file-list)$/
hynote-to-buffer	hynote.el	/^(defun hynote-to-buffer (buffer &optional other-wi/
hynote-to-entry-end	hynote.el	/^(defun hynote-to-entry-end (&optional include-sub-/
hynote-toggle-datestamps	hynote.el	/^(defun hynote-toggle-datestamps (&optional arg)$/
hynote-toggle-narrow-to-entry	hynote.el	/^(defun hynote-toggle-narrow-to-entry ()$/
hynote-top-level	hynote.el	/^(defun hynote-top-level ()$/
hynote-verify	hynote.el	/^(defun hynote-verify ()$/
hynote-widen	hynote.el	/^(defun hynote-widen ()$/
hynote-widen	hynote.el	/^(defun hynote-widen ()$/
hynote-word	hynote.el	/^(defun hynote-word (string &optional max-matches h/
hynote-yank	hynote.el	/^(defun hynote-yank (name &optional regexp-p)$/
hynote-yank-reformat-function	hynote.el	/^(defvar hynote-yank-reformat-function nil$/
hyp-address	hibtypes.el	/^(defib hyp-address ()$/
hyp-config	hactypes.el	/^(defact hyp-config (&optional out-buf)$/
hyp-request	hactypes.el	/^(defact hyp-request (&optional out-buf)$/
hyp-source	hactypes.el	/^(defact hyp-source (buf-str-or-file)$/
hyp-source	hibtypes.el	/^(defib hyp-source ()$/
hypb-ert	hypb-ert.el	/^(defun hypb-ert (selector)$/
hypb-ert-def-at-p	hypb-ert.el	/^(defun hypb-ert-def-at-p (&optional start-end-flag/
hypb-ert-get-require-symbols	hypb-ert.el	/^(defun hypb-ert-get-require-symbols ()$/
hypb-ert-message-function	hypb-ert.el	/^(defun hypb-ert-message-function (_msg-pat &rest _/
hypb-ert-require-libraries	hypb-ert.el	/^(defun hypb-ert-require-libraries ()$/
hypb-ert-run-all-tests	hypb-ert.el	/^(defun hypb-ert-run-all-tests ()$/
hypb-ert-run-test	hypb-ert.el	/^(defun hypb-ert-run-test (test-name)$/
hypb-ert-run-test-at-definition	hypb-ert.el	/^(defun hypb-ert-run-test-at-definition (test-name /
hypb-ert-run-tests	hypb-ert.el	/^(defun hypb-ert-run-tests (test-selector)$/
hypb-point-within-string-p	OLD-IBUT-AT-P.el	/^(defun hypb-point-within-string-p ()$/
hypb:activate-interaction-log-mode	hypb.el	/^(defun hypb:activate-interaction-log-mode ()$/
hypb:assert-same-start-and-end-buffer	hypb.el	/^(defmacro hypb:assert-same-start-and-end-buffer (&/
hypb:browse-home-page	hypb.el	/^(defun hypb:browse-home-page ()$/
hypb:call-process-p	hypb.el	/^(defun hypb:call-process-p (program &optional infi/
hypb:char-count	hypb.el	/^(defun hypb:char-count (char array)$/
hypb:chmod	hypb.el	/^(defun hypb:chmod (op octal-permissions file)$/
hypb:cmd-key-series	hypb.el	/^(defun hypb:cmd-key-series (cmd-sym &optional keym/
hypb:cmd-key-vector	hypb.el	/^(defun hypb:cmd-key-vector (cmd-sym &optional keym/
hypb:configuration	hypb.el	/^(defun hypb:configuration (&optional out-buf)$/
hypb:count-visible-windows	hypb.el	/^(defun hypb:count-visible-windows ()$/
hypb:debug	hypb.el	/^(defun hypb:debug ()$/
hypb:decode-url	hypb.el	/^(defun hypb:decode-url (string)$/
hypb:def-to-buffer	hypb.el	/^(defun hypb:def-to-buffer (&optional arg buffer)$/
hypb:devdocs-lookup	hypb.el	/^(defun hypb:devdocs-lookup ()$/
hypb:display-file-with-logo	hypb.el	/^(defun hypb:display-file-with-logo (file)$/
hypb:domain-name	hypb.el	/^(defun hypb:domain-name ()$/
hypb:error	hypb.el	/^(defun hypb:error (&rest args)$/
hypb:fgrep-git-log	hypb.el	/^(defun hypb:fgrep-git-log (string)$/
hypb:fgrep-git-log-activate	hypb.el	/^(defun hypb:fgrep-git-log-activate (_ignore1 &opti/
hypb:fgrep-git-log-mode	hypb.el	/^(define-derived-mode hypb:fgrep-git-log-mode compi/
hypb:file-major-mode	hypb.el	/^(defun hypb:file-major-mode (file)$/
hypb:filter-directories	hypb.el	/^(defun hypb:filter-directories (file-regexp &rest /
hypb:format-args	hypb.el	/^(defun hypb:format-args (args)$/
hypb:format-quote	hypb.el	/^(defun hypb:format-quote (arg)$/
hypb:get-completion	hypb.el	/^(defun hypb:get-completion (&optional event)$/
hypb:get-raw-syntax-descriptor	hypb.el	/^(defun hypb:get-raw-syntax-descriptor (char &optio/
hypb:glob-to-regexp	hypb.el	/^(defun hypb:glob-to-regexp (str)$/
hypb:goto-marker	hypb.el	/^(defun hypb:goto-marker (marker)$/
hypb:grep-git-log	hypb.el	/^(defun hypb:grep-git-log (regexp)$/
hypb:helm-apropos	hypb.el	/^(defun hypb:helm-apropos (&optional symbol-name)$/
hypb:helm-info	hypb.el	/^(defun hypb:helm-info (&optional refresh)$/
hypb:help-buf-name	hypb.el	/^(defun hypb:help-buf-name (&optional suffix)$/
hypb:help-buf-prefix	hypb.el	/^(defconst hypb:help-buf-prefix "*Help: Hyperbole "/
hypb:hkey-help-file	hypb.el	/^(defun hypb:hkey-help-file ()$/
hypb:home-page	hypb.el	/^(defvar hypb:home-page "https:\/\/www.gnu.org\/softwa/
hypb:hy-news-footer	hypb-maintenance.el	/^(defconst hypb:hy-news-footer$/
hypb:hy-news-header	hypb-maintenance.el	/^(defconst hypb:hy-news-header$/
hypb:hyperbole-banner-keymap	hypb.el	/^(defvar hypb:hyperbole-banner-keymap$/
hypb:indirect-function	hypb.el	/^(defun hypb:indirect-function (obj)$/
hypb:insert-hyperbole-banner	hypb.el	/^(defun hypb:insert-hyperbole-banner ()$/
hypb:insert-region	hypb.el	/^(defun hypb:insert-region (buffer start end invisi/
hypb:installation-type	hypb.el	/^(defun hypb:installation-type ()$/
hypb:locate	hypb.el	/^(defun hypb:locate (search-string &optional filter/
hypb:locate-pathnames	hypb.el	/^(defun hypb:locate-pathnames ()$/
hypb:mail-address-mode-list	hypb.el	/^(defvar hypb:mail-address-mode-list$/
hypb:mail-address-regexp	hypb.el	/^(defconst hypb:mail-address-regexp$/
hypb:mail-address-tld-regexp	hypb.el	/^(defconst hypb:mail-address-tld-regexp$/
hypb:map-plist	hypb.el	/^(defun hypb:map-plist (func plist)$/
hypb:map-vector	hypb.el	/^(defun hypb:map-vector (func object)$/
hypb:mark-object	hypb.el	/^(defun hypb:mark-object (object)$/
hypb:maximize-window-height	hypb.el	/^(defun hypb:maximize-window-height (&optional wind/
hypb:object-p	hypb.el	/^(defun hypb:object-p (object)$/
hypb:oct-to-int	hypb.el	/^(defun hypb:oct-to-int (oct-num)$/
hypb:readable-directories	hypb.el	/^(defun hypb:readable-directories (&rest dirs)$/
hypb:remove-lines	hypb.el	/^(defun hypb:remove-lines (regexp)$/
hypb:require-package	hypb.el	/^(defun hypb:require-package (package-name)$/
hypb:return-process-output	hypb.el	/^(defun hypb:return-process-output (program &option/
hypb:rgrep	hypb.el	/^(defun hypb:rgrep (pattern &optional prefx-arg)$/
hypb:rgrep-command	hypb.el	/^(defcustom hypb:rgrep-command$/
hypb:save-lines	hypb.el	/^(defun hypb:save-lines (regexp)$/
hypb:save-selected-window-and-input-focus	hypb.el	/^(defmacro hypb:save-selected-window-and-input-focu/
hypb:select-window-frame	hypb.el	/^(defun hypb:select-window-frame (window)$/
hypb:set-raw-syntax-descriptor	hypb.el	/^(defun hypb:set-raw-syntax-descriptor (char raw-de/
hypb:straight-package-plist	hypb.el	/^(defun hypb:straight-package-plist (pkg-string)$/
hypb:string-count-matches	hypb.el	/^(defun hypb:string-count-matches (regexp str &opti/
hypb:supercite-p	hypb.el	/^(defun hypb:supercite-p ()$/
hypb:toggle-isearch-invisible	hypb.el	/^(defun hypb:toggle-isearch-invisible (&optional ar/
hypb:user-name	hypb.el	/^(defun hypb:user-name ()$/
hypb:uuid	hypb.el	/^(defun hypb:uuid ()$/
hypb:web-repo-location	hypb-maintenance.el	/^(defvar hypb:web-repo-location "..\/hyweb\/hyperbole/
hypb:web-repo-update	hypb-maintenance.el	/^(defun hypb:web-repo-update ()$/
hypb:window-list	hypb.el	/^(defun hypb:window-list (&optional minibuffer-flag/
hyperb:autoloads-exist-p	hload-path.el	/^(defun hyperb:autoloads-exist-p ()$/
hyperb:automount-prefixes	hversion.el	/^(defvar hyperb:automount-prefixes$/
hyperb:check-dir-user	hinit.el	/^(defun hyperb:check-dir-user ()$/
hyperb:cygdrive	hyperbole.el	/^(defconst hyperb:cygdrive '("\\\\`\/cygdrive\/" . "\/")/
hyperb:dir	hload-path.el	/^(defvar hyperb:dir (or (file-name-directory$/
hyperb:generate-autoloads	hload-path.el	/^(defun hyperb:generate-autoloads ()$/
hyperb:init	hyperbole.el	/^(defun hyperb:init ()$/
hyperb:init-menubar	hinit.el	/^(defun hyperb:init-menubar ()$/
hyperb:maybe-generate-autoloads	hload-path.el	/^(defun hyperb:maybe-generate-autoloads ()$/
hyperb:maybe-load-autoloads	hload-path.el	/^(defun hyperb:maybe-load-autoloads ()$/
hyperb:microsoft-os-p	hload-path.el	/^(defvar hyperb:microsoft-os-p$/
hyperb:mouse-buttons	hversion.el	/^(defvar hyperb:mouse-buttons$/
hyperb:stack-frame	hversion.el	/^(defun hyperb:stack-frame (function-list &optional/
hyperb:substitute-in-file-name	hpath.el	/^(defalias 'hyperb:substitute-in-file-name$/
hyperb:user-email	hinit.el	/^(defvar   hyperb:user-email nil$/
hyperb:version	hversion.el	/^(defconst hyperb:version "8.0.1pre" "GNU Hyperbole/
hyperb:window-sys-term	hversion.el	/^(defun hyperb:window-sys-term (&optional frame)$/
hyperb:window-system	hversion.el	/^(defun hyperb:window-system (&optional frame)$/
hyperb:with-suppressed-warnings	hload-path.el	/^(defmacro hyperb:with-suppressed-warnings (warning/
hyperb:wsl-os-p	hload-path.el	/^(defvar hyperb:wsl-os-p$/
hyperbole	hui-mini.el	/^(defun hyperbole (&optional menu menu-list doc-fla/
hyperbole	hyperbole.el	/^(defgroup hyperbole nil$/
hyperbole--disable-mode	hyperbole.el	/^(defun hyperbole--disable-mode ()$/
hyperbole--enable-mode	hyperbole.el	/^(defun hyperbole--enable-mode ()$/
hyperbole--mark-even-if-inactive	hyperbole.el	/^(defvar hyperbole--mark-even-if-inactive$/
hyperbole-autoloads.el	Makefile	/^hyperbole-autoloads.el: $(EL_COMPILE)$/
hyperbole-banner	hypb.el	/^(define-button-type 'hyperbole-banner)$/
hyperbole-buttons	hib-social.el	/^(defgroup hyperbole-buttons nil$/
hyperbole-commands	hyperbole.el	/^(defgroup hyperbole-commands nil$/
hyperbole-default-web-search-term	hsettings.el	/^(defun hyperbole-default-web-search-term ()$/
hyperbole-default-web-search-term-max-lines	hsettings.el	/^(defcustom hyperbole-default-web-search-term-max-l/
hyperbole-demo	hui-mini.el	/^(defun hyperbole-demo (&optional arg)$/
hyperbole-hyrolo	hyrolo.el	/^(defgroup hyperbole-hyrolo nil$/
hyperbole-keys	hyperbole.el	/^(defgroup hyperbole-keys nil$/
hyperbole-koutliner	hyperbole.el	/^(defgroup hyperbole-koutliner nil$/
hyperbole-loading	hyperbole.el	/^(defconst hyperbole-loading t$/
hyperbole-menubar-menu	hui-menu.el	/^(defun hyperbole-menubar-menu ()$/
hyperbole-minibuffer-menu	hui-mini.el	/^(defun hyperbole-minibuffer-menu ()$/
hyperbole-mode	hyperbole-autoloads.el	/^(defvar hyperbole-mode nil "\\$/
hyperbole-mode	hyperbole.el	/^(define-minor-mode hyperbole-mode$/
hyperbole-mode-lighter	hyperbole.el	/^(defcustom hyperbole-mode-lighter " Hypb"$/
hyperbole-mode-map	hyperbole.el	/^(defvar hyperbole-mode-map (make-sparse-keymap)$/
hyperbole-popup-menu	hui-menu.el	/^(defun hyperbole-popup-menu (&optional rebuild-fla/
hyperbole-read-web-search-arguments	hsettings.el	/^(defun hyperbole-read-web-search-arguments (&optio/
hyperbole-run-test	hypb-ert.el	/^(defal hyperbole-run-test  "hypb-ert-run-test")$/
hyperbole-run-test-definition	hypb-ert.el	/^(defib hyperbole-run-test-definition ()$/
hyperbole-run-test-definition:help	hypb-ert.el	/^(defun hyperbole-run-test-definition:help (_hbut)$/
hyperbole-run-tests	hypb-ert.el	/^(defal hyperbole-run-tests "hypb-ert-run-tests")$/
hyperbole-screen	hyperbole.el	/^(defgroup hyperbole-screen nil$/
hyperbole-set-key	hui-mini.el	/^(defun hyperbole-set-key (keymap key binding)$/
hyperbole-toggle-messaging	hsettings.el	/^(defun hyperbole-toggle-messaging (&optional arg)$/
hyperbole-update-menus	hsettings.el	/^(defun hyperbole-update-menus ()$/
hyperbole-web-search	hsettings.el	/^(defun hyperbole-web-search (&optional service-nam/
hyperbole-web-search-alist	hsettings.el	/^(defcustom hyperbole-web-search-alist$/
hyperbole-web-search-browser-function	hsettings.el	/^(defcustom hyperbole-web-search-browser-function b/
hyrolo--expanded-file-list	hyrolo.el	/^(defvar hyrolo--expanded-file-list nil$/
hyrolo--wconfig	hyrolo.el	/^(defvar hyrolo--wconfig nil$/
hyrolo-add	hyrolo.el	/^(defun hyrolo-add (name &optional file)$/
hyrolo-add-hook	hyrolo.el	/^(defvar hyrolo-add-hook nil$/
hyrolo-add-match	hyrolo.el	/^(defun hyrolo-add-match (hyrolo-matches-buffer reg/
hyrolo-and	hyrolo-logic.el	/^(defun hyrolo-and (start end &rest pat-list)$/
hyrolo-back-to-visible-point	hyrolo.el	/^(defun hyrolo-back-to-visible-point ()$/
hyrolo-backward-same-level	hyrolo.el	/^(defun hyrolo-backward-same-level (arg)$/
hyrolo-bbdb-entry-format	hyrolo.el	/^(defun hyrolo-bbdb-entry-format (entry)$/
hyrolo-bbdb-fgrep	hyrolo.el	/^(defun hyrolo-bbdb-fgrep (&optional arg)$/
hyrolo-bbdb-grep	hyrolo.el	/^(defun hyrolo-bbdb-grep (&optional arg)$/
hyrolo-bbdb-grep-file	hyrolo.el	/^(defun hyrolo-bbdb-grep-file (hyrolo-file-or-buf r/
hyrolo-buffer-exists-p	hyrolo.el	/^(defun hyrolo-buffer-exists-p (hyrolo-buf)$/
hyrolo-consult-grep	hyrolo.el	/^(defun hyrolo-consult-grep (&optional regexp max-m/
hyrolo-current-date	hyrolo.el	/^(defun hyrolo-current-date ()$/
hyrolo-date-format	hyrolo.el	/^(defcustom hyrolo-date-format "%m\/%d\/%Y"$/
hyrolo-demo-fgrep	hyrolo-demo.el	/^(defun hyrolo-demo-fgrep (string &optional max-mat/
hyrolo-demo-fgrep-logical	hyrolo-demo.el	/^(defun hyrolo-demo-fgrep-logical (expr &optional c/
hyrolo-demo-quit	hyrolo-demo.el	/^(defun hyrolo-demo-quit ()$/
hyrolo-demo-save-key	hyrolo-demo.el	/^(defvar hyrolo-demo-save-key nil)$/
hyrolo-display-buffer	hyrolo.el	/^(defvar hyrolo-display-buffer "*HyRolo*"$/
hyrolo-display-format-function	hyrolo.el	/^(defvar hyrolo-display-format-function$/
hyrolo-display-matches	hyrolo.el	/^(defun hyrolo-display-matches (&optional display-b/
hyrolo-display-to-entry-end	hyrolo.el	/^(defun hyrolo-display-to-entry-end ()$/
hyrolo-edit	hyrolo.el	/^(defun hyrolo-edit (&optional name file-or-buf)$/
hyrolo-edit-entry	hyrolo.el	/^(defun hyrolo-edit-entry ()$/
hyrolo-edit-hook	hyrolo.el	/^(defvar hyrolo-edit-hook nil$/
hyrolo-email-format	hyrolo.el	/^(defcustom hyrolo-email-format "%s\\t\\t<%s>"$/
hyrolo-entry-group-number	hyrolo.el	/^(defvar hyrolo-entry-group-number 1$/
hyrolo-entry-name-regexp	hyrolo.el	/^(defvar hyrolo-entry-name-regexp "[-_a-zA-Z0-9@.]+/
hyrolo-entry-regexp	hyrolo.el	/^(defvar hyrolo-entry-regexp "^\\\\(\\\\*+\\\\)\\\\([ \\t]+\\/
hyrolo-entry-trailing-space-group-number	hyrolo.el	/^(defvar hyrolo-entry-trailing-space-group-number 2/
hyrolo-expand-path-list	hyrolo.el	/^(defun hyrolo-expand-path-list (paths)$/
hyrolo-fgrep	hyrolo.el	/^(defun hyrolo-fgrep (string &optional max-matches /
hyrolo-fgrep-directories	hyrolo.el	/^(defun hyrolo-fgrep-directories (file-regexp &rest/
hyrolo-fgrep-file	hyrolo.el	/^(defun hyrolo-fgrep-file (hyrolo-file-or-buf strin/
hyrolo-fgrep-logical	hyrolo-logic.el	/^(defun hyrolo-fgrep-logical (expr &optional count-/
hyrolo-file-list	hyrolo.el	/^(defcustom hyrolo-file-list nil$/
hyrolo-file-list-changed	hyrolo.el	/^(defun hyrolo-file-list-changed (symbol set-to-val/
hyrolo-file-suffix-regexp	hyrolo.el	/^(defcustom hyrolo-file-suffix-regexp "\\\\.\\\\(kotl\\\\/
hyrolo-find-file	hyrolo.el	/^(defun hyrolo-find-file (&optional file find-funct/
hyrolo-find-file-function	hyrolo.el	/^(defcustom hyrolo-find-file-function #'find-file$/
hyrolo-find-file-noselect	hyrolo.el	/^(defun hyrolo-find-file-noselect (&optional file)$/
hyrolo-find-file-noselect-function	hyrolo.el	/^(defcustom hyrolo-find-file-noselect-function #'fi/
hyrolo-format-name	hyrolo.el	/^(defun hyrolo-format-name (name-str first last)$/
hyrolo-forward-same-level	hyrolo.el	/^(defun hyrolo-forward-same-level (arg)$/
hyrolo-forward-visible-line	hyrolo.el	/^(defun hyrolo-forward-visible-line (&optional arg)/
hyrolo-get-consult-version	hyrolo.el	/^(defun hyrolo-get-consult-version ()$/
hyrolo-get-file-list	hyrolo.el	/^(defun hyrolo-get-file-list ()$/
hyrolo-google-contacts-fgrep	hyrolo.el	/^(defun hyrolo-google-contacts-fgrep (&optional arg/
hyrolo-google-contacts-flag	hyrolo.el	/^(defcustom hyrolo-google-contacts-flag t$/
hyrolo-google-contacts-grep	hyrolo.el	/^(defun hyrolo-google-contacts-grep (&optional arg)/
hyrolo-google-contacts-grep-file	hyrolo.el	/^(defun hyrolo-google-contacts-grep-file (hyrolo-fi/
hyrolo-google-contacts-insert-data	hyrolo.el	/^(defun hyrolo-google-contacts-insert-data (contact/
hyrolo-google-contacts-insert-generic-list	hyrolo.el	/^(defun hyrolo-google-contacts-insert-generic-list /
hyrolo-google-contacts-p	hyrolo.el	/^(defun hyrolo-google-contacts-p ()$/
hyrolo-grep	hyrolo.el	/^(defun hyrolo-grep (regexp &optional max-matches h/
hyrolo-grep-directories	hyrolo.el	/^(defun hyrolo-grep-directories (file-regexp &rest /
hyrolo-grep-file	hyrolo.el	/^(defun hyrolo-grep-file (hyrolo-file-or-buf patter/
hyrolo-grep-or-fgrep	hyrolo.el	/^(defun hyrolo-grep-or-fgrep (&optional arg)$/
hyrolo-hdr-format	hyrolo.el	/^(defconst hyrolo-hdr-format$/
hyrolo-hdr-regexp	hyrolo.el	/^(defconst hyrolo-hdr-regexp "^==="$/
hyrolo-helm-org-rifle	hyrolo.el	/^(defun hyrolo-helm-org-rifle (&optional context-on/
hyrolo-helm-org-rifle-directories	hyrolo.el	/^(defun hyrolo-helm-org-rifle-directories (&optiona/
hyrolo-helm-org-rifle-directory	hyrolo.el	/^(defun hyrolo-helm-org-rifle-directory (&optional /
hyrolo-hide-subtree	hyrolo.el	/^(defun hyrolo-hide-subtree ()$/
hyrolo-highlight-face	hyrolo.el	/^(defcustom hyrolo-highlight-face 'match$/
hyrolo-highlight-matches	hyrolo.el	/^(defun hyrolo-highlight-matches (regexp start _end/
hyrolo-isearch	hyrolo.el	/^(defun hyrolo-isearch (&optional arg)$/
hyrolo-isearch-for-regexp	hyrolo.el	/^(defun hyrolo-isearch-for-regexp (regexp fold-sear/
hyrolo-isearch-regexp	hyrolo.el	/^(defun hyrolo-isearch-regexp (&optional arg)$/
hyrolo-kill	hyrolo.el	/^(defun hyrolo-kill (name &optional file)$/
hyrolo-kill-buffer	hyrolo.el	/^(defun hyrolo-kill-buffer (&optional hyrolo-buf)$/
hyrolo-kill-buffers-after-use	hyrolo.el	/^(defcustom hyrolo-kill-buffers-after-use nil$/
hyrolo-let-file-list	hyrolo.el	/^(defun hyrolo-let-file-list (symbol value)$/
hyrolo-locate	hyrolo.el	/^(defun hyrolo-locate ()$/
hyrolo-logic	hyrolo-logic.el	/^(defun hyrolo-logic (sexp &optional in-bufs count-/
hyrolo-mail-to	hyrolo.el	/^(defun hyrolo-mail-to ()$/
hyrolo-map-entries	hyrolo-logic.el	/^(defun hyrolo-map-entries (sexp hyrolo-buf display/
hyrolo-map-kotl	hyrolo-logic.el	/^(defun hyrolo-map-kotl (sexp hyrolo-buf display-bu/
hyrolo-map-level	hyrolo.el	/^(defun hyrolo-map-level (func level-regexp &option/
hyrolo-map-logic	hyrolo-logic.el	/^(defun hyrolo-map-logic (sexp hyrolo-buf &optional/
hyrolo-map-single-subtree	hyrolo.el	/^(defun hyrolo-map-single-subtree (func exact-level/
hyrolo-match-regexp	hyrolo.el	/^(defconst hyrolo-match-regexp nil$/
hyrolo-menu-common-body	hyrolo-menu.el	/^(defconst hyrolo-menu-common-body$/
hyrolo-menubar-menu	hyrolo-menu.el	/^(defun hyrolo-menubar-menu ()$/
hyrolo-min-matched-level	hyrolo.el	/^(defun hyrolo-min-matched-level ()$/
hyrolo-mode	hyrolo.el	/^(defun hyrolo-mode ()$/
hyrolo-mode-map	hyrolo.el	/^(defvar hyrolo-mode-map nil$/
hyrolo-mode-outline-level	hyrolo.el	/^(defun hyrolo-mode-outline-level ()$/
hyrolo-mode-syntax-table	hyrolo.el	/^(defvar hyrolo-mode-syntax-table nil$/
hyrolo-move-backward	hyrolo.el	/^(defun hyrolo-move-backward (func &rest args)$/
hyrolo-move-forward	hyrolo.el	/^(defun hyrolo-move-forward (func &rest args)$/
hyrolo-name-and-email	hyrolo.el	/^(defun hyrolo-name-and-email ()$/
hyrolo-name-at-p	hyrolo.el	/^(defun hyrolo-name-at-p ()$/
hyrolo-next-match	hyrolo.el	/^(defun hyrolo-next-match ()$/
hyrolo-next-match-function	hyrolo.el	/^(defvar hyrolo-next-match-function #'hyrolo-next-r/
hyrolo-next-regexp-match	hyrolo.el	/^(defun hyrolo-next-regexp-match (regexp headline-o/
hyrolo-next-visible-heading	hyrolo.el	/^(defun hyrolo-next-visible-heading (arg)$/
hyrolo-not	hyrolo-logic.el	/^(defun hyrolo-not (start end &rest pat-list)$/
hyrolo-or	hyrolo-logic.el	/^(defun hyrolo-or (start end &rest pat-list)$/
hyrolo-org	hyrolo.el	/^(defun hyrolo-org (string &optional max-matches)$/
hyrolo-org-roam	hyrolo.el	/^(defun hyrolo-org-roam (string &optional max-match/
hyrolo-outline-level	hyrolo.el	/^(defun hyrolo-outline-level ()$/
hyrolo-overview	hyrolo.el	/^(defun hyrolo-overview (levels-to-show)$/
hyrolo-popup-menu	hyrolo-menu.el	/^(defun hyrolo-popup-menu (event)$/
hyrolo-previous-match	hyrolo.el	/^(defun hyrolo-previous-match ()$/
hyrolo-previous-visible-heading	hyrolo.el	/^(defun hyrolo-previous-visible-heading (arg)$/
hyrolo-prompt	hyrolo.el	/^(defun hyrolo-prompt (keyboard-function prompt)$/
hyrolo-quit	hyrolo.el	/^(defun hyrolo-quit ()$/
hyrolo-r-and	hyrolo-logic.el	/^(defun hyrolo-r-and (start end &rest pat-list)$/
hyrolo-r-not	hyrolo-logic.el	/^(defun hyrolo-r-not (start end &rest pat-list)$/
hyrolo-r-or	hyrolo-logic.el	/^(defun hyrolo-r-or (start end &rest pat-list)$/
hyrolo-r-xor	hyrolo-logic.el	/^(defun hyrolo-r-xor (start end &rest pat-list)$/
hyrolo-rename	hyrolo.el	/^(defun hyrolo-rename (old-file new-file)$/
hyrolo-retrieve-google-contacts	hyrolo.el	/^(defun hyrolo-retrieve-google-contacts (&optional /
hyrolo-save-buffer	hyrolo.el	/^(defun hyrolo-save-buffer (&optional hyrolo-buf)$/
hyrolo-save-buffers-after-use	hyrolo.el	/^(defcustom hyrolo-save-buffers-after-use t$/
hyrolo-search-directories	hyrolo.el	/^(defun hyrolo-search-directories (search-cmd file-/
hyrolo-set-date	hyrolo.el	/^(defun hyrolo-set-date ()$/
hyrolo-set-display-buffer	hyrolo.el	/^(defun hyrolo-set-display-buffer ()$/
hyrolo-set-file-list	hyrolo.el	/^(defun hyrolo-set-file-list (symbol value)$/
hyrolo-show-levels	hyrolo.el	/^(defun hyrolo-show-levels (num-levels)$/
hyrolo-shrink-window	hyrolo.el	/^(defun hyrolo-shrink-window ()$/
hyrolo-sort	hyrolo.el	/^(defun hyrolo-sort (&optional hyrolo-file)$/
hyrolo-sort-level	hyrolo.el	/^(defun hyrolo-sort-level (level-regexp &optional m/
hyrolo-sort-lines	hyrolo.el	/^(defun hyrolo-sort-lines (reverse beg end)$/
hyrolo-to	hyrolo.el	/^(defun hyrolo-to (name &optional file-or-buf-list)/
hyrolo-to-buffer	hyrolo.el	/^(defun hyrolo-to-buffer (buffer &optional other-wi/
hyrolo-to-entry-beginning	hyrolo.el	/^(defun hyrolo-to-entry-beginning (&optional includ/
hyrolo-to-entry-end	hyrolo.el	/^(defun hyrolo-to-entry-end (&optional include-sub-/
hyrolo-toggle-datestamps	hyrolo.el	/^(defun hyrolo-toggle-datestamps (&optional arg)$/
hyrolo-toggle-narrow-to-entry	hyrolo.el	/^(defun hyrolo-toggle-narrow-to-entry ()$/
hyrolo-top-level	hyrolo.el	/^(defun hyrolo-top-level ()$/
hyrolo-up-heading	hyrolo.el	/^(defun hyrolo-up-heading (arg &optional invisible-/
hyrolo-verify	hyrolo.el	/^(defun hyrolo-verify ()$/
hyrolo-widen	hyrolo.el	/^(defun hyrolo-widen ()$/
hyrolo-word	hyrolo.el	/^(defun hyrolo-word (string &optional max-matches h/
hyrolo-xor	hyrolo-logic.el	/^(defun hyrolo-xor (start end &rest pat-list)$/
hyrolo-yank	hyrolo.el	/^(defun hyrolo-yank (name &optional regexp-p)$/
hyrolo-yank-reformat-function	hyrolo.el	/^(defvar hyrolo-yank-reformat-function #'ignore$/
hywconfig-add-by-name	hywconfig.el	/^(defun hywconfig-add-by-name (name)$/
hywconfig-delete-by-name	hywconfig.el	/^(defun hywconfig-delete-by-name (name)$/
hywconfig-delete-pop	hywconfig.el	/^(defun hywconfig-delete-pop ()$/
hywconfig-delete-pop-continue	hywconfig.el	/^(defun hywconfig-delete-pop-continue ()$/
hywconfig-get-names	hywconfig.el	/^(defun hywconfig-get-names ()$/
hywconfig-get-ring	hywconfig.el	/^(defun hywconfig-get-ring ()$/
hywconfig-restore-by-name	hywconfig.el	/^(defun hywconfig-restore-by-name (name)$/
hywconfig-ring-empty-p	hywconfig.el	/^(defun hywconfig-ring-empty-p ()$/
hywconfig-ring-max	hywconfig.el	/^(defcustom hywconfig-ring-max 10$/
hywconfig-ring-save	hywconfig.el	/^(defun hywconfig-ring-save ()$/
hywconfig-set-names	hywconfig.el	/^(defun hywconfig-set-names (names)$/
hywconfig-set-window-configuration	hywconfig.el	/^(defun hywconfig-set-window-configuration (wconfig/
hywconfig-yank-pop	hywconfig.el	/^(defun hywconfig-yank-pop (n)$/
hywconfig-yank-pop-continue	hywconfig.el	/^(defun hywconfig-yank-pop-continue (n)$/
hywin	hywin.lisp	/^(defgroup hywin nil$/
hywin--bookmark-record-url	hywin.lisp	/^(defun hywin--bookmark-record-url (record)$/
hywin--bookmark-url-buffer	hywin.lisp	/^(defun hywin--bookmark-url-buffer (urlobj)$/
hywin--bookmark-window-state-hack	hywin.lisp	/^(defun hywin--bookmark-window-state-hack (&optiona/
hywin--bufferize-window-state	hywin.lisp	/^(defun hywin--bufferize-window-state (state)$/
hywin--file-url-buffer	hywin.lisp	/^(defun hywin--file-url-buffer (urlobj)$/
hywin--frameset-restore	hywin.lisp	/^(defun hywin--frameset-restore (urlobj)$/
hywin--org-mode-buffer-url	hywin.lisp	/^(defun hywin--org-mode-buffer-url (buffer)$/
hywin--window-state	hywin.lisp	/^(defvar hywin--window-state nil$/
hywin--window-state	hywin.lisp	/^(cl-defun hywin--window-state (&optional (frame (s/
hywin--windows-set	hywin.lisp	/^(defun hywin--windows-set (urlobj)$/
hywin--windows-set-url	hywin.lisp	/^(defun hywin--windows-set-url (windows &optional n/
hywin-bookmark-frames	hywin.lisp	/^(defun hywin-bookmark-frames (name)$/
hywin-bookmark-handler	hywin.lisp	/^(defun hywin-bookmark-handler (bookmark)$/
hywin-bookmark-prefix	hywin.lisp	/^(defcustom hywin-bookmark-prefix "Hywin: "$/
hywin-bookmark-windows	hywin.lisp	/^(defun hywin-bookmark-windows (name)$/
hywin-buffer-url	hywin.lisp	/^(defun hywin-buffer-url (buffer)$/
hywin-follow-url-org-mode	hywin.lisp	/^(cl-defun hywin-follow-url-org-mode (&key buffer q/
hywin-frames-url	hywin.lisp	/^(cl-defun hywin-frames-url (&optional (frames (fra/
hywin-frameset-filter-alist	hywin.lisp	/^(defcustom hywin-frameset-filter-alist '((name . n/
hywin-kill-buffer-url	hywin.lisp	/^(defun hywin-kill-buffer-url (buffer)$/
hywin-kill-frames-url	hywin.lisp	/^(defun hywin-kill-frames-url ()$/
hywin-kill-windows-url	hywin.lisp	/^(defun hywin-kill-windows-url ()$/
hywin-major-mode-alist	hywin.lisp	/^(defcustom hywin-major-mode-alist$/
hywin-open-bookmark	hywin.lisp	/^(defun hywin-open-bookmark (bookmark)$/
hywin-open-url	hywin.lisp	/^(defun hywin-open-url (url)$/
hywin-url-buffer	hywin.lisp	/^(defun hywin-url-buffer (url)$/
hywin-window-persistent-parameters	hywin.lisp	/^(defcustom hywin-window-persistent-parameters$/
hywin-windows-url	hywin.lisp	/^(cl-defun hywin-windows-url (&optional (frame (sel/
hv	hyperbole-banner.png	5
ibtype:activate-link	hbut.el	/^(defun    ibtype:activate-link (referent)$/
ibtype:create	hbut.el	/^(defalias 'ibtype:create #'defib)$/
ibtype:create-action-link-type	hbut.el	/^(defalias 'ibtype:create-action-link-type #'defal)/
ibtype:create-regexp-link-type	hbut.el	/^(defalias 'ibtype:create-regexp-link-type #'defil)/
ibtype:def-symbol	hbut.el	/^(defun    ibtype:def-symbol (ibtype)$/
ibtype:delete	hbut.el	/^(defun    ibtype:delete (type)$/
ibut	OLD-IBUT-AT-P.el~	26
ibut-face	hui-em-but.el	/^(defface ibut-face$/
ibut:act	hbut.el	/^(defun    ibut:act (label)$/
ibut:alist	hbut.el	/^(defun    ibut:alist (&optional file)$/
ibut:at-p	hbut.el	/^(defun    ibut:at-p (&optional name-key-only)$/
ibut:at-to-name-p	hbut.el	/^(defun    ibut:at-to-name-p (&optional ibut)$/
ibut:at-type-p	hbut.el	/^(defun    ibut:at-type-p (ibut-type-symbol)$/
ibut:create	hbut.el	/^(cl-defun ibut:create (&optional &key but-sym name/
ibut:delete	hbut.el	/^(defun    ibut:delete (&optional but-sym)$/
ibut:delete-occurrence	hbut.el	/^(defun    ibut:delete-occurrence (start end)$/
ibut:delimit	hbut.el	/^(defun    ibut:delimit (start end instance-flag)$/
ibut:get	hbut.el	/^(defun    ibut:get (&optional lbl-key buffer key-s/
ibut:insert-text	hbut.el	/^(defun    ibut:insert-text (ibut)$/
ibut:is-p	hbut.el	/^(defun    ibut:is-p (object)$/
ibut:key	hbut.el	/^(defun    ibut:key (ibut)$/
ibut:key-to-label	hbut.el	/^(defalias 'ibut:key-to-label #'hbut:key-to-label)$/
ibut:label-end	hbut.el	/^(defconst ibut:label-end   "]>"$/
ibut:label-instances-regexp	hbut.el	/^(defun    ibut:label-instances-regexp (lbl-key &op/
ibut:label-key-match	hbut.el	/^(defun    ibut:label-key-match (name-key)$/
ibut:label-map	hbut.el	/^(defun    ibut:label-map (but-func &optional regex/
ibut:label-p	hbut.el	/^(defun    ibut:label-p (&optional as-label start-d/
ibut:label-regexp	hbut.el	/^(defun    ibut:label-regexp (lbl-key &optional no-/
ibut:label-separator	hbut.el	/^(defvar   ibut:label-separator " - "$/
ibut:label-separator-regexp	hbut.el	/^(defvar   ibut:label-separator-regexp "\\\\s-*[-:=|]/
ibut:label-set	hbut.el	/^(defun    ibut:label-set (label &optional start en/
ibut:label-sort-keys	hbut.el	/^(defun    ibut:label-sort-keys (lbl-keys)$/
ibut:label-start	hbut.el	/^(defconst ibut:label-start "<["$/
ibut:label-to-key	hbut.el	/^(defalias 'ibut:label-to-key #'hbut:label-to-key)$/
ibut:list	hbut.el	/^(defun    ibut:list (&optional file loc-p)$/
ibut:map	hbut.el	/^(defun    ibut:map (but-func &optional regexp-matc/
ibut:next-occurrence	hbut.el	/^(defun    ibut:next-occurrence (lbl-key &optional /
ibut:operate	hbut.el	/^(defun    ibut:operate (&optional new-name edit-fl/
ibut:operate	HY-TRY.el	/^(defun    ibut:operate (&optional new-name edit-fl/
ibut:previous-occurrence	hbut.el	/^(defun    ibut:previous-occurrence (lbl-key &optio/
ibut:program	hbut.el	/^(defun    ibut:program (name actype &rest args)$/
ibut:rename	hbut.el	/^(defun    ibut:rename (old-lbl new-lbl)$/
ibut:set-name-and-label-key-p	hbut.el	/^(defun    ibut:set-name-and-label-key-p (&optional/
ibut:summarize	hbut.el	/^(defalias 'ibut:summarize #'hbut:report)$/
ibut:to	hbut.el	/^(defun    ibut:to (name-key)$/
ibut:to-key-src	hbut.el	/^(defalias 'ibut:to-key-src   #'hbut:to-key-src)$/
ibut:to-name	hbut.el	/^(defun    ibut:to-name (lbl-key)$/
ibut:to-text	hbut.el	/^(defun    ibut:to-text (name-key)$/
id	README.md.html~	2
id	README.md.html~	183
id	README.md.html~	225
id	README.md.html~	337
id	README.md.html~	368
id-browse-file	hversion.el	/^(defalias 'id-browse-file 'view-file))$/
id-cflow	hibtypes.el	/^(defib id-cflow ()$/
id-info	hversion.el	/^(defun id-info (string)$/
id-info-item	hversion.el	/^(defun id-info-item (index-item)$/
id-popup-hyrolo-menu	hyrolo-menu.el	/^(defconst id-popup-hyrolo-menu$/
id-tool-invoke	hversion.el	/^(defun id-tool-invoke (sexp)$/
id-tool-quit	hversion.el	/^(defalias 'id-tool-quit #'eval))$/
id_dir	Makefile	/^id_dir = $(HOME)\/sw-dev\/emacs$/
ilink	hibtypes.el	/^(defib ilink ()$/
ilink:end	hibtypes.el	/^(defconst ilink:end   ">"$/
ilink:start	hibtypes.el	/^(defconst ilink:start "<ilink:"$/
implement	TODO-hy-5.0.5-changes-to-look-at	2
in	DEMO	/^function in your Emacs initialization file and the/
in	EXAMPLE.kotl	200
in	EXAMPLE.kotl	289
in	HY-ANNOUNCE-6.0.2	/^      entry in debbugs-gnu-mode, an Action Key pre/
in	HY-NEWS	/^      entry in debbugs-gnu-mode, an Action Key pre/
in	hynote.el~	/^entry in `hynote-file-list' in an editable mode.  /
in	hynote-unused	/^entry in `hynote-file-list' in an editable mode.  /
in	hyperbole-autoloads.el~	/^entry in `hynote-file-list' in an editable mode.  /
in	hyperbole-autoloads.el~	/^entry in `hyrolo-file-list' in an editable mode.  /
in	TODO-ANNOUNCE-5.15	/^      entry in debbugs-gnu-mode, an Action Key pre/
in	TODO-HY-ANNOUNCE-6.0.1	/^      entry in debbugs-gnu-mode, an Action Key pre/
include	HYROLO-FILE-LIST.txt	4
indent	EXAMPLE.kotl	410
indent	HY-CONCEPTS.kotl	169
indent	HYROLO-EXAMPLES.kotl	24
indent	HY-USES.kotl	127
indent	PROS-CONS.kotl	35
indent	PROS-CONS.kotl~	12
info	Makefile	/^info: $(man_dir)\/hyperbole.info$/
info	Makefile.html	/^info: $(man_dir)\/hyperbole.info$/
info_dir	Makefile	/^info_dir = $(id_dir)\/id-info$/
infodock-hyperbole-menu	hui-menu.el	/^(defvar infodock-hyperbole-menu nil)$/
infodock-hyperbole-menu	hui-menu.el	/^(defun infodock-hyperbole-menu (&optional rebuild-/
infodock-hyrolo-menu	hyrolo-menu.el	/^(defconst infodock-hyrolo-menu$/
inhibit-hyperbole-messaging	hsettings.el	/^(defcustom inhibit-hyperbole-messaging t$/
initialize	hui-mini-ext.el~	5
initialize	TODO-ERRORS	424
install	Makefile	/^install: elc install-info install-html $(data_dir)/
install	Makefile.html	/^install: elc install-info install-html $(data_dir)/
install-all	Makefile	/^install-all: install-elpa install-elpa-devel insta/
install-elpa install-elpa-devel install-tarball install-straight install-elpaca	Makefile	/^install-elpa install-elpa-devel install-tarball in/
install-html	Makefile	/^install-html: $(html_dir)\/hyperbole.html$/
install-html	Makefile.html	/^install-html: $(html_dir)\/hyperbole.html$/
install-info	Makefile	/^install-info: $(info_dir)\/hyperbole.info$/
install-info	Makefile.html	/^install-info: $(info_dir)\/hyperbole.info$/
install-local	Makefile	/^install-local:$/
installed	FAST-DEMO	89
installed	HYPB-Tutorial-Greenburg.txt	29
installed	HYPB-Tutorial-Greenburg.txt~	29
instance	HYP-MAN.txt	12
instructions	TODO-ERRORS	341
integrated	HY-ANNOUNCE-7.2.1	1
interactive	TODO-ERRORS	343
interface	HY-ABOUT	55
interface	HY-ABOUT	59
internally	HY-USES.kotl	7
into	hargs.el~	399
introductions	README.md	13
ipython-stack-frame	hibtypes.el	/^(defib ipython-stack-frame ()$/
is	hargs.el~	187
is	hargs.el~	271
is	hui.el~	76
is	hynote.el~	/^entry is displayed with all of its sub-entries.  O/
is	hynote-unused	/^entry is displayed with all of its sub-entries.  O/
is	hyperbole-autoloads.el~	/^entry is displayed with all of its sub-entries.  O/
is	hyperbole-autoloads.el~	/^entry is displayed with all of its sub-entries.  O/
is	hyperbole.info	/^     function is defined, jumps to the library sou/
it	COPYING	198
it	COPYING	370
it	hui.el~	153
it	README	51
it	README	53
it	README.html~	362
it	README.html~	364
it	README.md.html~	46
it	README.md.html~	48
item	TODO-ERRORS	399
item	TODO-ERRORS	446
its	HY-TRY.el~	173
itself	HY-ANNOUNCE-7.2.1	1
just	hargs.el~	646
k0	Makefile.html	/^Makefile<\/title>$/
k01	Makefile.html	/^1. <\/font><\/pre>$/
k010	Makefile.html	/^10. <\/font><\/pre>$/
k011	Makefile.html	/^11. <\/font><\/pre>$/
k012	Makefile.html	/^12. <\/font><\/pre>$/
k013	Makefile.html	/^13. <\/font><\/pre>$/
k014	Makefile.html	/^14. <\/font><\/pre>$/
k015	Makefile.html	/^15. <\/font><\/pre>$/
k016	Makefile.html	/^16. <\/font><\/pre>$/
k017	Makefile.html	/^17. <\/font><\/pre>$/
k018	Makefile.html	/^18. <\/font><\/pre>$/
k019	Makefile.html	/^19. <\/font><\/pre>$/
k02	Makefile.html	/^2. <\/font><\/pre>$/
k020	Makefile.html	/^20. <\/font><\/pre>$/
k021	Makefile.html	/^21. <\/font><\/pre>$/
k022	Makefile.html	/^22. <\/font><\/pre>$/
k023	Makefile.html	/^23. <\/font><\/pre>$/
k024	Makefile.html	/^24. <\/font><\/pre>$/
k025	Makefile.html	/^25. <\/font><\/pre>$/
k026	Makefile.html	/^26. <\/font><\/pre>$/
k027	Makefile.html	/^27. <\/font><\/pre>$/
k028	Makefile.html	/^28. <\/font><\/pre>$/
k029	Makefile.html	/^29. <\/font><\/pre>$/
k03	Makefile.html	/^3. <\/font><\/pre>$/
k030	Makefile.html	/^30. <\/font><\/pre>$/
k031	Makefile.html	/^31. <\/font><\/pre>$/
k032	Makefile.html	/^32. <\/font><\/pre>$/
k033	Makefile.html	/^33. <\/font><\/pre>$/
k034	Makefile.html	/^34. <\/font><\/pre>$/
k035	Makefile.html	/^35. <\/font><\/pre>$/
k036	Makefile.html	/^36. <\/font><\/pre>$/
k037	Makefile.html	/^37. <\/font><\/pre>$/
k038	Makefile.html	/^38. <\/font><\/pre>$/
k039	Makefile.html	/^39. <\/font><\/pre>$/
k04	Makefile.html	/^4. <\/font><\/pre>$/
k040	Makefile.html	/^40. <\/font><\/pre>$/
k041	Makefile.html	/^41. <\/font><\/pre>$/
k042	Makefile.html	/^42. <\/font><\/pre>$/
k043	Makefile.html	/^43. <\/font><\/pre>$/
k044	Makefile.html	/^44. <\/font><\/pre>$/
k045	Makefile.html	/^45. <\/font><\/pre>$/
k046	Makefile.html	/^46. <\/font><\/pre>$/
k047	Makefile.html	/^47. <\/font><\/pre>$/
k048	Makefile.html	/^48. <\/font><\/pre>$/
k049	Makefile.html	/^49. <\/font><\/pre>$/
k05	Makefile.html	/^5. <\/font><\/pre>$/
k050	Makefile.html	/^50. <\/font><\/pre>$/
k051	Makefile.html	/^51. <\/font><\/pre>$/
k052	Makefile.html	/^52. <\/font><\/pre>$/
k053	Makefile.html	/^53. <\/font><\/pre>$/
k054	Makefile.html	/^54. <\/font><\/pre>$/
k055	Makefile.html	/^55. <\/font><\/pre>$/
k056	Makefile.html	/^56. <\/font><\/pre>$/
k057	Makefile.html	/^57. <\/font><\/pre>$/
k058	Makefile.html	/^58. <\/font><\/pre>$/
k059	Makefile.html	/^59. <\/font><\/pre>$/
k06	Makefile.html	/^6. <\/font><\/pre>$/
k060	Makefile.html	/^60. <\/font><\/pre>$/
k061	Makefile.html	/^61. <\/font><\/pre>$/
k062	Makefile.html	/^62. <\/font><\/pre>$/
k063	Makefile.html	/^63. <\/font><\/pre>$/
k064	Makefile.html	/^64. <\/font><\/pre>$/
k065	Makefile.html	/^65. <\/font><\/pre>$/
k066	Makefile.html	/^66. <\/font><\/pre>$/
k067	Makefile.html	/^67. <\/font><\/pre>$/
k068	Makefile.html	/^68. <\/font><\/pre>$/
k069	Makefile.html	/^69. <\/font><\/pre>$/
k07	Makefile.html	/^7. <\/font><\/pre>$/
k070	Makefile.html	/^70. <\/font><\/pre>$/
k071	Makefile.html	/^71. <\/font><\/pre>$/
k072	Makefile.html	/^72. <\/font><\/pre>$/
k073	Makefile.html	/^73. <\/font><\/pre>$/
k074	Makefile.html	/^74. <\/font><\/pre>$/
k075	Makefile.html	/^75. <\/font><\/pre>$/
k076	Makefile.html	/^76. <\/font><\/pre>$/
k077	Makefile.html	/^77. <\/font><\/pre>$/
k078	Makefile.html	/^78. <\/font><\/pre>$/
k079	Makefile.html	/^79. <\/font><\/pre>$/
k08	Makefile.html	/^8. <\/font><\/pre>$/
k080	Makefile.html	/^80. <\/font><\/pre>$/
k09	Makefile.html	/^9. <\/font><\/pre>$/
kbd-key	hib-kbd.el	/^(defact kbd-key (key-series)$/
kbd-key	hib-kbd.el	/^(defib kbd-key ()$/
kbd-key:act	hib-kbd.el	/^(defun kbd-key:act (key-series)$/
kbd-key:binding	hib-kbd.el	/^(defun kbd-key:binding (key-series)$/
kbd-key:doc	hib-kbd.el	/^(defun kbd-key:doc (key-series &optional full)$/
kbd-key:execute	hib-kbd.el	/^(defun kbd-key:execute (key-series)$/
kbd-key:execute-special-series	hib-kbd.el	/^(defun kbd-key:execute-special-series (key-series)/
kbd-key:extended-command-binding-list	hib-kbd.el	/^(defconst kbd-key:extended-command-binding-list '(/
kbd-key:extended-command-p	hib-kbd.el	/^(defun kbd-key:extended-command-p (key-series)$/
kbd-key:extended-command-prefix	hib-kbd.el	/^(defconst kbd-key:extended-command-prefix "\\\\_<M-x/
kbd-key:help	hib-kbd.el	/^(defun kbd-key:help (but)$/
kbd-key:hyperbole-hycontrol-key-p	hib-kbd.el	/^(defun kbd-key:hyperbole-hycontrol-key-p (key-seri/
kbd-key:hyperbole-mini-menu-key-p	hib-kbd.el	/^(defun kbd-key:hyperbole-mini-menu-key-p (key-seri/
kbd-key:is-p	hib-kbd.el	/^(defun kbd-key:is-p (str)$/
kbd-key:kbd	hib-kbd.el	/^(defun kbd-key:kbd (key-series)$/
kbd-key:key-and-arguments	hib-kbd.el	/^(defun kbd-key:key-and-arguments (key-series)$/
kbd-key:key-series-to-events	hib-kbd.el	/^(defun kbd-key:key-series-to-events (key-series)$/
kbd-key:mark-spaces-to-keep	hib-kbd.el	/^(defun kbd-key:mark-spaces-to-keep (string start-d/
kbd-key:maybe-enable-helm	hib-kbd.el	/^(defun kbd-key:maybe-enable-helm (helm-flag orig-M/
kbd-key:mini-menu-key	hib-kbd.el	/^(defvar kbd-key:mini-menu-key nil$/
kbd-key:modified-key-regexp	hib-kbd.el	/^(defvar kbd-key:modified-key-regexp$/
kbd-key:named-key-list	hib-kbd.el	/^(defvar kbd-key:named-key-list$/
kbd-key:named-key-regexp	hib-kbd.el	/^(defvar kbd-key:named-key-regexp$/
kbd-key:normalize	hib-kbd.el	/^(defun kbd-key:normalize (key-series)$/
kbd-key:parse	hib-kbd.el	/^(defun kbd-key:parse (string)$/
kbd-key:remove-delimiters	hib-kbd.el	/^(defun kbd-key:remove-delimiters (str start-delim /
kbd-key:special-sequence-p	hib-kbd.el	/^(defun kbd-key:special-sequence-p (key-series)$/
key	AAA-27.1-BYTECOMP	46
key	AAA-27.1-BYTECOMP~	120
keywords	hsys-org-roam.el~	3
keywords	hsys-youtube.el~	3
kotl/kotl-autoloads.el	Makefile	/^kotl\/kotl-autoloads.el: $(EL_KOTL)$/
koutline	EXAMPLE.kotl	241
label	TODO-ERRORS	48
lambda-key-list	hbut.el	/^(def-edebug-spec lambda-key-list$/
lambda-list	hact.el	/^(def-edebug-spec lambda-list$/
lambda-list	hbut.el	/^(def-edebug-spec lambda-list$/
last-line-p	hui-mouse.el	/^(defun last-line-p ()$/
later	hargs.el~	8
later	hui.el~	8
later	hypb-ert.el~	8
layouts	HY-ANNOUNCE-7.2.1	37
letter	TODO-ORG-TEST.org	11
letters	TODO-ORG-TEST.org	11
level	EXAMPLE.kotl	184
libraries	hargs.el~	28
libraries	hui.el~	19
line	EXAMPLE.kotl	319
line	HY-ANNOUNCE	/^the line:$/
line	HY-ANNOUNCE-7.0.3	167
line	HY-ANNOUNCE-7.0.3	223
line	HY-ANNOUNCE-8.0.0	/^add the line:$/
line	HY-ANNOUNCE-8.0.0~	/^the line:$/
line	HY-USES.kotl	68
lines	EXAMPLE.kotl	319
lines	README	81
lines	README.html~	386
lines	README.md.html~	74
link-to-Info-index-item	hactypes.el	/^(defact link-to-Info-index-item (index-item)$/
link-to-Info-node	hactypes.el	/^(defact link-to-Info-node (string)$/
link-to-bookmark	hactypes.el	/^(defact link-to-bookmark (bookmark)$/
link-to-buffer-tmp	hactypes.el	/^(defact link-to-buffer-tmp (buffer &optional point/
link-to-directory	hactypes.el	/^(defact link-to-directory (directory)$/
link-to-doc	hib-doc-id.el	/^(defact link-to-doc (doc-id)$/
link-to-ebut	hactypes.el	/^(defact link-to-ebut (key &optional key-file)$/
link-to-elisp-doc	hactypes.el	/^(defact link-to-elisp-doc (symbol)$/
link-to-file	hactypes.el	/^(defact link-to-file (path &optional point)$/
link-to-file-line	hactypes.el	/^(defact link-to-file-line (path line-num)$/
link-to-file-line-and-column	hactypes.el	/^(defact link-to-file-line-and-column (path line-nu/
link-to-gbut	hactypes.el	/^(defact link-to-gbut (key &optional _key-file)$/
link-to-ibut	hactypes.el	/^(defact link-to-ibut (name-key &optional but-src p/
link-to-kcell	hactypes.el	/^(defact link-to-kcell (file cell-ref)$/
link-to-mail	hactypes.el	/^(defact link-to-mail (mail-msg-id &optional mail-f/
link-to-org-id	hactypes.el	/^(defact link-to-org-id (id)$/
link-to-org-id-marker	hactypes.el	/^(defact link-to-org-id-marker (marker)$/
link-to-regexp-match	hactypes.el	/^(defact link-to-regexp-match (regexp n source &opt/
link-to-rfc	hactypes.el	/^(defact link-to-rfc (rfc-num)$/
link-to-string-match	hactypes.el	/^(defact link-to-string-match (string n source &opt/
link-to-texinfo-node	hactypes.el	/^(defact link-to-texinfo-node (file node)$/
link-to-web-search	hactypes.el	/^(defact link-to-web-search (service-name search-te/
links	HY-ANNOUNCE-7.0.3	232
links	HY-WHY.kotl	9
links	HY-WHY.kotl	10
links	HY-WHY.kotl	10
links	HY-WHY.kotl	10
list	HY-WHY.kotl	82
lnews:to	hgnus.el	/^(defun lnews:to ()$/
loc	hui.el~	539
low	TODO-S-and-P.csv	1
mail-address	hibtypes.el	/^(defib mail-address ()$/
mail-address-at-p	hibtypes.el	/^(defun mail-address-at-p ()$/
mail-yank-original	hsmail.el	/^(defun mail-yank-original (arg)$/
man-apropos	hibtypes.el	/^(defib man-apropos ()$/
man-show	hactypes.el	/^(defact man-show (topic)$/
man_dir	Makefile	/^man_dir := $(shell pwd)\/man$/
manager	HY-ABOUT	18
manager	HY-ABOUT	56
manager	HYP-MAN.txt	10
manual	Makefile	/^manual: info html pdf$/
manuals	HY-ABOUT	26
map-ebut	hbut.el	/^(defalias 'map-ebut #'ebut:map)$/
map-ibut	hbut.el	/^(defalias 'map-ibut          #'ibut:map)$/
markdown-follow-inline-link-p	hibtypes.el	/^(defun markdown-follow-inline-link-p (opoint)$/
markdown-follow-link-p	hibtypes.el	/^(defun markdown-follow-link-p ()$/
markdown-internal-link	hibtypes.el	/^(defib markdown-internal-link ()$/
marker	TODO-ERRORS	71
marks	HY-WHY.kotl	57
marks	TODO-ERRORS	288
matches	ChangeLog	/^    function matches only strings that start on th/
matches	ChangeLog~	/^    function matches only strings that start on th/
material	COPYING	372
material	COPYING	/^    material by anyone who conveys the material (o/
medium	COPYING	198
menu	hui-mini-ext.el~	3
menubar	TODO-ERRORS	400
menubar	TODO-ERRORS	447
message--yank-original-internal	hsmail.el	/^(defun message--yank-original-internal (arg)$/
messages	ChangeLog	/^    function messages-buffer for getting the *Mess/
messages	ChangeLog~	/^    function messages-buffer for getting the *Mess/
minibuffer	hargs.el~	582
minibuffer	hypb-ert.el~	41
moccur	hmoccur.el	/^(defun moccur (regexp &optional file-regexp no-fol/
moccur-mode	hmoccur.el	/^(define-derived-mode moccur-mode special-mode "Moc/
moccur-mode-display-occurrence	hmoccur.el	/^(defun moccur-mode-display-occurrence ()$/
moccur-mode-goto-occurrence	hmoccur.el	/^(defalias 'moccur-mode-goto-occurrence 'moccur-to)/
moccur-mode-map	hmoccur.el	/^(defvar moccur-mode-map nil)$/
moccur-noselect	hmoccur.el	/^(defun moccur-noselect ()$/
moccur-source-prefix	hmoccur.el	/^(defconst moccur-source-prefix "@loc> "$/
moccur-to	hmoccur.el	/^(defun moccur-to ()$/
model	HY-ABOUT	111
more	hargs.el~	394
mouse-drag-mode-line	hmouse-drv.el	/^(defun mouse-drag-mode-line (start-event)$/
move	hui.el~	1062
must	hui.el~	1330
name	DEMO	/^        function name.$/
name	EXAMPLE.kotl	286
name	FAST-DEMO-ramin.txt	/^         function name;$/
name	FAST-DEMO-ramin.txt~	/^         function name;$/
name	hbut.el~	/^      function name if an Action Button), to displ/
name	hbut.el~	/^      function name.$/
name	HY-TRY.el~	171
name	TODO-ERRORS	58
named	OLD-IBUT-AT-P.el~	27
new	HY-ANNOUNCE-7.0.3	222
new-bin	Makefile	/^new-bin: autoloads $(ELC_KOTL) $(ELC_COMPILE)$/
next	hargs.el~	229
nil	hargs.el~	910
nil	hargs.el~	912
node	EXAMPLE.kotl	/^        node (we call them cells) and just enter t/
node	README	88
node	README.md.html~	82
nodes	README	85
nodes	README.md.html~	79
normalize	AAA-27.1-BYTECOMP	14
normalize	AAA-27.1-BYTECOMP~	20
normalize	TODO-ERRORS	49
not	hargs.el~	128
not	hargs.el~	164
not	hui.el~	636
not	hui.el~	1015
not	hui.el~	1121
not	hui.el~	1221
not	hui.el~	1464
notice	COPYING	199
numbers	TODO-ORG-TEST.org	11
of	hargs.el~	145
of	HYPB-Tutorial-Greenburg.txt	72
of	HYPB-Tutorial-Greenburg.txt~	72
off	EXAMPLE.kotl	379
once	HY-USES.kotl	77
one	OLD-IBUT-AT-P.el~	10
one	OLD-IBUT-AT-P.el~	28
only	EXAMPLE.kotl	168
only	hargs.el~	143
or	COPYING	/^    the Free Software Foundation, either version 3/
or	hui.el~	78
or	HY-ANNOUNCE-7.0.3	226
or	HYPB-Tutorial-Greenburg.txt	72
or	HYPB-Tutorial-Greenburg.txt~	72
org	hsys-org-roam.el~	7
org	hsys-youtube.el~	7
org	HY-ANNOUNCE	2
org	HY-ANNOUNCE	2
org	HY-ANNOUNCE	2
org	HY-ANNOUNCE-7.0.3	2
org	HY-ANNOUNCE-7.0.3	2
org	HY-ANNOUNCE-7.0.3	2
org	HY-ANNOUNCE-7.0.3	2
org	HY-ANNOUNCE-7.1.3	2
org	HY-ANNOUNCE-7.1.3	2
org	HY-ANNOUNCE-7.1.3	2
org	HY-ANNOUNCE-7.1.3	2
org	HY-ANNOUNCE-8.0.0	2
org	HY-ANNOUNCE-8.0.0	2
org	HY-ANNOUNCE-8.0.0	2
org	HY-ANNOUNCE-8.0.0~	2
org	HY-ANNOUNCE-8.0.0~	2
org	HY-ANNOUNCE-8.0.0~	2
org	HY-ANNOUNCE-SHORT-6.0.2	1
org	HY-ANNOUNCE-SHORT-6.0.2	1
org-id	hibtypes.el	/^(defib org-id ()$/
org-id:help	hibtypes.el	/^(defun org-id:help (_hbut)$/
org-internal-target-link	hsys-org.el	/^(defact org-internal-target-link (&optional intern/
org-link	hsys-org.el	/^(defact org-link (&optional link)$/
org-link-outside-org-mode	hibtypes.el	/^(defib org-link-outside-org-mode ()$/
org-radio-target-link	hsys-org.el	/^(defact org-radio-target-link (&optional target)$/
otherwise	FAST-DEMO	11
otherwise	HY-ANNOUNCE	24
otherwise	HY-ANNOUNCE-8.0.0	26
otherwise	HY-ANNOUNCE-8.0.0~	24
otherwise	README.html~	329
otherwise	README.md	14
outline	HY-ANNOUNCE-7.0.3	103
outliner	HYP-MAN.txt	10
p	AAA-27.1-BYTECOMP	8
p	AAA-27.1-BYTECOMP	20
p	AAA-27.1-BYTECOMP~	8
p	AAA-27.1-BYTECOMP~	41
p	hui.el~	1866
p	README.html~	125
p	README.html~	125
p	README.html~	125
p	README.html~	125
p	README.html~	125
p	TODO-ERRORS	8
p	TODO-ERRORS	49
p	TODO-ERRORS	144
p	TODO-ERRORS	187
p	TODO-ERRORS	250
p	TODO-ERRORS	344
package	HYP-MAN.txt	18
package	INSTALL	35
package	INSTALL.orig	45
package	Makefile	/^package: tags doc $(pkg_parent)\/hyperbole-$(HYPB_V/
package-lint	Makefile	/^package-lint:$/
packageclean	Makefile	/^packageclean:$/
packages	HY-USES.kotl	12
packages	INSTALL	32
packages	INSTALL.orig	42
packages	README.html~	461
packages	README.md.html~	162
page	HY-ABOUT	28
page	TODO-MATS-QUES	5
parameter	hargs.el~	805
parameters	ChangeLog	/^    function parameters are not available.  This f/
parameters	ChangeLog~	/^    function parameters are not available.  This f/
parens	HY-USES.kotl	61
patch-msg	hibtypes.el	/^(defib patch-msg ()$/
pathname	hibtypes.el	/^(defib pathname ()$/
pathname-line-and-column	hibtypes.el	/^(defib pathname-line-and-column ()$/
paths	HY-ANNOUNCE-7.0.3	170
pdf	Makefile	/^pdf: $(man_dir)\/hyperbole.pdf$/
pdf	Makefile.html	/^pdf: $(man_dir)\/hyperbole.pdf$/
pkg	Makefile	/^pkg: package$/
pkg_hyperbole	Makefile	/^pkg_hyperbole = $(pkg_parent)\/hyperbole-$(HYPB_VER/
pkg_parent	Makefile	/^pkg_parent = \/tmp$/
pkgclean	Makefile	/^pkgclean: packageclean$/
pkgclean	Makefile.html	/^pkgclean: packageclean$/
plc	TODO-S-and-P.csv	5
plc	TODO-S-and-P.csv	44
pm	Hyperbole-Orig-Manual-from-Brown.pdf	694
point	EXAMPLE.kotl	179
point	EXAMPLE.kotl	242
point	hargs.el~	897
point	hargs.el~	898
positions	HY-TRY.el~	174
powerful	HY-ABOUT	56
powerful	HY-ANNOUNCE-7.2.1	46
precisely	HY-ANNOUNCE-7.2.1	38
prior	hui.el~	1122
prior	hui.el~	1222
program	hui-2-tests.el~	49
programs	COPYING	20
programs	HY-ABOUT	119
prompted	EXAMPLE.kotl	219
property	TODO-ERRORS	344
property	TODO-ERRORS	516
protect	hui-2-tests.el~	75
python-tb-previous-line	hibtypes.el	/^(defib python-tb-previous-line ()$/
quickly	HY-USES.kotl	99
quit	TODO-ERRORS	250
quit-window	hmouse-drv.el	/^(defalias 'quit-window 'hkey-help-hide)$/
quoted	hargs.el~	184
r	Hyperbole-Orig-Manual-from-Brown.pdf	33
ramin-new-bookmark	RAMIN-BOOKMARKS.el	/^(defun ramin-new-bookmark ()$/
ramin-new-bookmark-suggest-file-name	RAMIN-BOOKMARKS.el	/^(defun ramin-new-bookmark-suggest-file-name ()$/
rather	ChangeLog	/^    function rather than replacing any existing ho/
rather	ChangeLog~	/^    function rather than replacing any existing ho/
readers	HY-ABOUT	127
readers	README.md.html~	352
records	HY-USES.kotl	97
reference	hui.el~	1129
reference	hui.el~	1230
reference	TODO-ERRORS	48
referent	TODO-ERRORS	287
referents	FAST-DEMO~	54
referents	HY-CONCEPTS.kotl	28
region	HYNOTE.kotl	/^         1b1a. Title should come from active regio/
region	HYNOTE.kotl~	/^         1b1a. Title should come from active regio/
region-to-file-name	RAMIN-BOOKMARKS.el	/^(defun region-to-file-name (start end &optional ex/
register-val-describe	hui-register.el	/^(cl-defmethod register-val-describe ((val hui-regi/
register-val-insert	hui-register.el	/^(cl-defmethod register-val-insert ((val hui-regist/
register-val-jump-to	hui-register.el	/^(cl-defmethod register-val-jump-to ((val hui-regis/
release	Makefile	/^release: git-pull git-verify-no-update package $(p/
remove-elc	Makefile	/^remove-elc:$/
rename	AAA-27.1-BYTECOMP	19
rename	AAA-27.1-BYTECOMP	20
rename	AAA-27.1-BYTECOMP~	40
rename	AAA-27.1-BYTECOMP~	41
report	TODO-ERRORS	82
resource	ORG-LINKS.txt	1
rfc	hibtypes.el	/^(defib rfc ()$/
rfc-toc	hactypes.el	/^(defact rfc-toc (&optional buf-name opoint section/
rfc-toc	hibtypes.el	/^(defib rfc-toc ()$/
rgum	hargs.el~	21
ripgrep-msg	hibtypes.el	/^(defib ripgrep-msg ()$/
rmail:init	hmail.el	/^(defun rmail:init ()$/
rmail:msg-hdr-prefix	hmail.el	/^(defvar rmail:msg-hdr-prefix "\\\\(^Date: \\\\|\\n\\nFro/
rmail:msg-id-get	hmail.el	/^(defun rmail:msg-id-get ()$/
rnews:summ-msg-to	hgnus.el	/^(defun rnews:summ-msg-to ()$/
rnews:to	hgnus.el	/^(defun rnews:to ()$/
rows	HY-WHY.kotl	83
rule	NOTES.txt	1
rule	NOTES.txt~	1
sam	hargs.el~	155
search	OLD-IBUT-AT-P.el~	41
section	FAST-DEMO~	62
section	INSTALL	33
section	INSTALL.orig	43
section	README.html~	462
section	README.md.html~	163
select	TODO-ERRORS	287
separated	hui.el~	1463
separator	EXAMPLE.kotl	409
separator	HY-CONCEPTS.kotl	168
separator	HYROLO-EXAMPLES.kotl	23
separator	HY-USES.kotl	126
separator	PROS-CONS.kotl	34
separator	PROS-CONS.kotl~	11
seq-string-replace-regexp	RAMIN-BOOKMARKS.el	/^(defun seq-string-replace-regexp (string regexp-se/
series	HY-USES.kotl	/^  12. Embed brace-delimited key series (multiple k/
servers	NOTES.txt	101
servers	NOTES.txt~	101
set	AAA-27.1-BYTECOMP	7
set	AAA-27.1-BYTECOMP~	7
set:add	set.el	/^(defun set:add (elt set)$/
set:combinations	set.el	/^(defun set:combinations (set &optional arity)$/
set:create	set.el	/^(defun set:create (&rest elements)$/
set:delete	set.el	/^(defalias 'set:delete #'set:remove)$/
set:difference	set.el	/^(defun set:difference (&rest sets)$/
set:empty	set.el	/^(defun set:empty (set)$/
set:equal	set.el	/^(defun set:equal (set1 set2)$/
set:equal-op	set.el	/^(defvar set:equal-op 'equal$/
set:get	set.el	/^(defun set:get (key set)$/
set:intersection	set.el	/^(defun set:intersection (&rest sets)$/
set:is	set.el	/^(defun set:is (obj)$/
set:map	set.el	/^(defalias 'set:map #'mapcar)$/
set:member	set.el	/^(defun set:member (elt set)$/
set:members	set.el	/^(defun set:members (list)$/
set:remove	set.el	/^(defun set:remove (elt set)$/
set:remove-key-value	set.el	/^(defun set:remove-key-value (key set)$/
set:replace	set.el	/^(defun set:replace (old-elt new-elt set)$/
set:replace-key-value	set.el	/^(defun set:replace-key-value (key value set)$/
set:size	set.el	/^(defalias 'set:size #'length)$/
set:subset	set.el	/^(defun set:subset (sub set)$/
set:union	set.el	/^(defun set:union (&rest sets)$/
shell	TODO-ERRORS	34
shifted	hargs.el~	919
short	README	73
short	README.html~	380
short	README.md.html~	64
sions to i	hargs.el~	25
site	HY-WHY.kotl	23
sizes	HY-ANNOUNCE-7.2.1	36
smail:comment	hsmail.el	/^(defvar smail:comment nil$/
smail:comment-add	hsmail.el	/^(defun smail:comment-add (&optional comment-form)$/
smail:widen	hsmail.el	/^(defun smail:widen ()$/
smart-ancestor-tag-files	hmouse-tag.el	/^(defun smart-ancestor-tag-files (&optional path na/
smart-apropos	hui-mouse.el	/^(defun smart-apropos ()$/
smart-apropos-assist	hui-mouse.el	/^(defun smart-apropos-assist ()$/
smart-asm	hmouse-tag.el	/^(defun smart-asm (&optional identifier next)$/
smart-asm-at-tag-p	hmouse-tag.el	/^(defun smart-asm-at-tag-p (&optional no-flash)$/
smart-asm-include-dirs	hmouse-tag.el	/^(define-obsolete-variable-alias 'smart-asm-include/
smart-asm-include-file	hmouse-tag.el	/^(defun smart-asm-include-file ()$/
smart-asm-include-path	hmouse-tag.el	/^(defcustom smart-asm-include-path nil$/
smart-asm-include-regexp	hmouse-tag.el	/^(defconst smart-asm-include-regexp$/
smart-buffer-menu	hui-mouse.el	/^(defun smart-buffer-menu ()$/
smart-buffer-menu-assist	hui-mouse.el	/^(defun smart-buffer-menu-assist ()$/
smart-buffer-menu-no-marks	hui-mouse.el	/^(defun smart-buffer-menu-no-marks ()$/
smart-c	hmouse-tag.el	/^(defun smart-c (&optional identifier next list-of-/
smart-c++	hmouse-tag.el	/^(defun smart-c++ (&optional identifier next)$/
smart-c++-at-tag-p	hmouse-tag.el	/^(defun smart-c++-at-tag-p ()$/
smart-c++-keywords	hmouse-tag.el	/^(defconst smart-c++-keywords$/
smart-c++-tag	hmouse-tag.el	/^(defun smart-c++-tag (&optional identifier next)$/
smart-c-at-tag-p	hmouse-tag.el	/^(defun smart-c-at-tag-p (&optional no-flash)$/
smart-c-cpp-include-dirs	hmouse-tag.el	/^(define-obsolete-variable-alias 'smart-c-cpp-inclu/
smart-c-cpp-include-path	hmouse-tag.el	/^(defcustom smart-c-cpp-include-path '("\/usr\/includ/
smart-c-include-dirs	hmouse-tag.el	/^(define-obsolete-variable-alias 'smart-c-include-d/
smart-c-include-file	hmouse-tag.el	/^(defun smart-c-include-file ()$/
smart-c-include-path	hmouse-tag.el	/^(defcustom smart-c-include-path nil$/
smart-c-include-regexp	hmouse-tag.el	/^(defconst smart-c-include-regexp$/
smart-c-keywords	hmouse-tag.el	/^(defconst smart-c-keywords$/
smart-c-use-lib-man	hmouse-tag.el	/^(defcustom smart-c-use-lib-man nil$/
smart-calendar	hui-mouse.el	/^(defun smart-calendar ()$/
smart-calendar-assist	hui-mouse.el	/^(defun smart-calendar-assist ()$/
smart-cc-mode-initialize	hmouse-tag.el	/^(defun smart-cc-mode-initialize ()$/
smart-company-help	hui-mouse.el	/^(defun smart-company-help (event)$/
smart-company-to-definition	hui-mouse.el	/^(defun smart-company-to-definition (event)$/
smart-completion-help	hui-mouse.el	/^(defun smart-completion-help ()$/
smart-coords-in-window-p	hui-window.el	/^(defun smart-coords-in-window-p (coords window)$/
smart-custom	hui-mouse.el	/^(defun smart-custom ()$/
smart-custom-assist	hui-mouse.el	/^(defun smart-custom-assist ()$/
smart-debbugs-gnu	hib-debbugs.el	/^(defun smart-debbugs-gnu ()$/
smart-dired	hui-mouse.el	/^(defun smart-dired ()$/
smart-dired-assist	hui-mouse.el	/^(defun smart-dired-assist ()$/
smart-dired-pathname-up-to-point	hui-mouse.el	/^(defun smart-dired-pathname-up-to-point (&optional/
smart-dired-sidebar	hui-dired-sidebar.el	/^(defun smart-dired-sidebar ()$/
smart-emacs-lisp-mode-p	hmouse-tag.el	/^(defun smart-emacs-lisp-mode-p ()$/
smart-emacs-tags-file	hmouse-tag.el	/^(defcustom smart-emacs-tags-file nil$/
smart-eobp	hui-mouse.el	/^(defun smart-eobp ()$/
smart-eolp	hui-mouse.el	/^(defun smart-eolp ()$/
smart-flash-tag	hmouse-tag.el	/^(defun smart-flash-tag (tag start end)$/
smart-fortran	hmouse-tag.el	/^(defun smart-fortran (&optional identifier next)$/
smart-fortran-at-tag-p	hmouse-tag.el	/^(defun smart-fortran-at-tag-p (&optional no-flash)/
smart-fortran-keywords	hmouse-tag.el	/^(defconst smart-fortran-keywords$/
smart-gnus-article	hui-mouse.el	/^(defun smart-gnus-article ()$/
smart-gnus-article-assist	hui-mouse.el	/^(defun smart-gnus-article-assist ()$/
smart-gnus-group	hui-mouse.el	/^(defun smart-gnus-group ()$/
smart-gnus-group-assist	hui-mouse.el	/^(defun smart-gnus-group-assist ()$/
smart-gnus-summary	hui-mouse.el	/^(defun smart-gnus-summary ()$/
smart-gnus-summary-assist	hui-mouse.el	/^(defun smart-gnus-summary-assist ()$/
smart-helm	hui-mouse.el	/^(defun smart-helm()$/
smart-helm-alive-p	hui-mouse.el	/^(defun smart-helm-alive-p ()$/
smart-helm-assist	hui-mouse.el	/^(defun smart-helm-assist()$/
smart-helm-at	hui-mouse.el	/^(defun smart-helm-at (depress-event)$/
smart-helm-at-header	hui-mouse.el	/^(defun smart-helm-at-header ()$/
smart-helm-get-current-action	hui-mouse.el	/^(defun smart-helm-get-current-action (&optional ac/
smart-helm-line-has-action	hui-mouse.el	/^(defun smart-helm-line-has-action ()$/
smart-helm-resume-helm	hui-mouse.el	/^(defun smart-helm-resume-helm ()$/
smart-helm-to-minibuffer	hui-mouse.el	/^(defun smart-helm-to-minibuffer ()$/
smart-hmail	hui-mouse.el	/^(defun smart-hmail ()$/
smart-hmail-assist	hui-mouse.el	/^(defun smart-hmail-assist ()$/
smart-hyrolo	hui-mouse.el	/^(defun smart-hyrolo ()$/
smart-hyrolo-assist	hui-mouse.el	/^(defalias 'smart-hyrolo-assist #'smart-hyrolo)$/
smart-ibuffer-menu	hui-mouse.el	/^(defun smart-ibuffer-menu ()$/
smart-ibuffer-menu-assist	hui-mouse.el	/^(defun smart-ibuffer-menu-assist ()$/
smart-ibuffer-menu-no-marks	hui-mouse.el	/^(defun smart-ibuffer-menu-no-marks ()$/
smart-image-dired-thumbnail	hui-mouse.el	/^(defun smart-image-dired-thumbnail ()$/
smart-image-dired-thumbnail-assist	hui-mouse.el	/^(defun smart-image-dired-thumbnail-assist ()$/
smart-imenu-display-item-where	hui-mouse.el	/^(defun smart-imenu-display-item-where (item-name i/
smart-imenu-item-at-p	hui-mouse.el	/^(defun smart-imenu-item-at-p (&optional variable-f/
smart-imenu-item-p	hui-mouse.el	/^(defun smart-imenu-item-p (index-key &optional var/
smart-info	hmouse-info.el	/^(defun smart-info ()$/
smart-info-assist	hmouse-info.el	/^(defun smart-info-assist ()$/
smart-java	hmouse-tag.el	/^(defun smart-java (&optional identifier next)$/
smart-java-at-tag-p	hmouse-tag.el	/^(defun smart-java-at-tag-p (&optional no-flash)$/
smart-java-cross-reference	hmouse-tag.el	/^(defun smart-java-cross-reference ()$/
smart-java-include-dirs	hmouse-tag.el	/^(define-obsolete-variable-alias 'smart-java-includ/
smart-java-keywords	hmouse-tag.el	/^(defconst smart-java-keywords$/
smart-java-library-path	hmouse-tag.el	/^(defun smart-java-library-path (library-name)$/
smart-java-oo-browser	hmouse-tag.el	/^(defun smart-java-oo-browser (&optional _junk)$/
smart-java-package-path	hmouse-tag.el	/^(defcustom smart-java-package-path$/
smart-java-package-regexp	hmouse-tag.el	/^(defconst smart-java-package-regexp$/
smart-java-packages	hmouse-tag.el	/^(defun smart-java-packages ()$/
smart-java-tag	hmouse-tag.el	/^(defun smart-java-tag (&optional identifier next)$/
smart-javascript	hmouse-tag.el	/^(defun smart-javascript (&optional identifier next/
smart-javascript-at-tag-p	hmouse-tag.el	/^(defun smart-javascript-at-tag-p (&optional no-fla/
smart-javascript-keywords	hmouse-tag.el	/^(defconst smart-javascript-keywords$/
smart-jedi-find-file	hmouse-tag.el	/^(defun smart-jedi-find-file (file line column othe/
smart-library-symbol	hmouse-tag.el	/^(defun smart-library-symbol (tag)$/
smart-lisp	hmouse-tag.el	/^(defun smart-lisp (&optional show-doc)$/
smart-lisp-at-change-log-tag-p	hmouse-tag.el	/^(defun smart-lisp-at-change-log-tag-p ()$/
smart-lisp-at-definition-p	hmouse-tag.el	/^(defun smart-lisp-at-definition-p ()$/
smart-lisp-at-known-identifier-p	hmouse-tag.el	/^(defun smart-lisp-at-known-identifier-p ()$/
smart-lisp-at-load-expression-p	hmouse-tag.el	/^(defun smart-lisp-at-load-expression-p ()$/
smart-lisp-at-non-htype-tag-p	hmouse-tag.el	/^(defun smart-lisp-at-non-htype-tag-p (&optional no/
smart-lisp-at-tag-p	hmouse-tag.el	/^(defun smart-lisp-at-tag-p (&optional no-flash)$/
smart-lisp-bound-symbol-def	hmouse-tag.el	/^(defun smart-lisp-bound-symbol-def (tag-sym)$/
smart-lisp-find-tag	hmouse-tag.el	/^(defun smart-lisp-find-tag (&optional tag show-doc/
smart-lisp-htype-tag	hmouse-tag.el	/^(defun smart-lisp-htype-tag (tag)$/
smart-lisp-identifier	hmouse-tag.el	/^(defconst smart-lisp-identifier (concat smart-lisp/
smart-lisp-identifier	hyperbole-autoloads.el	/^(defconst smart-lisp-identifier (concat smart-lisp/
smart-lisp-identifier-chars	hmouse-tag.el	/^(defconst smart-lisp-identifier-chars "-_:\/*+=%$&?/
smart-lisp-identifier-chars	hyperbole-autoloads.el	/^(defconst smart-lisp-identifier-chars "-_:\/*+=%$&?/
smart-lisp-identifier-first-char-regexp	hmouse-tag.el	/^(defconst smart-lisp-identifier-first-char-regexp /
smart-lisp-identifier-first-char-regexp	hyperbole-autoloads.el	/^(defconst smart-lisp-identifier-first-char-regexp /
smart-lisp-mode-p	hmouse-tag.el	/^(defun smart-lisp-mode-p ()$/
smart-magit	hui-mouse.el	/^(defun smart-magit ()$/
smart-magit-assist	hui-mouse.el	/^(defun smart-magit-assist ()$/
smart-magit-display-file	hui-mouse.el	/^(defun smart-magit-display-file (return-command)$/
smart-magit-tab	hui-mouse.el	/^(defun smart-magit-tab (section)$/
smart-man-c-routine-ref	hui-mouse.el	/^(defun smart-man-c-routine-ref ()$/
smart-man-display	hui-mouse.el	/^(defun smart-man-display (lisp-form)$/
smart-man-entry-ref	hui-mouse.el	/^(defun smart-man-entry-ref ()$/
smart-man-file-ref	hui-mouse.el	/^(defun smart-man-file-ref ()$/
smart-objc	hmouse-tag.el	/^(defun smart-objc (&optional identifier next)$/
smart-objc-at-tag-p	hmouse-tag.el	/^(defun smart-objc-at-tag-p (&optional no-flash)$/
smart-objc-keywords	hmouse-tag.el	/^(defconst smart-objc-keywords$/
smart-objc-oo-browser	hmouse-tag.el	/^(defun smart-objc-oo-browser (&optional _junk)$/
smart-objc-tag	hmouse-tag.el	/^(defun smart-objc-tag (&optional identifier next)$/
smart-org	hui-mouse.el	/^(defun smart-org ()$/
smart-outline	hui-mouse.el	/^(defun smart-outline ()$/
smart-outline-assist	hui-mouse.el	/^(defun smart-outline-assist ()$/
smart-outline-char-invisible-p	hui-mouse.el	/^(defun smart-outline-char-invisible-p (&optional p/
smart-outline-cut	hui-mouse.el	/^(defvar smart-outline-cut nil$/
smart-outline-level	hui-mouse.el	/^(defun smart-outline-level ()$/
smart-outline-subtree-hidden-p	hui-mouse.el	/^(defun smart-outline-subtree-hidden-p ()$/
smart-outline-to-entry-end	hui-mouse.el	/^(defun smart-outline-to-entry-end (&optional inclu/
smart-point-of-coords	hui-window.el	/^(defun smart-point-of-coords (coords)$/
smart-push-button	hui-mouse.el	/^(defun smart-push-button (&optional _pos _use-mous/
smart-push-button-help	hui-mouse.el	/^(defun smart-push-button-help (&optional pos use-m/
smart-python	hmouse-tag.el	/^(defun smart-python (&optional identifier next)$/
smart-python-at-tag-p	hmouse-tag.el	/^(defun smart-python-at-tag-p (&optional no-flash)$/
smart-python-jedi-to-definition-p	hmouse-tag.el	/^(defun smart-python-jedi-to-definition-p ()$/
smart-python-keywords	hmouse-tag.el	/^(defconst smart-python-keywords$/
smart-python-oo-browser	hmouse-tag.el	/^(defun smart-python-oo-browser (&optional _junk)$/
smart-python-tag	hmouse-tag.el	/^(defun smart-python-tag (&optional identifier next/
smart-scroll-down	hmouse-drv.el	/^(defun smart-scroll-down ()$/
smart-scroll-proportional	hsettings.el	/^(defcustom smart-scroll-proportional t$/
smart-scroll-up	hmouse-drv.el	/^(defun smart-scroll-up ()$/
smart-tags-display	hmouse-tag.el	/^(defun smart-tags-display (tag next &optional list/
smart-tags-file-list	hmouse-tag.el	/^(defun smart-tags-file-list (&optional curr-dir-or/
smart-tags-file-path	hmouse-tag.el	/^(defun smart-tags-file-path (file)$/
smart-tags-find-p	hmouse-tag.el	/^(defun smart-tags-find-p (tag)$/
smart-tags-noselect-function	hmouse-tag.el	/^(defun smart-tags-noselect-function ()$/
smart-tags-org-src-block-p	hmouse-tag.el	/^(defun smart-tags-org-src-block-p ()$/
smart-tar	hui-mouse.el	/^(defun smart-tar ()$/
smart-tar-assist	hui-mouse.el	/^(defun smart-tar-assist ()$/
smart-todotxt	hui-mouse.el	/^(defun smart-todotxt ()$/
smart-todotxt-assist	hui-mouse.el	/^(defun smart-todotxt-assist ()$/
smart-treemacs	hui-treemacs.el	/^(defun smart-treemacs ()$/
smart-treemacs-modeline	hui-treemacs.el	/^(defun smart-treemacs-modeline ()$/
smart-window-of-coords	hui-window.el	/^(defun smart-window-of-coords (coords)$/
so	hui-2-tests.el~	95
social-reference	hib-social.el	/^(defib social-reference ()$/
social-reference	hib-social.el	/^(defun social-reference (service ref-kind-str hash/
software	COPYING	22
spaces	TODO-ERRORS	345
src	AAA-27.1-BYTECOMP	19
src	AAA-27.1-BYTECOMP~	40
src	Makefile	/^src: autoloads tags$/
src	README.html~	326
src	README.html~	389
src	README.html~	488
src	README.html~	500
src	README.md	95
st mouse e	hargs.el~	654
start	hargs.el~	171
status	TODO-ERRORS	82
str	hargs.el~	585
str	hargs.el~	587
string	hypb-ert.el~	24
string	TODO-ERRORS	71
string	TODO-ERRORS	343
string-to-file-name	RAMIN-BOOKMARKS.el	/^(defun string-to-file-name (string &optional ext)$/
string-to-file-name-max-length	RAMIN-BOOKMARKS.el	/^(defcustom string-to-file-name-max-length 150$/
stripped	hargs.el~	90
substitute-in-file-name	hpath.el	/^(defun substitute-in-file-name (filename)$/
sure	FAST-DEMO	86
sure	HYPB-Tutorial-Greenburg.txt	26
sure	HYPB-Tutorial-Greenburg.txt~	26
symbol	hui-mini-ext.el~	83
symbol	HY-USES.kotl	68
symset:add	hact.el	/^(defun    symset:add (elt symbol property)$/
symset:clear	hact.el	/^(defun    symset:clear (symbol)$/
symset:create	hact.el	/^(defun    symset:create (symbol property &rest sym/
symset:delete	hact.el	/^(defalias 'symset:delete #'symset:remove)$/
symset:get	hact.el	/^(defun    symset:get (symbol property)$/
symset:remove	hact.el	/^(defun    symset:remove (elt symbol property)$/
symtable:actype-p	hact.el	/^(defsubst symtable:actype-p (symbol-or-name)$/
symtable:actypes	hact.el	/^(defvar   symtable:actypes (symtable:create "actyp/
symtable:add	hact.el	/^(defun    symtable:add (symbol-or-name symtable)$/
symtable:category-plist	hact.el	/^(defvar symtable:category-plist nil$/
symtable:create	hact.el	/^(defun    symtable:create (name size)$/
symtable:delete	hact.el	/^(defalias 'symtable:delete #'symtable:remove)$/
symtable:get	hact.el	/^(defun    symtable:get (symbol-or-name symtable)$/
symtable:hash-table	hact.el	/^(defsubst symtable:hash-table (symtable)$/
symtable:hyperbole-actype-p	hact.el	/^(defsubst symtable:hyperbole-actype-p (symbol-or-n/
symtable:ibtype-p	hact.el	/^(defsubst symtable:ibtype-p (symbol-or-name)$/
symtable:ibtypes	hact.el	/^(defvar   symtable:ibtypes (symtable:create "ibtyp/
symtable:name	hact.el	/^(defsubst symtable:name (symtable)$/
symtable:operate	hact.el	/^(defun    symtable:operate (operation symbol-or-na/
symtable:remove	hact.el	/^(defun    symtable:remove (symbol-or-name symtable/
symtable:select	hact.el	/^(defsubst symtable:select (type-category)$/
system	HY-ABOUT	18
system	README.md.html~	222
t	hargs.el~	1
t	hsys-org-roam.el~	1
t	hsys-youtube.el~	1
t	hui-2-tests.el~	61
t	hui-2-tests.el~	97
t	hui.el~	1
t	hypb-ert.el~	1
t	hyperbole-pkg.el~	1
t	HY-TRY.el~	68
tab	hargs.el~	565
tags	HY-USES.kotl	63
tags	Makefile	/^tags: TAGS$/
tags	Makefile.html	/^tags: TAGS$/
tell	hui.el~	1332
test	Makefile	/^test: test-ert$/
test-all	Makefile	/^test-all:$/
test-all-output	Makefile	/^test-all-output:$/
test-ert	Makefile	/^test-ert:$/
test-hbuts-activate	test-hbuts.lisp	/^(defun test-hbuts-activate (display-delay-time obu/
test-hbuts-and-display-from-point	test-hbuts.lisp	/^(defun test-hbuts-and-display-from-point ()$/
test-hbuts-delay-time	test-hbuts.lisp	/^(defvar test-hbuts-delay-time 0.10$/
test-hbuts-from-point	test-hbuts.lisp	/^(defun test-hbuts-from-point (display-delay-time)$/
tests	hypb-ert.el~	27
tests	Makefile	/^tests: test$/
texi	V9-For-HY-NEWS.org~	/^* man\/hyperbole.texi (HyRolo Keys):$/
texinfo-ref	hibtypes.el	/^(defib texinfo-ref ()$/
text-toc	hactypes.el	/^(defact text-toc (section)$/
text-toc	hibtypes.el	/^(defib text-toc ()$/
that	ChangeLog	/^    function that uses the selected window point f/
that	ChangeLog~	/^    function that uses the selected window point f/
that	hargs.el~	89
the	hargs.el~	434
the	hypb-ert.el~	99
the	hypb-ert.el~	100
them	HYPB-Tutorial-Greenburg.txt	66
them	HYPB-Tutorial-Greenburg.txt~	66
them	HY-USES.kotl	21
themselves	HY-ANNOUNCE-7.2.1	43
these	OLD-IBUT-AT-P.el~	59
time	HY-ANNOUNCE	85
time	HY-ANNOUNCE-8.0.0	80
time	HY-ANNOUNCE-8.0.0~	79
tion i	hui.el~	1332
tion of	COPYING	192
to	ChangeLog	/^    function to interactively grep over org-roam f/
to	ChangeLog	/^    function to apply to all paths given as inputs/
to	ChangeLog	/^    function to this hbut one since is now used by/
to	ChangeLog	/^    function to handle invisible newlines.$/
to	ChangeLog	/^    function to hmouse-key.el since the issue that/
to	ChangeLog	/^    function to show the context and values from e/
to	ChangeLog~	/^    function to interactively grep over org-roam f/
to	ChangeLog~	/^    function to apply to all paths given as inputs/
to	ChangeLog~	/^    function to this hbut one since is now used by/
to	ChangeLog~	/^    function to handle invisible newlines.$/
to	ChangeLog~	/^    function to hmouse-key.el since the issue that/
to	ChangeLog~	/^    function to show the context and values from e/
to	hargs.el~	136
to	hargs.el~	645
to	hpath-save.le	/^function to call with FILENAME as its single argum/
to	hui.el~	1726
to	HY-ANNOUNCE-7.0.3	231
to	hyperbole-autoloads.el~	/^function to bind it:$/
to	TODO-ERRORS	59
to	TODO-ERRORS	59
to	TODO-ERRORS	59
to	TODO-ERRORS	59
to	TODO-ERRORS	60
too	HY-USES.kotl	/^      Org tables in Koutlines too (in the latest g/
trees	HY-ABOUT	/^    information organized into trees (hierarchies)/
type	EXAMPLE.kotl	407
type	HY-CONCEPTS.kotl	166
type	HYP-MAN.txt	8
type	HYP-MAN.txt	8
type	HYROLO-EXAMPLES.kotl	21
type	HY-USES.kotl	124
type	PROS-CONS.kotl	32
type	PROS-CONS.kotl~	9
type	TODO-ORG-TEST.org	4
types	HY-CONCEPTS.kotl	30
ul	README.html~	132
unique	EXAMPLE.kotl	10
unique	HY-ANNOUNCE-7.2.1	46
up	TODO-ERRORS	145
url	hypb-ert.el~	21
use	hui.el~	1834
use	TODO-DEFCUSTOMS	5
used	HY-NEWS	/^      function used to read in each file searched /
user-content-files	README.md.save.html	/^Files<\/h2>$/
user-content-ftp-and-git-repository-downloads	README.md.save.html	/^Ftp and Git Repository Downloads<\/h2>$/
user-content-gnu-hyperbole-800---the-everyday-hypertextual-information-manager	README.md.save.html	/^GNU Hyperbole 8.0.0 - The Everyday Hypertextual In/
user-content-hyperbole-buttons	README.md.save.html	/^Hyperbole Buttons<\/h2>$/
user-content-hyperbole-components	README.md.save.html	/^Hyperbole Components<\/h2>$/
user-content-hyperbole-uses	README.md.save.html	/^Hyperbole Uses<\/h2>$/
user-content-important-features	README.md.save.html	/^Important Features<\/h2>$/
user-content-installation	README.md.save.html	/^Installation<\/h2>$/
user-content-invocation	README.md.save.html	/^Invocation<\/h2>$/
user-content-mailing-lists	README.md.save.html	/^Mailing Lists<\/h2>$/
user-content-programmer-quick-reference	README.md.save.html	/^Programmer Quick Reference<\/h2>$/
user-content-summary	README.md.save.html	/^Summary<\/h2>$/
user-content-user-quotes	README.md.save.html	/^User Quotes<\/h2>$/
user-content-why-was-hyperbole-developed	README.md.save.html	/^Why was Hyperbole developed?<\/h2>$/
v2	TODO-ERRORS	425
var::append-list	hvar.el	/^(defvar var::append-list nil$/
var::append-list	hvar.el	/^(defvar var::append-list nil$/
var:add-and-run-hook	hvar.el	/^(defun var:add-and-run-hook (hook hook-function)$/
var:append	hvar.el	/^(defun var:append (var-symbol list-to-add)$/
var:append-all	hvar.el	/^(defun var:append-all ()$/
var:remove	hvar.el	/^(defun var:remove (var-symbol list-to-remove)$/
var:remove-all	hvar.el	/^(defun var:remove-all ()$/
var:run-hook-in-matching-buffers	hvar.el	/^(defun var:run-hook-in-matching-buffers (mode hook/
variable	EXAMPLE.kotl	70
variable	FAST-DEMO	153
variable	FAST-DEMO~	53
variable	FAST-DEMO~	73
variable	HY-ANNOUNCE-7.0.3	99
variables	FAST-DEMO	147
variables	FAST-DEMO~	67
variables	hargs.el~	39
variables	hargs.el~	861
variables	hui.el~	36
variables	hui.el~	1879
variables	stef.patch	6
version	COPYING	374
version	Makefile	/^version:$/
version	Makefile.html	/^version: doc$/
vertico-goto-candidate	HY-TRY.el	/^(defun vertico-goto-candidate (candidate)$/
vertico-insert-candidate	HY-TRY.el	/^(defun vertico-insert-candidate (candidate)$/
vertico-mouse--candidate-map	HY-TRY.el	/^(defun vertico-mouse--candidate-map (index)$/
vertico-mouse-map	HY-TRY.el	/^(defvar-keymap vertico-mouse-map$/
vertico-select-candidate	HY-TRY.el	/^(defib vertico-select-candidate ()$/
view	TODO-ERRORS	289
visible	EXAMPLE.kotl	150
vm-assimilate-new-messages	hvm.el	/^(defun vm-assimilate-new-messages (&optional$/
vm-edit-message-end	hvm.el	/^(defun vm-edit-message-end ()$/
vm-edit-message-mode	hvm.el	/^(defvar vm-edit-message-mode nil$/
vm-edit-mode	hvm.el	/^(defun vm-edit-mode ()$/
vm-force-mode-line-update	hvm.el	/^(defun vm-force-mode-line-update ()$/
vm-goto-message-at-point	hvm.el	/^(defun vm-goto-message-at-point ()$/
vm-scroll-forward-internal	hvm.el	/^(defun vm-scroll-forward-internal (arg)$/
vm-show-current-message	hvm.el	/^(defun vm-show-current-message ()$/
vm-widen-page	hvm.el	/^(defun vm-widen-page ()$/
void	COPYING	411
výx¯hÕmVæ	Hyperbole-Orig-Manual-from-Brown.pdf	694
warranty	COPYING	202
wconfig-ring-max	hywconfig.el	/^(define-obsolete-variable-alias 'wconfig-ring-max /
website	Makefile	/^website: website-local$/
website-local	Makefile	/^website-local: README.md.html$/
well	EXAMPLE.kotl	187
when	hargs.el~	185
when	hmouse-tag.el~	/^function when the OO-Browser has been loaded.$/
when	hmouse-tag.el~	/^function when the OO-Browser has been loaded.$/
when	hmouse-tag.el~	/^function when the OO-Browser has been loaded.$/
when	hmouse-tag.el~	/^function when the OO-Browser has been loaded.$/
when	hui.el~	136
when	hyperbole-autoloads.el~	/^function when the OO-Browser has been loaded.$/
when	hyperbole-autoloads.el~	/^function when the OO-Browser has been loaded.$/
when	hyperbole-autoloads.el~	/^function when the OO-Browser has been loaded.$/
when	hyperbole-autoloads.el~	/^function when the OO-Browser has been loaded.$/
where	hui.el~	1725
whether	OLD-IBUT-AT-P.el~	9
which	ChangeLog	/^    function which did not support provision of a /
which	ChangeLog~	/^    function which did not support provision of a /
which	hui-2-tests.el~	94
which	hynote.el~	/^entry which begins with the parent string."$/
which	hynote-unused	/^entry which begins with the parent string."$/
which	hyperbole-autoloads.el~	/^entry which begins with the parent string.$/
which	hyperbole-autoloads.el~	/^entry which begins with the parent string.$/
whitespace	EXAMPLE.kotl	155
window	TODO-ERRORS	187
window	TODO-ERRORS	250
window	TODO-ERRORS	313
windows	HY-WHY.kotl	/^         {63 C-c @} creates 6 rows, each with 3 co/
with	ChangeLog	/^    function with a doc string, then it will use t/
with	ChangeLog~	/^    function with a doc string, then it will use t/
with	hargs.el~	401
word	HY-USES.kotl	67
word	TODO-ORG-TEST.org	10
work	COPYING	187
work	COPYING	190
work	HYPB-Tutorial-Greenburg.txt	62
work	HYPB-Tutorial-Greenburg.txt~	62
www-url	hsys-www.el	/^(defib www-url ()$/
www-url	hsys-www.el	/^(defact www-url (url)$/
www-url-expand-file-name	hsys-www.el	/^(defun www-url-expand-file-name (path &optional di/
www-url-find-file-noselect	hsys-www.el	/^(defun www-url-find-file-noselect (path &rest args/
yanked	HY-NEWS	/^      entry yanked into the current buffer with {C/
yt-info	hsys-youtube.el	/^(defact yt-info (video-id)$/
yt-info	hyperbole-autoloads.el	/^(defact yt-info (video-id) "Display a web page wit/
yt-play	hsys-youtube.el	/^(defact yt-play (video-id &optional start-time-str/
yt-play	hyperbole-autoloads.el	/^(defact yt-play (video-id &optional start-time-str/
yt-search	hsys-youtube.el	/^(defact yt-search (search-term)$/
yt-search	hyperbole-autoloads.el	/^(defact yt-search (search-term) "Search Youtube fo/
yt-url	hsys-youtube.el	/^(defact yt-url (video-id &optional start-time-stri/
yt-url	hyperbole-autoloads.el	/^(defact yt-url (video-id &optional start-time-stri/
